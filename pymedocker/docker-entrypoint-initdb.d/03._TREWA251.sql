--
-- Create Schema Script 
--   Database Version   : 11.2.0.4.0 
--   DB Connect String  : TREWA 
--   Schema             : TREWA 
--   Script Created by  : SYSTEM 
--   Script Created at  : 30/05/2016 11:46:52 
--   Physical Location  :  
--   Notes              :  
--

-- Object Counts: 
--   Functions: 1       Lines of Code: 8 
--   Indexes: 401       Columns: 539        
--   Sequences: 95 
--   Tables: 127        Columns: 1801       Constraints: 552    
--   Triggers: 132 
--   Views: 127         


CREATE SEQUENCE &OWNER..GN_S_STMA
  START WITH 3
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..GN_S_TIID_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..GN_S_TIOR
  START WITH 12
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..GN_S_TIOR_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..GN_S_TIVA_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..GN_S_UORG
  START WITH 2
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..SEQ_NUM
  START WITH 61
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_ACC
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_AMLE
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_AMLE_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_AVCA
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_BLOQ
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_BLPE
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_CADU
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_CAEV
  START WITH 62
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_CAEX
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_CALE
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_COAC
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_COCE
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_COM
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_COMP
  START WITH 11
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_CONS_PLANTMULT
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DACO
  START WITH 60
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DAPA
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DATC
  START WITH 62
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DDPG
  START WITH 9
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DODE
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DOEX
  START WITH 118
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DOEXB
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_DOPE
  START WITH 98
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_ESEL
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_EXEF
  START WITH 68
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_EXPE
  START WITH 75
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_EXPEB
  START WITH 2
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_EXTG
  START WITH 91
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_FASE
  START WITH 52
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_FIDE
  START WITH 3
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_FIDO
  START WITH 41
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_FIRM
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_FOEN
  START WITH 34
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_IMG
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_INFI
  START WITH 4
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_INTE
  START WITH 8
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_LIRE
  START WITH 7
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_LOGA
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_META
  START WITH 28
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;
  
CREATE SEQUENCE &OWNER..TR_S_METADATO
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER; 


CREATE SEQUENCE &OWNER..TR_S_METG
  START WITH 30
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_MOCA
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_NOEN
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_NORM
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_NOTG
  START WITH 194
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PADO
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PARA
  START WITH 5
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PATA
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PATI
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PEUS
  START WITH 18
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PLAN
  START WITH 2
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PLPR
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_PMDO
  START WITH 31
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_RAIN
  START WITH 5
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_RAIN_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_REEX
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_REIN
  START WITH 7
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_RELA
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_REM
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_REMI
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_REOP
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_SIM
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TAEX
  START WITH 8
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TCON
  START WITH 3
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TCON_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TDEN
  START WITH 22
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TEDI
  START WITH 2
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIAC
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TICO
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TICO_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIDO
  START WITH 72
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIEV
  START WITH 6
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIEX
  START WITH 4
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIIN
  START WITH 11
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIIN_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TINO
  START WITH 96
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TINO_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIPA
  START WITH 24
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIPAGO
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIPU
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIPU_ABREV
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TIRE
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TPCR
  START WITH 5
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TRAG
  START WITH 94
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_TRAN
  START WITH 92
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_UOEX
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_UOPR
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_USAS
  START WITH 1
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE SEQUENCE &OWNER..TR_S_VARI
  START WITH 33
  MAXVALUE 9999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE TABLE &OWNER..GN_CONSTANTES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_CONSTANTE     VARCHAR2(10 BYTE)             NOT NULL,
  D_CONSTANTE     VARCHAR2(64 BYTE)             NOT NULL,
  V_CONSTANTE     VARCHAR2(80 BYTE)             NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_EMPLEADOS
(
  CREADO              VARCHAR2(32 BYTE)         NOT NULL,
  F_CREACION          DATE                      NOT NULL,
  MODIFICADO          VARCHAR2(32 BYTE)         NOT NULL,
  F_MODIFICA          DATE                      NOT NULL,
  USUA_C_USUARIO      VARCHAR2(10 BYTE)         NOT NULL,
  PUOR_X_UORG         NUMBER(10)                NOT NULL,
  PUOR_C_PUESTO_TRAB  VARCHAR2(10 BYTE)         NOT NULL,
  V_TIPO              VARCHAR2(1 BYTE)          DEFAULT 'F'                   NOT NULL,
  F_NOMBRAMIENTO      DATE                      NOT NULL,
  F_CESE              DATE,
  T_TRATAMIENTO       VARCHAR2(64 BYTE),
  T_REFERENCIA        VARCHAR2(10 BYTE),
  CREADO_API          VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL,
  MODIFICADO_API      VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_ERRORES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_ORIERR        VARCHAR2(3 BYTE)              DEFAULT 'APL'                 NOT NULL,
  C_ERROR         VARCHAR2(5 BYTE)              NOT NULL,
  D_ERROR         VARCHAR2(80 BYTE)             NOT NULL,
  L_ALERTA        VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  L_SUPWRN        VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'E'                   NOT NULL,
  T_AMPERR        VARCHAR2(500 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_MOD_INVOCAR
(
  CREADO             VARCHAR2(32 BYTE)          NOT NULL,
  F_CREACION         DATE                       NOT NULL,
  MODIFICADO         VARCHAR2(32 BYTE)          NOT NULL,
  F_MODIFICA         DATE                       NOT NULL,
  MDLO_C_MODULO      VARCHAR2(10 BYTE)          NOT NULL,
  MDLO_C_MODULO_INV  VARCHAR2(10 BYTE)          NOT NULL,
  L_MAS_DATOS        VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL,
  L_IR_A             VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL,
  CREADO_API         VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  MODIFICADO_API     VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_REGISTROS_DOCEXP
(
  CREADO          VARCHAR2(30 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  DOEX_X_DOEX     NUMBER(10)                    NOT NULL,
  REG_C_REGISTRO  VARCHAR2(20 BYTE)             NOT NULL,
  REG_T_TIPO_REG  VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_RELACIONES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_RELA          NUMBER(10)                    NOT NULL,
  TIRE_X_TIRE     NUMBER(10)                    NOT NULL,
  D_DESCRIPCION   VARCHAR2(200 BYTE)            NOT NULL,
  FASE_X_FASE_A   NUMBER(10),
  FASE_X_FASE_B   NUMBER(10),
  TRAN_X_TRAN     NUMBER(10),
  TIDO_X_TIDO     NUMBER(10),
  TIEV_X_TIEV     NUMBER(10),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_RELACIONES_EXPEDIENTE
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_REEX           NUMBER(10)                   NOT NULL,
  EXPE_X_EXPE      NUMBER(10)                   NOT NULL,
  V_TIPO_RELACION  VARCHAR2(1 BYTE)             DEFAULT 'I'                   NOT NULL,
  T_NUM_EXP        VARCHAR2(30 BYTE),
  T_TITULO_EXP     VARCHAR2(250 BYTE),
  T_OBSERVACIONES  VARCHAR2(250 BYTE),
  EXPE_X_EXPE_INT  NUMBER(10),
  COMP_X_COMP      NUMBER(10),
  EXPE_X_EXPE_EXT  NUMBER(10),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_RELACIONES_INTERESADO
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  INTE_X_INTE_INI  NUMBER(10)                   NOT NULL,
  INTE_X_INTE_FIN  NUMBER(10)                   NOT NULL,
  TCON_X_TCON      NUMBER(10)                   NOT NULL,
  X_REIN           NUMBER(10)                   NOT NULL,
  F_INI_VIG        DATE                         DEFAULT SYSDATE               NOT NULL,
  F_FIN_VIG        DATE,
  L_REPRESENTA     VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_PENDIENTE      VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  TIEV_X_TIEV      NUMBER(10),
  F_REVOCA         DATE,
  F_RECHAZO        DATE,
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_REMISIONES
(
  CREADO             VARCHAR2(32 BYTE)          NOT NULL,
  F_CREACION         DATE                       NOT NULL,
  MODIFICADO         VARCHAR2(32 BYTE)          NOT NULL,
  F_MODIFICA         DATE                       NOT NULL,
  X_REMI             NUMBER(10,2)               NOT NULL,
  EXPE_X_EXPE        NUMBER(10,2)               NOT NULL,
  C_CSV_ORIGEN       VARCHAR2(255 BYTE),
  T_SISTEMA_ORIGEN   VARCHAR2(255 BYTE)         NOT NULL,
  T_SISTEMA_DESTINO  VARCHAR2(255 BYTE),
  C_REG_ENTRADA      VARCHAR2(255 BYTE),
  C_REG_SALIDA       VARCHAR2(255 BYTE),
  T_ENTORNO          VARCHAR2(255 BYTE),
  T_VERSION_NTI_JA   VARCHAR2(255 BYTE),
  F_REMISION         DATE                       NOT NULL,
  F_RECEPCION        DATE,
  C_IDENT_LOTE       VARCHAR2(255 BYTE),
  T_&OWNER..SEQ_LOTE         VARCHAR2(255 BYTE),
  CREADO_API         VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  MODIFICADO_API     VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_SIM
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_SIM           NUMBER(10)                    NOT NULL,
  EXPE_X_EXPE     NUMBER(10)                    NOT NULL,
  USUA_C_USU_REC  VARCHAR2(10 BYTE)             NOT NULL,
  F_MENSAJE       DATE                          NOT NULL,
  L_LEIDO         VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  V_PRIORIDAD     VARCHAR2(1 BYTE)              DEFAULT 'M'                   NOT NULL,
  T_MENSAJE       VARCHAR2(250 BYTE)            NOT NULL,
  USUA_C_USU_ENV  VARCHAR2(10 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TAREAS_EXPEDIENTE
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_TAEX           NUMBER(10)                   NOT NULL,
  EXPE_X_EXPE      NUMBER(10)                   NOT NULL,
  BLPE_X_BLPE      NUMBER(10)                   NOT NULL,
  EXEF_X_EXEF      NUMBER(10)                   NOT NULL,
  USUA_C_USUARIO   VARCHAR2(10 BYTE)            NOT NULL,
  F_COMIENZO       DATE                         NOT NULL,
  V_ESTADO         VARCHAR2(1 BYTE)             DEFAULT 'I'                   NOT NULL,
  L_INFORMADO      VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  F_LIMITE         DATE,
  F_FINALIZACION   DATE,
  T_OBSERVACIONES  VARCHAR2(250 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TEXTOS_DISPOSICIONES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TEDI          NUMBER(10)                    NOT NULL,
  T_TEXTO         VARCHAR2(100 BYTE)            NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'D'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPCER_X_TIPOS_EVOL
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  TPCR_X_TPCR     NUMBER(10)                    NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  C_PETICION      VARCHAR2(20 BYTE)             NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPODOC_ENI
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  X_TDEN          NUMBER(10,2)                  NOT NULL,
  C_TIPODOC_ENI   VARCHAR2(4 BYTE)              NOT NULL,
  D_TIPODOC_ENI   VARCHAR2(250 BYTE)            NOT NULL,
  V_ORIGEN        VARCHAR2(1 BYTE),
  V_GRUPO_DOC     VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_ACTOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TIAC          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(200 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_FIRMAS_TIPDOCS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  TIDO_X_TIDO     NUMBER(10)                    NOT NULL,
  FIDE_X_FIDE     NUMBER(10)                    NOT NULL,
  N_ORDEN         NUMBER(1)                     NOT NULL,
  L_EDITABLE      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  T_ETIQUETA      VARCHAR2(20 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_FORMATODOC_ENI
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_FOEN           NUMBER(10,2)                 NOT NULL,
  C_FORMATO_ENI    VARCHAR2(100 BYTE)           NOT NULL,
  C_FORMATO_TREWA  VARCHAR2(100 BYTE)           NOT NULL,
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_IMAGENES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_IMAG          NUMBER(10)                    NOT NULL,
  UORG_X_UORG     NUMBER(10)                    NOT NULL,
  B_IMAGEN        BLOB                          NOT NULL,
  T_FORMATO       VARCHAR2(128 BYTE),
  T_NOMB_FICHERO  VARCHAR2(64 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_INDICACIONES_FICHA
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_INFI          NUMBER(10)                    NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  TIIN_X_TIIN     NUMBER(10)                    NOT NULL,
  D_DESCRIPCION   VARCHAR2(300 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_INTERESADOS
(
  CREADO              VARCHAR2(32 BYTE)         NOT NULL,
  F_CREACION          DATE                      NOT NULL,
  MODIFICADO          VARCHAR2(32 BYTE)         NOT NULL,
  F_MODIFICA          DATE                      NOT NULL,
  X_INTE              NUMBER(10)                NOT NULL,
  TIID_C_ABREVIATURA  VARCHAR2(10 BYTE)         NOT NULL,
  T_IDENTIFICADOR     VARCHAR2(15 BYTE)         NOT NULL,
  T_APELLIDO1         VARCHAR2(50 BYTE)         DEFAULT '-'                   NOT NULL,
  T_APELLIDO2         VARCHAR2(50 BYTE)         DEFAULT '-'                   NOT NULL,
  T_NOMBRE            VARCHAR2(150 BYTE)        NOT NULL,
  V_SEXO              VARCHAR2(1 BYTE)          DEFAULT '-'                   NOT NULL,
  T_DIGITO_CONTROL    VARCHAR2(1 BYTE),
  C_CIWA              VARCHAR2(15 BYTE),
  F_NACIMIENTO        DATE,
  F_BAJA              DATE,
  T_NUM_RM            VARCHAR2(30 BYTE),
  F_RCA               DATE,
  T_EPIGRAFE_IAE      VARCHAR2(30 BYTE),
  T_EPIGRAFE_CNAE     VARCHAR2(30 BYTE),
  T_COMENTARIOS       VARCHAR2(100 BYTE),
  C_ANAGRAMA_FISCAL   VARCHAR2(50 BYTE),
  B_OTROS_DATOS       CLOB,
  TORZ_C_TIPO_ORGZ    VARCHAR2(1 BYTE),
  DACO_X_DACO         NUMBER(10),
  T_RAZON_SOCIAL      VARCHAR2(150 BYTE),
  TIID_C_ABREV_EMPR   VARCHAR2(10 BYTE),
  T_IDENT_EMPRESA     VARCHAR2(15 BYTE),
  CREADO_API          VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL,
  MODIFICADO_API      VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_INTERESADOS_DOCUMENTO
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  DOEX_X_DOEX       NUMBER(10)                  NOT NULL,
  INEX_X_EXPE       NUMBER(10)                  NOT NULL,
  INEX_X_INTE       NUMBER(10)                  NOT NULL,
  INEX_X_RAIN       NUMBER(10)                  NOT NULL,
  RAIN_X_RAIN       NUMBER(10)                  NOT NULL,
  T_OBSERVACIONES   VARCHAR2(250 BYTE),
  L_CONSENTIMIENTO  VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_INTERESADOS_EXPEDIENTE
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  EXPE_X_EXPE      NUMBER(10)                   NOT NULL,
  INTE_X_INTE      NUMBER(10)                   NOT NULL,
  RAIN_X_RAIN      NUMBER(10)                   NOT NULL,
  DACO_X_DACO      NUMBER(10)                   NOT NULL,
  T_OBSERVACIONES  VARCHAR2(250 BYTE),
  L_NOTIFICA       VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_LIMITES_CADUCIDADES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  CADU_X_CADU     NUMBER(10)                    NOT NULL,
  TRAN_X_TRAN     NUMBER(10)                    NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_LIMITES_RELACION
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_LIRE          NUMBER(10)                    NOT NULL,
  REIN_X_REIN     NUMBER(10)                    NOT NULL,
  META_X_META     NUMBER(10),
  FASE_X_FASE     NUMBER(10),
  EXPE_X_EXPE     NUMBER(10),
  F_INI_VIG       DATE                          NOT NULL,
  F_FIN_VIG       DATE,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_METAFASES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_META          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(50 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  L_INFORMAR      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  N_ORDEN         NUMBER(2),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE &OWNER..TR_METADATOS
(
  CREADO          	   VARCHAR2(32 BYTE)             						  NOT NULL,
  F_CREACION      	   DATE                          						  NOT NULL,
  MODIFICADO      	   VARCHAR2(32 BYTE)             						  NOT NULL,
  F_MODIFICA      	   DATE                           						  NOT NULL,
  X_METADATO      	   NUMBER(10)                     						  NOT NULL,
  C_NOMBRE        	   VARCHAR2(25 BYTE)                					  NOT NULL 			UNIQUE,
  C_DESCRIPCION   	   VARCHAR2(250 BYTE)            						  NOT NULL,
  C_EQ_EEMGDE      	   VARCHAR2(255 BYTE)                     						  ,
  C_ESQUEMA_VAL   	   VARCHAR2(255 BYTE)             						  		  ,
  T_PAQUETE            VARCHAR2(100 BYTE)									  NOT NULL,
  T_NOMB_FUNCION       VARCHAR2(50 BYTE)									  NOT NULL,
  T_PAQUETE_OBLIG      VARCHAR2(100 BYTE)									          ,
  T_NOMB_FUNCION_OBLIG VARCHAR2(50 BYTE)									          ,
  L_DOCUMENTO     	   VARCHAR2(1 BYTE)                            			  NOT NULL,
  L_EXPEDIENTE    	   VARCHAR2(1 BYTE)                						  NOT NULL,
  L_PARAM_REF_EXP      VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_DOC      VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,						   
  L_PARAM_REF_TRAN     VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_DOCPER   VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_EXPXFAS  VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_TIPEVO   VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_FECHA        VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_USUARIO      VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_FASE     VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_TIPDOC   VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  CREADO_API           VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  MODIFICADO_API       VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  CONSTRAINT METADATOS_PK PRIMARY KEY (X_METADATO)
);

CREATE TABLE &OWNER..TR_METAFASES_GR
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_METG          NUMBER(10)                    NOT NULL,
  META_X_META     NUMBER(10)                    NOT NULL,
  DDPG_X_DDPG     NUMBER(10)                    NOT NULL,
  N_XIZQ          NUMBER(5)                     NOT NULL,
  N_YARR          NUMBER(5)                     NOT NULL,
  N_ANCHO         NUMBER(5)                     NOT NULL,
  N_ALTO          NUMBER(5)                     NOT NULL,
  N_COLOR_TEXTO   NUMBER(10),
  N_COLOR_FONDO   NUMBER(10),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_MODIFICACIONES_CADUCIDADES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_MOCA          NUMBER(10)                    NOT NULL,
  CAEX_X_CAEX     NUMBER(10)                    NOT NULL,
  USUA_C_USUARIO  VARCHAR2(10 BYTE)             NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'A'                   NOT NULL,
  F_INICIO        DATE                          NOT NULL,
  F_FINAL         DATE,
  V_UNIDAD        VARCHAR2(1 BYTE)              DEFAULT 'D',
  N_UNIDADES      NUMBER(3),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NODOSTRAN_GR
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_NOTG          NUMBER(10)                    NOT NULL,
  TRAG_X_TRAG     NUMBER(10)                    NOT NULL,
  N_X             NUMBER(5)                     NOT NULL,
  N_Y             NUMBER(5)                     NOT NULL,
  N_ORDEN         NUMBER(2)                     NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NORMATIVAS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_NORM          NUMBER(10)                    NOT NULL,
  TINO_X_TINO     NUMBER(10)                    NOT NULL,
  TIPU_X_TIPU     NUMBER(10)                    NOT NULL,
  AMLE_X_AMLE     NUMBER(10)                    NOT NULL,
  D_NORMATIVA     VARCHAR2(250 BYTE)            NOT NULL,
  F_VIGOR         DATE                          NOT NULL,
  T_TITULO        VARCHAR2(50 BYTE)             NOT NULL,
  N_NUMERO        NUMBER(10)                    NOT NULL,
  N_ANIO          NUMBER(4)                     NOT NULL,
  F_PUBLICACION   DATE                          NOT NULL,
  N_PUBLICACION   NUMBER(5)                     NOT NULL,
  C_NIWA          VARCHAR2(15 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NORMATIVAS_PROCEDIMIENTO
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  NORM_X_NORM     NUMBER(10)                    NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NOTIFICACIONES_ENVIO
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  X_NOEN           NUMBER(10,2)                 NOT NULL,
  REM_X_REM        NUMBER(10,2),
  F_ENVIO          DATE                         NOT NULL,
  T_MEDIO          VARCHAR2(100 BYTE)           NOT NULL,
  T_RECHAZO        VARCHAR2(250 BYTE),
  C_HASH           VARCHAR2(20 BYTE),
  F_ESTADO         DATE,
  N_ESTADO         NUMBER(1),
  T_ASUNTO         VARCHAR2(250 BYTE)           NOT NULL,
  T_CUERPO         VARCHAR2(4000 BYTE)          NOT NULL,
  T_OBSERVACIONES  VARCHAR2(250 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NOTIFICACIONES_INTE
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  INDO_X_DOEX       NUMBER(10)                  NOT NULL,
  INDO_X_EXPE       NUMBER(10)                  NOT NULL,
  INDO_X_INTE       NUMBER(10)                  NOT NULL,
  INDO_X_RAIN_INEX  NUMBER(10)                  NOT NULL,
  INDO_X_RAIN       NUMBER(10)                  NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  NOEN_X_NOEN       NUMBER(10,2)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NOTIFICACIONES_REMESAS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  X_REM           NUMBER(10,2)                  NOT NULL,
  F_REMESA        DATE                          NOT NULL,
  C_SERVICIO      VARCHAR2(255 BYTE)            NOT NULL,
  ID_REMESA       NUMBER(25)                    NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_NUMERADORES
(
  X_NUM           NUMBER(6)                     NOT NULL,
  ANYO            VARCHAR2(4 BYTE)              NOT NULL,
  SIS_ORIGEN      VARCHAR2(10 BYTE)             NOT NULL,
  NUMERADOR       NUMBER(25)                    NOT NULL,
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_ORGANISMOS_EXPEDIENTE
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_UOEX           NUMBER(10)                   NOT NULL,
  EXPE_X_EXPE      NUMBER(10)                   NOT NULL,
  UORG_X_UORG      NUMBER(10)                   NOT NULL,
  T_ASOCIA         VARCHAR2(50 BYTE)            NOT NULL,
  T_OBSERVACIONES  VARCHAR2(2500 BYTE),
  F_INI_VIG        DATE                         NOT NULL,
  F_FIN_VIG        DATE,
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_ORGANISMOS_PROCEDIMIENTO
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_UOPR           NUMBER(10)                   NOT NULL,
  TIEV_X_TIEV      NUMBER(10)                   NOT NULL,
  UORG_X_UORG      NUMBER(10)                   NOT NULL,
  T_ASOCIA         VARCHAR2(50 BYTE)            NOT NULL,
  T_OBSERVACIONES  VARCHAR2(2500 BYTE),
  F_INI_VIG        DATE                         NOT NULL,
  F_FIN_VIG        DATE,
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PAGOS_TASAS
(
  CREADO              VARCHAR2(32 BYTE)         NOT NULL,
  F_CREACION          DATE                      NOT NULL,
  MODIFICADO          VARCHAR2(32 BYTE)         NOT NULL,
  F_MODIFICA          DATE                      NOT NULL,
  X_PATA              NUMBER(10)                NOT NULL,
  T_ERROR_DOCUMENTO   VARCHAR2(100 BYTE),
  T_ERROR_PAGO        VARCHAR2(100 BYTE),
  T_ESTADO_DOCUMENTO  VARCHAR2(5 BYTE)          NOT NULL,
  L_ESTADO_PAGO       VARCHAR2(1 BYTE)          DEFAULT 'P'                   NOT NULL,
  F_PAGO              DATE,
  N_IMPORTE           NUMBER(10,2)              NOT NULL,
  T_NUMERO_DOCUMENTO  VARCHAR2(64 BYTE)         NOT NULL,
  T_CONCEPTO          VARCHAR2(128 BYTE),
  CREADO_API          VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL,
  MODIFICADO_API      VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL,
  DOEX_X_DOEX         NUMBER(10,2)              NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PARAMETROS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PARA          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(20 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(100 BYTE)            NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'C'                   NOT NULL,
  N_TAMANIO       NUMBER(4),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PARAMETROS_BLOQUES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  BLOQ_X_BLOQ     NUMBER(10)                    NOT NULL,
  PARA_X_PARA     NUMBER(10)                    NOT NULL,
  N_ORDEN         NUMBER(2)                     NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PARAMETROS_DOCUMENTOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PMDO          NUMBER(10)                    NOT NULL,
  DOEX_X_DOEX     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(20 BYTE)             NOT NULL,
  T_VALOR         VARCHAR2(4000 BYTE)           NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PARAMETROS_VARIABLES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  VARI_X_VARI     NUMBER(10)                    NOT NULL,
  PARA_X_PARA     NUMBER(10)                    NOT NULL,
  N_ORDEN         NUMBER(2)                     NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PARRAFOS_DOCEXPS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PADO          NUMBER(10)                    NOT NULL,
  DOEX_X_DOEX     NUMBER(10)                    NOT NULL,
  TIPA_X_TIPA     NUMBER(10)                    NOT NULL,
  B_PARRAFO       CLOB                          NOT NULL,
  N_ORDEN         NUMBER(2)                     NOT NULL,
  V_ALINEACION    VARCHAR2(1 BYTE)              DEFAULT 'J'                   NOT NULL,
  V_ESTILO        VARCHAR2(8 BYTE)              DEFAULT 'NORMAL'              NOT NULL,
  V_ESTILO_ETIQ   VARCHAR2(8 BYTE)              DEFAULT 'NORMAL'              NOT NULL,
  L_EDITABLE      VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  T_ETIQUETA      VARCHAR2(15 BYTE),
  B_IMAGEN        BLOB,
  T_FORMATO       VARCHAR2(128 BYTE),
  T_NOMB_FICHERO  VARCHAR2(64 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PARRAFOS_TIPDOCS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PATI          NUMBER(10)                    NOT NULL,
  TIDO_X_TIDO     NUMBER(10)                    NOT NULL,
  TIPA_X_TIPA     NUMBER(10)                    NOT NULL,
  B_PARRAFO       CLOB                          NOT NULL,
  N_ORDEN         NUMBER(2)                     NOT NULL,
  V_ALINEACION    VARCHAR2(1 BYTE)              DEFAULT 'J'                   NOT NULL,
  V_ESTILO        VARCHAR2(8 BYTE)              DEFAULT 'NORMAL'              NOT NULL,
  V_ESTILO_ETIQ   VARCHAR2(8 BYTE)              DEFAULT 'NORMAL'              NOT NULL,
  L_EDITABLE      VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  L_FUSIONAR_VAR  VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  T_ETIQUETA      VARCHAR2(15 BYTE),
  B_IMAGEN        BLOB,
  T_FORMATO       VARCHAR2(128 BYTE),
  T_NOMB_FICHERO  VARCHAR2(64 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PERFILES_USUARIOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PEUS          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(25 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PLANTILLAS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PLAN          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(15 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  T_NOMB_INFORME  VARCHAR2(15 BYTE)             NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PLANTILLAS_OFFICE
(
  CREADO            VARCHAR2(30 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  COD_PLAN_OFFICE   VARCHAR2(15 BYTE)           NOT NULL,
  TIDO_X_TIDO       NUMBER(10)                  NOT NULL,
  T_NOMBRE_FICHERO  VARCHAR2(64 BYTE)           NOT NULL,
  T_FORMATO         VARCHAR2(128 BYTE)          NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  B_PLANTILLA       BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_PLANTILLAS_PROCEDIMIENTO
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_PLPR          NUMBER(10)                    NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  T_NOMBRE        VARCHAR2(100 BYTE)            NOT NULL,
  T_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  B_FICHERO       BLOB,
  T_NOMB_FICHERO  VARCHAR2(64 BYTE),
  T_FORMATO       VARCHAR2(128 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_RAZINT_X_DOCPEREVOL
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  RAIN_X_RAIN       NUMBER(10)                  NOT NULL,
  TIEV_X_TIEV       NUMBER(10)                  NOT NULL,
  DOPE_X_DOPE       NUMBER(10)                  NOT NULL,
  CARDINALIDAD_MIN  NUMBER(3)                   NOT NULL,
  CARDINALIDAD_MAX  NUMBER(3)                   NOT NULL,
  N_FIRMA_MIN       NUMBER(3)                   NOT NULL,
  N_FIRMA_MAX       NUMBER(3)                   NOT NULL,
  L_EDITAR          VARCHAR2(1 BYTE)            NOT NULL,
  L_TELEMATICA      VARCHAR2(1 BYTE)            NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_RAZONES_INTERES
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_RAIN           NUMBER(10)                   NOT NULL,
  C_ABREVIATURA    VARCHAR2(10 BYTE)            NOT NULL,
  D_RAZON_INTERES  VARCHAR2(100 BYTE)           NOT NULL,
  L_OBSOLETO       VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  C_NIWA           VARCHAR2(10 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_RAZONINT_PROCEDIMIENTO
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  RAIN_X_RAIN       NUMBER(10)                  NOT NULL,
  TIEV_X_TIEV       NUMBER(10)                  NOT NULL,
  CARDINALIDAD_MIN  NUMBER(3)                   NOT NULL,
  CARDINALIDAD_MAX  NUMBER(3)                   NOT NULL,
  L_OBLIG_REL_APP_ELEC VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  C_COMENTARIO      VARCHAR2(255 BYTE)                     
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_REGISTRO_OPERACIONES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_REOP          NUMBER(10)                    NOT NULL,
  REIN_X_REIN     NUMBER(10)                    NOT NULL,
  LIRE_X_LIRE     NUMBER(10),
  F_OPERACION     DATE                          NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_REGISTROS
(
  CREADO          VARCHAR2(30 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_REGISTRO      VARCHAR2(20 BYTE)             NOT NULL,
  T_TIPO_REG      VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  F_REGISTRO      DATE                          NOT NULL,
  T_REMITENTE     VARCHAR2(80 BYTE),
  T_DESTINATARIO  VARCHAR2(80 BYTE),
  T_OFICINA_SAL   VARCHAR2(50 BYTE),
  T_OFICINA_ENT   VARCHAR2(50 BYTE),
  T_ASUNTO        VARCHAR2(250 BYTE),
  B_REGISTRO      CLOB,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DOCUMENTOS_PERMITIDOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_DOPE          NUMBER(10)                    NOT NULL,
  FASE_X_FASE     NUMBER(10)                    NOT NULL,
  TIDO_X_TIDO     NUMBER(10)                    NOT NULL,
  T_ETIQUETA      VARCHAR2(11 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  L_OBLIGATORIO   VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  L_VALIDO        VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  L_INFORMAR      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  N_ORDEN         NUMBER(2),
  T_ETIQ_LARGA    VARCHAR2(25 BYTE),
  TIAC_X_TIAC     NUMBER(10),
  T_AUXILIAR      VARCHAR2(50 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_ERRORES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_ERRO          NUMBER(10)                    NOT NULL,
  T_MENSAJE       VARCHAR2(300 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_ESTELAB_ENI
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_ESLA          NUMBER(10,2)                  NOT NULL,
  C_ESTELAB_ENI   VARCHAR2(4 BYTE)              NOT NULL,
  D_ESTELAB_ENI   VARCHAR2(250 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_EXPEDIENTES
(
  CREADO               VARCHAR2(32 BYTE)        NOT NULL,
  F_CREACION           DATE                     NOT NULL,
  MODIFICADO           VARCHAR2(32 BYTE)        NOT NULL,
  F_MODIFICA           DATE                     NOT NULL,
  X_EXPE               NUMBER(10)               NOT NULL,
  L_INFORMADO          VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  T_NUM_EXP            VARCHAR2(30 BYTE),
  T_TITULO_EXP         VARCHAR2(250 BYTE),
  F_ARCHIVO            DATE,
  T_OBSERVACIONES      VARCHAR2(250 BYTE),
  B_OTROS_DATOS        CLOB,
  T_URL_WANDA          VARCHAR2(255 BYTE),
  COMP_X_COMP          NUMBER(10),
  UORG_X_UORG          NUMBER(10),
  UORG_X_UORG_ENVIA    NUMBER(10),
  USUA_C_USUARIO       VARCHAR2(10 BYTE)        NOT NULL,
  CREADO_API           VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  MODIFICADO_API       VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  T_IDENTIFICADOR_ENI  VARCHAR2(55 BYTE),
  T_REF_ARCHIVA        VARCHAR2(50 BYTE),
  V_ESTADO_ARCHIVA     VARCHAR2(1 BYTE),
  T_NUMREG_ARCHIVA     VARCHAR2(50 BYTE),
  T_ORGANO             VARCHAR2(10 BYTE),
  C_CLASIFICACION      VARCHAR2(50 BYTE),
  C_CSV                VARCHAR2(30 BYTE),
  L_INI_CIUDADANO      CHAR(1 BYTE)             DEFAULT 'N'
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_EXPEDIENTES_BORRADOS
(
  CREADO             VARCHAR2(32 BYTE)          NOT NULL,
  F_CREACION         DATE                       NOT NULL,
  MODIFICADO         VARCHAR2(32 BYTE)          NOT NULL,
  F_MODIFICA         DATE                       NOT NULL,
  X_EXPE_BOR         NUMBER(10)                 NOT NULL,
  EXPE_X_EXPE_BOR    NUMBER(10)                 NOT NULL,
  L_INFORMADO        VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL,
  T_NUM_EXP          VARCHAR2(30 BYTE),
  T_TITULO_EXP       VARCHAR2(250 BYTE),
  F_ARCHIVO          DATE,
  T_OBSERVACIONES    VARCHAR2(250 BYTE),
  B_OTROS_DATOS      CLOB,
  T_URL_WANDA        VARCHAR2(255 BYTE),
  COMP_X_COMP        NUMBER(10),
  UORG_X_UORG        NUMBER(10),
  UORG_X_UORG_ENVIA  NUMBER(10),
  USUA_C_USUARIO     VARCHAR2(10 BYTE)          NOT NULL,
  L_REINICIO         VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL,
  STMA_X_STMA        NUMBER(10)                 NOT NULL,
  CREADO_API         VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  MODIFICADO_API     VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  T_REF_ARCHIVA      VARCHAR2(50 BYTE),
  V_ESTADO_ARCHIVA   VARCHAR2(1 BYTE),
  T_NUMREG_ARCHIVA   VARCHAR2(50 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_EXPEDIENTES_EN_FASE
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_EXEF            NUMBER(10)                  NOT NULL,
  EXPE_X_EXPE       NUMBER(10)                  NOT NULL,
  TRAN_X_TRAN       NUMBER(10)                  NOT NULL,
  FASE_X_FASE       NUMBER(10)                  NOT NULL,
  USUA_C_USUARIO    VARCHAR2(10 BYTE)           NOT NULL,
  F_ENTRADA         DATE                        NOT NULL,
  L_INFORMADO       VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  L_INFORMADO_FIN   VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  L_ABIERTA_EVENTO  VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  TIEV_X_TIEV       NUMBER(10)                  NOT NULL,
  F_SALIDA          DATE,
  F_LIMITE          DATE,
  T_OBSERVACIONES   VARCHAR2(2500 BYTE),
  EXEF_X_EXEF       NUMBER(10),
  USUA_C_USUA_BLQ   VARCHAR2(10 BYTE),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_EXTREMOSTRAN_GR
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_EXTG          NUMBER(10)                    NOT NULL,
  FASE_X_FASE     NUMBER(10)                    NOT NULL,
  DDPG_X_DDPG     NUMBER(10)                    NOT NULL,
  N_XIZQ          NUMBER(5)                     NOT NULL,
  N_YARR          NUMBER(5)                     NOT NULL,
  N_ANCHO         NUMBER(5)                     NOT NULL,
  N_ALTO          NUMBER(5)                     NOT NULL,
  V_TIPO          VARCHAR2(2 BYTE)              DEFAULT 'FA'                  NOT NULL,
  N_COLOR_FONDO   NUMBER(10),
  N_COLOR_TEXTO   NUMBER(10),
  METG_X_METG     NUMBER(10),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_FASES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_FASE          NUMBER(10)                    NOT NULL,
  META_X_META     NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(50 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  L_INFORMAR      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  N_ORDEN         NUMBER(2),
  T_AUXILIAR      VARCHAR2(500 BYTE),
  TIEV_X_TIEV     NUMBER(10),
  L_TELEMATICA    VARCHAR2(1 BYTE)              DEFAULT 'N',
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_FIRMANTES_DEFINIDOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_FIDE          NUMBER(10)                    NOT NULL,
  PTUO_X_UORG     NUMBER(10)                    NOT NULL,
  PTUO_X_PUTR     VARCHAR2(10 BYTE)             NOT NULL,
  TEDI_X_TEDI     NUMBER(10)                    NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'P'                   NOT NULL,
  F_INI_VIG       DATE                          NOT NULL,
  F_FIN_VIG       DATE,
  FIDE_X_FIDE     NUMBER(10),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_FIRMAS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_FIRM          NUMBER(10)                    NOT NULL,
  USUA_C_USUARIO  VARCHAR2(10 BYTE)             NOT NULL,
  B_FIRMA         BLOB                          NOT NULL,
  T_FORMATO       VARCHAR2(128 BYTE),
  T_NOMB_FICHERO  VARCHAR2(64 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_FIRMAS_DOCEXP
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  DOEX_X_DOEX       NUMBER(10)                  NOT NULL,
  USUA_C_USU_DIGI   VARCHAR2(10 BYTE),
  PUOR_X_UORG       NUMBER(10),
  PUOR_X_PUTR       VARCHAR2(10 BYTE),
  USUA_C_USUARIO    VARCHAR2(10 BYTE),
  F_FIRMA           DATE                        NOT NULL,
  L_EDITABLE        VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  N_ORDEN           NUMBER(1)                   NOT NULL,
  PUOR_X_UORG_D     NUMBER(10),
  PUOR_X_PU&OWNER..TR_D     VARCHAR2(10 BYTE),
  PUOR_X_UORG_S     NUMBER(10),
  PUOR_X_PU&OWNER..TR_S     VARCHAR2(10 BYTE),
  T_PIE             VARCHAR2(1000 BYTE),
  T_FDO             VARCHAR2(250 BYTE),
  T_AUXILIAR        VARCHAR2(250 BYTE),
  C_HASH_PTF        VARCHAR2(20 BYTE),
  F_FIRMA_DIGI      DATE,
  C_TRANSACCION     VARCHAR2(250 BYTE),
  B_PKCS7           BLOB,
  FIDO_X_DOEX       NUMBER(10),
  FIDO_C_USU_DIGI   VARCHAR2(10 BYTE),
  FIDO_X_UORG       NUMBER(10),
  FIDO_X_PUTR       VARCHAR2(10 BYTE),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  X_FIDO            NUMBER(10,2),
  INTE_X_INTE       NUMBER(10,2),
  V_TIPO_FIRMA      VARCHAR2(1 BYTE),
  V_TF_ENI          VARCHAR2(4 BYTE),
  C_CODIGO_CSV      VARCHAR2(255 BYTE),
  T_REGULACION_CSV  VARCHAR2(255 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_MODULOS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  C_MODULO         VARCHAR2(10 BYTE)            NOT NULL,
  S_MODULO         VARCHAR2(32 BYTE)            NOT NULL,
  D_MODULO         VARCHAR2(64 BYTE)            NOT NULL,
  L_CLAVE          VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  T_FICHERO_AYUDA  VARCHAR2(20 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_MUNICIPIOS
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  PROV_C_PROVINCIA  VARCHAR2(2 BYTE)            NOT NULL,
  C_MUNICIPIO       VARCHAR2(3 BYTE)            NOT NULL,
  S_MUNICIPIO       VARCHAR2(64 BYTE)           NOT NULL,
  D_MUNICIPIO       VARCHAR2(64 BYTE)           NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_PAISES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_PAIS          VARCHAR2(3 BYTE)              NOT NULL,
  S_PAIS          VARCHAR2(32 BYTE)             NOT NULL,
  D_PAIS          VARCHAR2(64 BYTE)             NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_PROVINCIAS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_PROVINCIA     VARCHAR2(2 BYTE)              NOT NULL,
  S_PROVINCIA     VARCHAR2(32 BYTE)             NOT NULL,
  D_PROVINCIA     VARCHAR2(64 BYTE)             NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_PTOS_UNI_ORG
(
  CREADO              VARCHAR2(32 BYTE)         NOT NULL,
  F_CREACION          DATE                      NOT NULL,
  MODIFICADO          VARCHAR2(32 BYTE)         NOT NULL,
  F_MODIFICA          DATE                      NOT NULL,
  UORG_X_UORG         NUMBER(10)                NOT NULL,
  PU&OWNER..TR_C_PUESTO_TRAB  VARCHAR2(10 BYTE)         NOT NULL,
  CREADO_API          VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL,
  MODIFICADO_API      VARCHAR2(10 BYTE)         DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_PUESTO_TRAB
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_PUESTO_TRAB   VARCHAR2(10 BYTE)             NOT NULL,
  S_PUESTO_TRAB   VARCHAR2(32 BYTE)             NOT NULL,
  D_PUESTO_TRAB   VARCHAR2(64 BYTE)             NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_SISTEMAS
(
  CREADO             VARCHAR2(32 BYTE)          NOT NULL,
  F_CREACION         DATE                       NOT NULL,
  MODIFICADO         VARCHAR2(32 BYTE)          NOT NULL,
  F_MODIFICA         DATE                       NOT NULL,
  X_STMA             NUMBER(10)                 NOT NULL,
  C_SISTEMA          VARCHAR2(10 BYTE)          NOT NULL,
  D_SISTEMA          VARCHAR2(128 BYTE)         NOT NULL,
  V_CONEX_BUS        VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL,
  COMP_X_COMP_INF    NUMBER(10),
  COMP_X_COMP_AVI    NUMBER(10),
  COMP_X_COMP_GUAR   NUMBER(10),
  COMP_X_COMP_ARCH   NUMBER(10),
  COMP_X_COMP_REG    NUMBER(10),
  COMP_X_COMP_FIRMA  NUMBER(10),
  COMP_X_COMP_NOTI   NUMBER(10),
  COMP_X_COMP_HCV    NUMBER(10),
  CREADO_API         VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  MODIFICADO_API     VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_TIPOS_IDENTIFICADOR
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_TIPO_IDENT    VARCHAR2(100 BYTE)            NOT NULL,
  V_TIPO_IDENT    VARCHAR2(1 BYTE)              DEFAULT 'F'                   NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          VARCHAR2(30 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_TIPOS_ORGANISMO
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_TIOR            NUMBER(10)                  NOT NULL,
  C_ABREVIATURA     VARCHAR2(10 BYTE)           NOT NULL,
  D_TIPO_ORGANISMO  VARCHAR2(100 BYTE)          NOT NULL,
  L_OBSOLETO        VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  C_NIWA            VARCHAR2(1 BYTE),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_TIPOS_ORGANIZACION
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_TIPO_ORGZ     VARCHAR2(1 BYTE)              NOT NULL,
  D_TIPO_ORGZ     VARCHAR2(100 BYTE)            NOT NULL,
  L_VIGENTE       VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_TIPOS_VIA
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  C_TIPO_VIA      VARCHAR2(10 BYTE)             NOT NULL,
  D_TIPO_VIA      VARCHAR2(32 BYTE)             NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          VARCHAR2(15 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_UNI_ORG
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_UORG            NUMBER(10)                  NOT NULL,
  C_UNI_ORG         VARCHAR2(16 BYTE)           NOT NULL,
  S_UNI_ORG         VARCHAR2(128 BYTE)          NOT NULL,
  D_UNI_ORG         VARCHAR2(200 BYTE)          NOT NULL,
  V_TIPO            VARCHAR2(2 BYTE)            DEFAULT 'DP'                  NOT NULL,
  MUNI_C_MUNICIPIO  VARCHAR2(3 BYTE),
  PROV_C_PROVINCIA  VARCHAR2(2 BYTE),
  TIVA_C_TIPO_VIA   VARCHAR2(10 BYTE),
  T_NOMBRE_VIA      VARCHAR2(64 BYTE),
  N_NUMERO          NUMBER(5),
  T_LETRA           VARCHAR2(2 BYTE),
  T_ESCALERA        VARCHAR2(2 BYTE),
  N_PISO            NUMBER(3),
  T_PUERTA          VARCHAR2(2 BYTE),
  C_POSTAL          NUMBER(5),
  T_TELEFONO        VARCHAR2(25 BYTE),
  T_TLFMOVIL        VARCHAR2(25 BYTE),
  T_FAX             VARCHAR2(25 BYTE),
  T_EMAIL           VARCHAR2(64 BYTE),
  C_CIWA            VARCHAR2(15 BYTE),
  T_ID_ARIES        VARCHAR2(16 BYTE),
  T_IDENTIFICADOR   VARCHAR2(15 BYTE),
  T_DIGITO_CONTROL  VARCHAR2(1 BYTE),
  F_INI_VIG         DATE,
  F_FIN_VIG         DATE,
  UORG_X_UORG       NUMBER(10),
  TIOR_X_TIOR       NUMBER(10),
  TORZ_C_TIPO_ORGZ  VARCHAR2(1 BYTE),
  C_PRELACION       VARCHAR2(15 BYTE),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  C_DIR3            VARCHAR2(10 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..GN_USUARIOS
(
  CREADO             VARCHAR2(32 BYTE)          NOT NULL,
  F_CREACION         DATE                       NOT NULL,
  MODIFICADO         VARCHAR2(32 BYTE)          NOT NULL,
  F_MODIFICA         DATE                       NOT NULL,
  C_USUARIO          VARCHAR2(10 BYTE)          NOT NULL,
  V_TIPO_IDENT       VARCHAR2(1 BYTE)           DEFAULT 'D'                   NOT NULL,
  T_IDENTIFICADOR    VARCHAR2(15 BYTE)          DEFAULT '-'                   NOT NULL,
  T_APELLIDO1        VARCHAR2(32 BYTE)          NOT NULL,
  T_APELLIDO2        VARCHAR2(32 BYTE),
  T_NOMBRE           VARCHAR2(32 BYTE)          NOT NULL,
  V_SEXO             VARCHAR2(1 BYTE)           DEFAULT '-'                   NOT NULL,
  F_ALTA             DATE                       NOT NULL,
  F_BAJA             DATE,
  T_EMAIL            VARCHAR2(64 BYTE),
  T_CLAVE            VARCHAR2(55 BYTE),
  C_ANAGRAMA_FISCAL  VARCHAR2(50 BYTE),
  CREADO_API         VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  MODIFICADO_API     VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  F_CLAVE            DATE,
  T_DELEGADO         VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_ACCESOS_ADM
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_ACC           NUMBER(10,2)                  NOT NULL,
  USUA_C_USU      VARCHAR2(10 BYTE)             NOT NULL,
  L_ACCESO        VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_AMBITOS_LEY
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_AMLE          NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_AMBITO_LEY    VARCHAR2(100 BYTE)            NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          VARCHAR2(50 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_AVISOS_CADUCIDADES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_AVCA          NUMBER(10)                    NOT NULL,
  CAEX_X_CAEX     NUMBER(10)                    NOT NULL,
  USUA_C_USU_CRE  VARCHAR2(10 BYTE)             NOT NULL,
  USUA_C_USU_AVI  VARCHAR2(10 BYTE)             NOT NULL,
  F_CREADO        DATE                          NOT NULL,
  L_REALIZADO     VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  F_AVISO         DATE,
  TRAN_X_TRAN     NUMBER(10),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_BLOQPEREVOL_X_PERFILES
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  PEUS_X_PEUS      NUMBER(10)                   NOT NULL,
  BXTE_X_TIEV      NUMBER(10)                   NOT NULL,
  BXTE_X_BLPE      NUMBER(10)                   NOT NULL,
  BXTE_X_FASE      NUMBER(10)                   NOT NULL,
  BXTE_X_BLOQ_FIN  NUMBER(10)                   NOT NULL,
  BXTE_X_BLOQ_INI  NUMBER(10),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  TIEV_X_TIEV      NUMBER(10)                   NOT NULL,
  BLPE_X_BLPE      NUMBER(10)                   NOT NULL,
  BLPE_X_FASE      NUMBER(10)                   NOT NULL,
  BLPE_X_BLOQ_FIN  NUMBER(10)                   NOT NULL,
  V_UNIDAD         VARCHAR2(1 BYTE),
  N_UNIDADES       NUMBER(2),
  D_FECHA_LIMITE   VARCHAR2(100 BYTE),
  BLPE_X_BLOQ_INI  NUMBER(10),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_BLOQUES
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_BLOQ            NUMBER(10)                  NOT NULL,
  STMA_X_STMA       NUMBER(10)                  NOT NULL,
  C_NOMBRE          VARCHAR2(50 BYTE)           NOT NULL,
  D_DESCRIPCION     VARCHAR2(250 BYTE)          NOT NULL,
  V_TIPO            VARCHAR2(1 BYTE)            DEFAULT 'F'                   NOT NULL,
  L_INFORMAR        VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  C_FORMULA         VARCHAR2(100 BYTE),
  D_ACCION_INICIO   VARCHAR2(100 BYTE),
  D_ACCION_RETORNO  VARCHAR2(100 BYTE),
  C_PROCESA         VARCHAR2(100 BYTE),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_BLOQUES_PERMITIDOS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_BLPE           NUMBER(10)                   NOT NULL,
  FASE_X_FASE      NUMBER(10)                   NOT NULL,
  BLOQ_X_BLOQ_FIN  NUMBER(10)                   NOT NULL,
  T_ETIQUETA       VARCHAR2(11 BYTE)            NOT NULL,
  D_DESCRIPCION    VARCHAR2(250 BYTE)           NOT NULL,
  L_OBLIGATORIO    VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_VALIDO         VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  L_INFORMAR       VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  N_ORDEN          NUMBER(2),
  T_ETIQ_LARGA     VARCHAR2(25 BYTE),
  BLOQ_X_BLOQ_INI  NUMBER(10),
  TIAC_X_TIAC      NUMBER(10),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CADUCIDADES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_CADU          NUMBER(10)                    NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  TRAN_X_TRAN     NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(50 BYTE)             NOT NULL,
  V_UNIDAD        VARCHAR2(1 BYTE)              DEFAULT 'D'                   NOT NULL,
  N_UNIDADES      NUMBER(2)                     NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'P'                   NOT NULL,
  L_VIGENTE       VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CADUCIDADES_EXPS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_CAEX          NUMBER(10)                    NOT NULL,
  EXPE_X_EXPE     NUMBER(10)                    NOT NULL,
  CADU_X_CADU     NUMBER(10)                    NOT NULL,
  L_ACTIVA        VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  F_INICIO        DATE                          NOT NULL,
  F_LIMITE        DATE,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CALENDAR
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_CALE            NUMBER(10)                  NOT NULL,
  MUNI_C_PROVINCIA  VARCHAR2(2 BYTE),
  MUNI_C_MUNICIPIO  VARCHAR2(3 BYTE),
  F_FESTIVO         DATE                        NOT NULL,
  T_DESCRIPCION     VARCHAR2(500 BYTE),
  L_PERIODICO       VARCHAR2(1 BYTE)            DEFAULT 'N'                   NOT NULL,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CAMBIOS_EVOLEXPS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_CAEV           NUMBER(10)                   NOT NULL,
  EXPE_X_EXPE      NUMBER(10)                   NOT NULL,
  VEFL_X_TIEX      NUMBER(10)                   NOT NULL,
  VEFL_X_TIEV      NUMBER(10)                   NOT NULL,
  USUA_C_USUARIO   VARCHAR2(10 BYTE)            NOT NULL,
  F_ASOCIACION     DATE                         NOT NULL,
  L_ACTIVO         VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  T_OBSERVACIONES  VARCHAR2(250 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_COMPONENTES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_COMP          NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(50 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  TICO_X_TICO     NUMBER(10)                    NOT NULL,
  UORG_X_UORG     NUMBER(10)                    NOT NULL,
  T_DIRECCION_IP  VARCHAR2(255 BYTE),
  T_USUARIO       VARCHAR2(30 BYTE),
  T_PASSWORD      VARCHAR2(30 BYTE),
  C_NIWA          NUMBER(10),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_COMUNICACIONES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_COM           NUMBER(10,2)                  NOT NULL,
  USUA_C_USU_ENV  VARCHAR2(10 BYTE)             NOT NULL,
  T_TITULO        VARCHAR2(30 BYTE)             NOT NULL,
  T_CUERPO        VARCHAR2(250 BYTE)            NOT NULL,
  V_PRIORIDAD     VARCHAR2(1 BYTE)              DEFAULT 'M'                   NOT NULL,
  F_INICIO        DATE,
  F_FIN           DATE,
  EXPE_X_EXPE     NUMBER(10,2),
  INTE_X_INTE     NUMBER(10,2),
  RAIN_X_RAIN     NUMBER(10,2),
  TIEV_X_TIEV     NUMBER(10,2),
  L_LEIDO         VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  F_LEIDO         DATE,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  COAC_X_COAC      NUMBER(10)                   NOT NULL,
  BXTE_X_TIEV      NUMBER(10)                   NOT NULL,
  BXTE_X_BLPE      NUMBER(10)                   NOT NULL,
  BXTE_X_FASE      NUMBER(10)                   NOT NULL,
  BXTE_X_BLOQ_FIN  NUMBER(10)                   NOT NULL,
  L_OBLIGATORIA    VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_VALIDA         VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  V_COMPROBAR      VARCHAR2(1 BYTE)             DEFAULT 'I'                   NOT NULL,
  V_MOSTRAR_MSJ    VARCHAR2(1 BYTE)             DEFAULT 'A'                   NOT NULL,
  T_MENSAJE_OK     VARCHAR2(200 BYTE),
  T_MENSAJE_NO_OK  VARCHAR2(200 BYTE),
  BXTE_X_BLOQ_INI  NUMBER(10),
  T_TEXTO_PARAM    VARCHAR2(50 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONDACC_X_DOCPERTIPEVOS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  COAC_X_COAC      NUMBER(10)                   NOT NULL,
  DXTE_X_TIEV      NUMBER(10)                   NOT NULL,
  DXTE_X_FASE      NUMBER(10)                   NOT NULL,
  DXTE_X_TIDO      NUMBER(10)                   NOT NULL,
  L_OBLIGATORIA    VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_VALIDA         VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  V_COMPROBAR      VARCHAR2(1 BYTE)             DEFAULT 'T'                   NOT NULL,
  V_MOSTRAR_MSJ    VARCHAR2(1 BYTE)             DEFAULT 'A'                   NOT NULL,
  T_MENSAJE_OK     VARCHAR2(200 BYTE),
  T_MENSAJE_NO_OK  VARCHAR2(200 BYTE),
  T_TEXTO_PARAM    VARCHAR2(50 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONDACC_X_TRANSICIONES
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  COAC_X_COAC      NUMBER(10)                   NOT NULL,
  TXTE_X_TIEV      NUMBER(10)                   NOT NULL,
  TXTE_X_TRAN      NUMBER(10)                   NOT NULL,
  L_OBLIGATORIA    VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_VALIDA         VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  V_COMPROBAR      VARCHAR2(1 BYTE)             DEFAULT 'A'                   NOT NULL,
  V_MOSTRAR_MSJ    VARCHAR2(1 BYTE)             DEFAULT 'A'                   NOT NULL,
  T_MENSAJE_OK     VARCHAR2(200 BYTE),
  T_MENSAJE_NO_OK  VARCHAR2(200 BYTE),
  T_TEXTO_PARAM    VARCHAR2(50 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONDICIONES_ACCIONES
(
  CREADO               VARCHAR2(32 BYTE)        NOT NULL,
  F_CREACION           DATE                     NOT NULL,
  MODIFICADO           VARCHAR2(32 BYTE)        NOT NULL,
  F_MODIFICA           DATE                     NOT NULL,
  X_COAC               NUMBER(10)               NOT NULL,
  STMA_X_STMA          NUMBER(10)               NOT NULL,
  C_NOMBRE             VARCHAR2(50 BYTE)        NOT NULL,
  D_DESCRIPCION        VARCHAR2(250 BYTE)       NOT NULL,
  V_TIPO               VARCHAR2(1 BYTE)         DEFAULT 'C'                   NOT NULL,
  L_PARAM_REF_EXP      VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_TRAN     VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_DOCPER   VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_EXPXFAS  VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_TIPEVO   VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_FECHA        VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_USUARIO      VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_FASE     VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_PARAM_REF_TIPDOC   VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  V_IMPLEMENTACION     VARCHAR2(1 BYTE)         DEFAULT 'F'                   NOT NULL,
  V_COMPLEJA           VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  T_PAQUETE            VARCHAR2(100 BYTE),
  T_NOMB_FUNCION       VARCHAR2(50 BYTE),
  T_EXPRESION          VARCHAR2(4000 BYTE),
  T_TEXTO_PARAM        VARCHAR2(50 BYTE),
  CREADO_API           VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  MODIFICADO_API       VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONS_PLANMULT
(
  CREADO               VARCHAR2(30 BYTE)        NOT NULL,
  F_CREACION           DATE                     NOT NULL,
  MODIFICADO           VARCHAR2(32 BYTE)        NOT NULL,
  F_MODIFICA           DATE                     NOT NULL,
  CREADO_API           VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  MODIFICADO_API       VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  X_COPLANMULT         NUMBER(10,2),
  STMA_X_STMA          NUMBER(10,2)             NOT NULL,
  C_NOMBRE             VARCHAR2(50 BYTE)        NOT NULL,
  D_DESCRIPCION        VARCHAR2(250 BYTE)       NOT NULL,
  T_PAQUETE            VARCHAR2(100 BYTE),
  T_NOMB_FUNCION       VARCHAR2(50 BYTE),
  L_PARAM_REF_EXP      VARCHAR2(1 BYTE)         DEFAULT 'N',
  L_PARAM_REF_TIPDOC   VARCHAR2(1 BYTE)         DEFAULT 'N',
  L_PARAM_REF_DOCPER   VARCHAR2(1 BYTE)         DEFAULT 'N',
  L_PARAM_REF_EXPXFAS  VARCHAR2(1 BYTE)         DEFAULT 'N',
  L_PARAM_REF_TIPEVO   VARCHAR2(1 BYTE)         DEFAULT 'N',
  L_PARAM_FECHA        VARCHAR2(1 BYTE)         DEFAULT 'N',
  L_PARAM_USUARIO      VARCHAR2(1 BYTE)         DEFAULT 'N'
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONSTANTES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_CONSTANTE     VARCHAR2(20 BYTE)             NOT NULL,
  D_CONSTANTE     VARCHAR2(250 BYTE)            NOT NULL,
  V_CONSTANTE     VARCHAR2(2500 BYTE)           NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_CONSULTAS_CERT
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  INDO_X_DOEX       NUMBER(10)                  NOT NULL,
  INDO_X_EXPE       NUMBER(10)                  NOT NULL,
  INDO_X_INTE       NUMBER(10)                  NOT NULL,
  INDO_X_RAIN_EXP   NUMBER(10)                  NOT NULL,
  INDO_X_RAIN_DOC   NUMBER(10)                  NOT NULL,
  X_COCE            NUMBER(10)                  NOT NULL,
  USUA_C_USUARIO    VARCHAR2(10 BYTE)           NOT NULL,
  F_CONSULTA        DATE                        NOT NULL,
  C_CONSULTA        VARCHAR2(40 BYTE)           NOT NULL,
  D_CONSULTA        VARCHAR2(2000 BYTE)         NOT NULL,
  B_DATOS_CONSULTA  CLOB,
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DATOS_COMPONENTE
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_DATC          NUMBER(10)                    NOT NULL,
  COMP_X_COMP     NUMBER(10)                    NOT NULL,
  C_ATRIBUTO      VARCHAR2(32 BYTE)             NOT NULL,
  T_VALOR         VARCHAR2(255 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DATOS_CONTACTO
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_DACO            NUMBER(10)                  NOT NULL,
  MUNI_C_MUNICIPIO  VARCHAR2(3 BYTE),
  MUNI_C_PROVINCIA  VARCHAR2(2 BYTE),
  TIVA_C_TIPO_VIA   VARCHAR2(10 BYTE)           NOT NULL,
  T_NOMBRE_VIA      VARCHAR2(100 BYTE)          NOT NULL,
  N_NUMERO          NUMBER(5),
  T_LETRA           VARCHAR2(2 BYTE),
  T_ESCALERA        VARCHAR2(2 BYTE),
  N_PISO            NUMBER(3),
  T_PUERTA          VARCHAR2(2 BYTE),
  C_POSTAL          NUMBER(5),
  T_TELEFONO        VARCHAR2(25 BYTE),
  T_TLFMOVIL        VARCHAR2(25 BYTE),
  T_FAX             VARCHAR2(25 BYTE),
  T_EMAIL           VARCHAR2(64 BYTE),
  PAIS_C_PAIS       VARCHAR2(3 BYTE),
  T_CIUDAD          VARCHAR2(50 BYTE),
  T_REGION          VARCHAR2(50 BYTE),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DATOS_TIPO_PAGO
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_DAPA          NUMBER(10,2)                  NOT NULL,
  TIPA_X_TIPA     NUMBER(10,2),
  C_ATRIBUTO      VARCHAR2(32 BYTE)             NOT NULL,
  T_VALOR         VARCHAR2(255 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DEFPROCS_GR
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_DDPG          NUMBER(10)                    NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  D_DIAGRAMA      VARCHAR2(250 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DOC_EXPE_BORRADOS
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_DOEX_BOR       NUMBER(10)                   NOT NULL,
  DOEX_X_DOEX_BOR  NUMBER(10)                   NOT NULL,
  EXPE_X_EXPE      NUMBER(10)                   NOT NULL,
  TIDO_X_TIDO      NUMBER(10)                   NOT NULL,
  EXEF_X_EXEF      NUMBER(10)                   NOT NULL,
  USUA_C_USUARIO   VARCHAR2(10 BYTE)            NOT NULL,
  F_ALTA           DATE                         NOT NULL,
  L_PRESENTADO     VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_CORRECTO       VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  V_ESTADO         VARCHAR2(1 BYTE)             DEFAULT 'R'                   NOT NULL,
  L_INFORMADO      VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_REUTILIZABLE   VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_FIRMA_DIGI     VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  V_MODOGEN        VARCHAR2(1 BYTE)             DEFAULT 'R'                   NOT NULL,
  F_LIMITE         DATE,
  B_DOCUMENTO      BLOB,
  T_NOMB_FICHERO   VARCHAR2(250 BYTE),
  T_FORMATO        VARCHAR2(128 BYTE),
  T_OBSERVACIONES  VARCHAR2(250 BYTE),
  F_CADUCIDAD      DATE,
  F_FINALIZACION   DATE,
  F_ARCHIVO        DATE,
  T_VERSION        VARCHAR2(9 BYTE),
  C_HASH           VARCHAR2(50 BYTE),
  B_OTROS_DATOS    CLOB,
  REF_WARDA        VARCHAR2(50 BYTE),
  REF_WARDA_ANX    VARCHAR2(50 BYTE),
  DOEX_X_DOEX      NUMBER(10),
  COMP_X_COMP      NUMBER(10),
  V_CLASE_DOC      VARCHAR2(1 BYTE)             DEFAULT 'G'                   NOT NULL,
  STMA_X_STMA      NUMBER(10)                   NOT NULL,
  T_NUM_DOC        VARCHAR2(30 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DOCPEREVOL_X_PERFILES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  PEUS_X_PEUS     NUMBER(10)                    NOT NULL,
  DXTE_X_TIEV     NUMBER(10)                    NOT NULL,
  DXTE_X_FASE     NUMBER(10)                    NOT NULL,
  DXTE_X_TIDO     NUMBER(10)                    NOT NULL,
  V_PERMISO       VARCHAR2(1 BYTE)              DEFAULT 'T'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DOCPER_X_TIPOS_EVOL
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  DOPE_X_FASE     NUMBER(10)                    NOT NULL,
  DOPE_X_TIDO     NUMBER(10)                    NOT NULL,
  V_UNIDAD        VARCHAR2(1 BYTE),
  N_UNIDADES      NUMBER(2),
  D_FECHA_LIMITE  VARCHAR2(100 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DOCUMENTOS_DELEGADOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_DODE          NUMBER(10)                    NOT NULL,
  TIDO_X_TIDO     NUMBER(10)                    NOT NULL,
  FIDE_X_FIDE     NUMBER(10)                    NOT NULL,
  F_INI_VIG       DATE                          NOT NULL,
  F_FIN_VIG       DATE,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(
  CREADO               VARCHAR2(32 BYTE)        NOT NULL,
  F_CREACION           DATE                     NOT NULL,
  MODIFICADO           VARCHAR2(32 BYTE)        NOT NULL,
  F_MODIFICA           DATE                     NOT NULL,
  X_DOEX               NUMBER(10)               NOT NULL,
  EXPE_X_EXPE          NUMBER(10)               NOT NULL,
  TIDO_X_TIDO          NUMBER(10)               NOT NULL,
  EXEF_X_EXEF          NUMBER(10)               NOT NULL,
  USUA_C_USUARIO       VARCHAR2(10 BYTE)        NOT NULL,
  F_ALTA               DATE                     NOT NULL,
  L_PRESENTADO         VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_CORRECTO           VARCHAR2(1 BYTE)         DEFAULT 'S'                   NOT NULL,
  V_ESTADO             VARCHAR2(1 BYTE)         DEFAULT 'R'                   NOT NULL,
  L_INFORMADO          VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_REUTILIZABLE       VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  L_FIRMA_DIGI         VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL,
  V_MODOGEN            VARCHAR2(1 BYTE)         DEFAULT 'R'                   NOT NULL,
  F_LIMITE             DATE,
  B_DOCUMENTO          BLOB,
  T_NOMB_FICHERO       VARCHAR2(250 BYTE),
  T_FORMATO            VARCHAR2(128 BYTE),
  T_OBSERVACIONES      VARCHAR2(250 BYTE),
  F_CADUCIDAD          DATE,
  F_FINALIZACION       DATE,
  F_ARCHIVO            DATE,
  T_VERSION            VARCHAR2(9 BYTE),
  C_HASH               VARCHAR2(50 BYTE),
  B_OTROS_DATOS        CLOB,
  REF_WARDA            VARCHAR2(50 BYTE),
  REF_WARDA_ANX        VARCHAR2(50 BYTE),
  DOEX_X_DOEX          NUMBER(10),
  COMP_X_COMP          NUMBER(10),
  V_CLASE_DOC          VARCHAR2(1 BYTE)         DEFAULT 'G'                   NOT NULL,
  CREADO_API           VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  MODIFICADO_API       VARCHAR2(10 BYTE)        DEFAULT '-'                   NOT NULL,
  T_IDENTIFICADOR_ENI  VARCHAR2(55 BYTE),
  T_NUM_DOC            VARCHAR2(30 BYTE),
  T_ORGANO             VARCHAR2(10 BYTE),
  T_NUM_DOC_ORIG       VARCHAR2(50 BYTE),
  ESLA_X_ESLA          NUMBER(10,2),
  TDEN_X_TDEN          NUMBER(10,2),
  C_HASH_DOC_ORIG      VARCHAR2(50 BYTE),
  C_ALGORITMO_HASH     VARCHAR2(10 BYTE)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_CERTIF
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TPCR          NUMBER(10,2)                  NOT NULL,
  C_NOMBRE        VARCHAR2(50 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  T_URL_CONSULTA  VARCHAR2(255 BYTE),
  T_CLASE_IMPLEM  VARCHAR2(250 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_COMPONENTE
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TICO          NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_TIPO_COMP     VARCHAR2(50 BYTE)             NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          NUMBER(3),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_CONTACTO
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_TCON           NUMBER(10)                   NOT NULL,
  C_ABREVIATURA    VARCHAR2(10 BYTE)            NOT NULL,
  D_TIPO_CONTACTO  VARCHAR2(100 BYTE)           NOT NULL,
  L_OBSOLETO       VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  C_NIWA           VARCHAR2(30 BYTE),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_DOCUMENTOS
(
  CREADO                   VARCHAR2(32 BYTE)    NOT NULL,
  F_CREACION               DATE                 NOT NULL,
  MODIFICADO               VARCHAR2(32 BYTE)    NOT NULL,
  F_MODIFICA               DATE                 NOT NULL,
  X_TIDO                   NUMBER(10)           NOT NULL,
  STMA_X_STMA              NUMBER(10)           NOT NULL,
  T_ETIQUETA               VARCHAR2(11 BYTE)    NOT NULL,
  C_NOMBRE                 VARCHAR2(50 BYTE)    NOT NULL,
  D_DESCRIPCION            VARCHAR2(250 BYTE)   NOT NULL,
  V_ENT_SAL                VARCHAR2(2 BYTE)     DEFAULT 'S'                   NOT NULL,
  V_INC_GEN                VARCHAR2(1 BYTE)     DEFAULT 'G'                   NOT NULL,
  L_MULTIPLE               VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_FECHA_FIRMA            VARCHAR2(1 BYTE)     DEFAULT 'S'                   NOT NULL,
  L_INFORMAR               VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_ARCHIVABLE             VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_VERSIONABLE            VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_REUTILIZABLE           VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_FUSIONAR_VAR           VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_REGISTRABLE            VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  L_NOTIFICABLE            VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  V_MODOGEN                VARCHAR2(1 BYTE)     DEFAULT 'R'                   NOT NULL,
  L_FIRMA_DIGI             VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  V_TIPO_FIRMA             VARCHAR2(1 BYTE)     DEFAULT '-'                   NOT NULL,
  L_OBSOLETO               VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  T_AUXILIAR               VARCHAR2(50 BYTE),
  C_NIWA                   VARCHAR2(30 BYTE),
  PLAN_X_PLAN              NUMBER(10),
  V_CLASE_DOC              VARCHAR2(1 BYTE)     DEFAULT 'G'                   NOT NULL,
  TPCR_X_TPCR              NUMBER(10,2),
  COPLANMULT_X_COPLANMULT  NUMBER(10),
  L_VALIDA_CONS            VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  CREADO_API               VARCHAR2(10 BYTE)    DEFAULT '-'                   NOT NULL,
  MODIFICADO_API           VARCHAR2(10 BYTE)    DEFAULT '-'                   NOT NULL,
  TDEN_X_TDEN              NUMBER(10,2),
  L_FIRMA_DINAMICA         VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  TIPA_X_TIPA              NUMBER(10,2),
  L_EDITABLE               CHAR(1)              DEFAULT 'S'                   NOT NULL,
  L_ADMINISTRATIVO		   CHAR(1)              DEFAULT 'S'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_EVOLUCIONES
(
  CREADO             VARCHAR2(32 BYTE)          NOT NULL,
  F_CREACION         DATE                       NOT NULL,
  MODIFICADO         VARCHAR2(32 BYTE)          NOT NULL,
  F_MODIFICA         DATE                       NOT NULL,
  X_TIEV             NUMBER(10)                 NOT NULL,
  STMA_X_STMA        NUMBER(10)                 NOT NULL,
  C_ABREVIATURA      VARCHAR2(10 BYTE)          NOT NULL,
  D_DESCRIPCION      VARCHAR2(50 BYTE)          NOT NULL,
  V_CATEGORIA        VARCHAR2(1 BYTE)           DEFAULT 'P'                   NOT NULL,
  L_VIGENTE          VARCHAR2(1 BYTE)           DEFAULT 'S'                   NOT NULL,
  L_INFORMAR         VARCHAR2(1 BYTE)           DEFAULT 'N'                   NOT NULL,
  T_DESCRIPCION_AMP  VARCHAR2(250 BYTE),
  T_COMENTARIOS      VARCHAR2(250 BYTE),
  B_OTROS_DATOS      CLOB,
  C_NIWA             VARCHAR2(15 BYTE),
  TIEV_X_TIEV        NUMBER(10),
  USUA_C_USUA_BLQ    VARCHAR2(10 BYTE),
  UORG_X_UORG        NUMBER(10),
  UORG_X_UORG_COMP   NUMBER(10),
  UORG_X_UORG_RES    NUMBER(10),
  UORG_X_UORG_TRAM   NUMBER(10),
  T_FINALIDAD        VARCHAR2(200 BYTE),
  CREADO_API         VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  MODIFICADO_API     VARCHAR2(10 BYTE)          DEFAULT '-'                   NOT NULL,
  C_RPA              VARCHAR2(20 BYTE),
  T_SERIE_DOC        VARCHAR2(50 BYTE),
  L_ADAPTADOENI      VARCHAR2(1 BYTE)                                         NOT NULL,
  C_CLASIFICACION    VARCHAR2(50 BYTE),
  C_NIVEL_IN&OWNER..TR_CC    CHAR(1 BYTE)               DEFAULT '0',
  C_QAA              CHAR(1 BYTE)               DEFAULT '2'
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_EXPEDIENTES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TIEX          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(50 BYTE)             NOT NULL,
  L_VIGENTE       VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_INDICACION
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TIIN          NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_TIPO_INDICA   VARCHAR2(100 BYTE)            NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          VARCHAR2(30 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_NORMATIVA
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TINO          NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(30 BYTE)             NOT NULL,
  D_TIPO_NORMA    VARCHAR2(100 BYTE)            NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          VARCHAR2(30 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_PAGO
(
  CREADO                VARCHAR2(32 BYTE)       NOT NULL,
  F_CREACION            DATE                    NOT NULL,
  MODIFICADO            VARCHAR2(32 BYTE)       NOT NULL,
  F_MODIFICA            DATE                    NOT NULL,
  X_TIPA                NUMBER(10,2)            NOT NULL,
  C_MODELO              VARCHAR2(10 BYTE)       NOT NULL,
  T_CONCEPTO            VARCHAR2(128 BYTE)      NOT NULL,
  N_CODIGO_TERRITORIAL  NUMBER(10),
  N_IMPORTE_DEFECTO     NUMBER(10,2),
  N_PLAZO_PAGO          NUMBER(3),
  L_AUTOLIQUIDACION     VARCHAR2(1 BYTE)        DEFAULT 'N'                   NOT NULL,
  L_OBLIGATORIO         VARCHAR2(1 BYTE)        DEFAULT 'N'                   NOT NULL,
  D_DESCRIPCION         VARCHAR2(250 BYTE)      NOT NULL,
  N_IVA                 NUMBER(5,2),
  CREADO_API            VARCHAR2(10 BYTE)       DEFAULT '-'                   NOT NULL,
  MODIFICADO_API        VARCHAR2(10 BYTE)       DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_PARRAFOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TIPA          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(15 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  T_CONTENIDO     VARCHAR2(4000 BYTE),
  V_ALINEACION    VARCHAR2(1 BYTE)              DEFAULT 'J'                   NOT NULL,
  T_ETIQUETA      VARCHAR2(15 BYTE),
  V_ESTILO        VARCHAR2(8 BYTE)              DEFAULT 'NORMAL'              NOT NULL,
  V_ESTILO_ETIQ   VARCHAR2(8 BYTE)              DEFAULT 'NORMAL'              NOT NULL,
  V_UBICACION     VARCHAR2(1 BYTE)              DEFAULT 'C'                   NOT NULL,
  L_EDITABLE      VARCHAR2(1 BYTE)              DEFAULT 'S'                   NOT NULL,
  B_IMAGEN        BLOB,
  T_FORMATO       VARCHAR2(128 BYTE),
  T_NOMB_FICHERO  VARCHAR2(64 BYTE),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_PUBLICACION
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TIPU          NUMBER(10)                    NOT NULL,
  C_ABREVIATURA   VARCHAR2(10 BYTE)             NOT NULL,
  D_TIPO_PUBLI    VARCHAR2(100 BYTE)            NOT NULL,
  L_OBSOLETO      VARCHAR2(1 BYTE)              DEFAULT 'N'                   NOT NULL,
  C_NIWA          NUMBER(3),
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TIPOS_RELACIONES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  X_TIRE          NUMBER(10)                    NOT NULL,
  STMA_X_STMA     NUMBER(10)                    NOT NULL,
  C_NOMBRE        VARCHAR2(25 BYTE)             NOT NULL,
  D_DESCRIPCION   VARCHAR2(250 BYTE)            NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TRANSEVOL_X_PERFILES
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  PEUS_X_PEUS     NUMBER(10)                    NOT NULL,
  TXTE_X_TIEV     NUMBER(10)                    NOT NULL,
  TXTE_X_TRAN     NUMBER(10)                    NOT NULL,
  V_PERMISO       VARCHAR2(1 BYTE)              DEFAULT 'A'                   NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TRANSICIONES
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_TRAN           NUMBER(10)                   NOT NULL,
  T_ETIQUETA       VARCHAR2(11 BYTE)            NOT NULL,
  D_TRANSICION     VARCHAR2(250 BYTE)           NOT NULL,
  L_VALIDA         VARCHAR2(1 BYTE)             DEFAULT 'S'                   NOT NULL,
  V_TIPO           VARCHAR2(2 BYTE)             DEFAULT 'N'                   NOT NULL,
  L_INFORMAR       VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL,
  D_FECHA          VARCHAR2(50 BYTE),
  N_ORDEN          NUMBER(2),
  T_ETIQ_LARGA     VARCHAR2(25 BYTE),
  FASE_X_FASE_INI  NUMBER(10),
  FASE_X_FASE_FIN  NUMBER(10),
  TRAN_X_TRAN      NUMBER(10),
  TIAC_X_TIAC      NUMBER(10),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TRANSICIONES_GR
(
  CREADO           VARCHAR2(32 BYTE)            NOT NULL,
  F_CREACION       DATE                         NOT NULL,
  MODIFICADO       VARCHAR2(32 BYTE)            NOT NULL,
  F_MODIFICA       DATE                         NOT NULL,
  X_TRAG           NUMBER(10)                   NOT NULL,
  EXTG_X_EXTG_INI  NUMBER(10)                   NOT NULL,
  EXTG_X_EXTG_FIN  NUMBER(10)                   NOT NULL,
  DDPG_X_DDPG      NUMBER(10)                   NOT NULL,
  N_COLOR_LINEA    NUMBER(10),
  N_COLOR_TEXTO    NUMBER(10),
  TRAN_X_TRAN      NUMBER(10),
  CREADO_API       VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL,
  MODIFICADO_API   VARCHAR2(10 BYTE)            DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  TIEV_X_TIEV       NUMBER(10)                  NOT NULL,
  TRAN_X_TRAN       NUMBER(10)                  NOT NULL,
  N_NUM_MAX         NUMBER(2),
  V_UNIDAD          VARCHAR2(1 BYTE),
  N_UNIDADES        NUMBER(2),
  D_FECHA_LIMITE    VARCHAR2(100 BYTE),
  TRAN_X_TRAN_PROV  NUMBER(10),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_USUARIOS_ASIGNADOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  EXPE_X_EXPE     NUMBER(10)                    NOT NULL,
  USUA_C_USUARIO  VARCHAR2(10 BYTE)             NOT NULL,
  V_TIPO          VARCHAR2(1 BYTE)              DEFAULT 'P'                   NOT NULL,
  F_ALTA          DATE                          NOT NULL,
  F_BAJA          DATE,
  T_RAZON_ASIGNA  VARCHAR2(250 BYTE),
  X_USAS          NUMBER(10)                    NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_USUARIOS_X_PERFILES_USUARIO
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  USUA_C_USUARIO  VARCHAR2(10 BYTE)             NOT NULL,
  PEUS_X_PEUS     NUMBER(10)                    NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_VARIABLES
(
  CREADO            VARCHAR2(32 BYTE)           NOT NULL,
  F_CREACION        DATE                        NOT NULL,
  MODIFICADO        VARCHAR2(32 BYTE)           NOT NULL,
  F_MODIFICA        DATE                        NOT NULL,
  X_VARI            NUMBER(10)                  NOT NULL,
  STMA_X_STMA       NUMBER(10)                  NOT NULL,
  C_NOMBRE          VARCHAR2(25 BYTE)           NOT NULL,
  D_DESCRIPCION     VARCHAR2(250 BYTE)          NOT NULL,
  V_IMPLEMENTACION  VARCHAR2(1 BYTE)            DEFAULT 'F'                   NOT NULL,
  T_PAQUETE         VARCHAR2(100 BYTE),
  T_NOMB_FUNCION    VARCHAR2(50 BYTE),
  TIAC_X_TIAC       NUMBER(10),
  CREADO_API        VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL,
  MODIFICADO_API    VARCHAR2(10 BYTE)           DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_VARIABLES_DOCEXP
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  DOEX_X_DOEX     NUMBER(10)                    NOT NULL,
  VARI_X_VARI     NUMBER(10)                    NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_VARIABLES_TIPDOC
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  TIDO_X_TIDO     NUMBER(10)                    NOT NULL,
  VARI_X_VARI     NUMBER(10)                    NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE &OWNER..TR_VERSIONES_FLUJOS
(
  CREADO          VARCHAR2(32 BYTE)             NOT NULL,
  F_CREACION      DATE                          NOT NULL,
  MODIFICADO      VARCHAR2(32 BYTE)             NOT NULL,
  F_MODIFICA      DATE                          NOT NULL,
  TIEV_X_TIEV     NUMBER(10)                    NOT NULL,
  TIEX_X_TIEX     NUMBER(10)                    NOT NULL,
  F_VIGOR         DATE                          NOT NULL,
  D_DESCRIPCION   VARCHAR2(50 BYTE)             NOT NULL,
  CREADO_API      VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL,
  MODIFICADO_API  VARCHAR2(10 BYTE)             DEFAULT '-'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX CATE_PK ON &OWNER..GN_CONSTANTES
(C_CONSTANTE)
LOGGING
NOPARALLEL;


CREATE INDEX EMPL_PUOR_FK_I ON &OWNER..GN_EMPLEADOS
(PUOR_X_UORG, PUOR_C_PUESTO_TRAB)
LOGGING
NOPARALLEL;


CREATE INDEX EMPL_USUA_FK_I ON &OWNER..GN_EMPLEADOS
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX EMPL_PK ON &OWNER..GN_EMPLEADOS
(USUA_C_USUARIO, PUOR_X_UORG, PUOR_C_PUESTO_TRAB)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX GNER_PK ON &OWNER..GN_ERRORES
(C_ORIERR, C_ERROR)
LOGGING
NOPARALLEL;


CREATE INDEX MOIN_MDLO_INV_FK_I ON &OWNER..GN_MOD_INVOCAR
(MDLO_C_MODULO_INV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_REGISTROS_PK ON &OWNER..TR_REGISTROS
(C_REGISTRO, T_TIPO_REG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_REGISTROS_DOCEXPS_PK ON &OWNER..TR_REGISTROS_DOCEXP
(DOEX_X_DOEX, REG_C_REGISTRO, REG_T_TIPO_REG)
LOGGING
NOPARALLEL;


CREATE INDEX RELA_TRAN_FK_I ON &OWNER..TR_RELACIONES
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX RELA_TIDO_FK_I ON &OWNER..TR_RELACIONES
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX RELA_TIRE_FK_I ON &OWNER..TR_RELACIONES
(TIRE_X_TIRE)
LOGGING
NOPARALLEL;


CREATE INDEX RELA_TIEV_FK_I ON &OWNER..TR_RELACIONES
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX RELA_FASE_B_FK_I ON &OWNER..TR_RELACIONES
(FASE_X_FASE_B)
LOGGING
NOPARALLEL;


CREATE INDEX RELA_FASE_A_FK_I ON &OWNER..TR_RELACIONES
(FASE_X_FASE_A)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RELA_PK ON &OWNER..TR_RELACIONES
(X_RELA)
LOGGING
NOPARALLEL;


CREATE INDEX REEX_EXPE_INT_FK_I ON &OWNER..TR_RELACIONES_EXPEDIENTE
(EXPE_X_EXPE_INT)
LOGGING
NOPARALLEL;


CREATE INDEX REEX_COMP_FK_I ON &OWNER..TR_RELACIONES_EXPEDIENTE
(COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE INDEX REEX_EXPE_FK_I ON &OWNER..TR_RELACIONES_EXPEDIENTE
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REEX_PK ON &OWNER..TR_RELACIONES_EXPEDIENTE
(X_REEX)
LOGGING
NOPARALLEL;


CREATE INDEX REIN_INTE_INI_FK_I ON &OWNER..TR_RELACIONES_INTERESADO
(INTE_X_INTE_INI)
LOGGING
NOPARALLEL;


CREATE INDEX REIN_INTE_FIN_FK_I ON &OWNER..TR_RELACIONES_INTERESADO
(INTE_X_INTE_FIN)
LOGGING
NOPARALLEL;


CREATE INDEX REIN_TCON_FK_I ON &OWNER..TR_RELACIONES_INTERESADO
(TCON_X_TCON)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REIN_PK ON &OWNER..TR_RELACIONES_INTERESADO
(X_REIN)
LOGGING
NOPARALLEL;


CREATE INDEX REIN_TIEV_FK_I ON &OWNER..TR_RELACIONES_INTERESADO
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_REMISIONES ON &OWNER..TR_REMISIONES
(X_REMI)
LOGGING
NOPARALLEL;


CREATE INDEX SIM_EXPE_FK_I ON &OWNER..TR_SIM
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX SIM_USU_REC_I ON &OWNER..TR_SIM
(USUA_C_USU_REC)
LOGGING
NOPARALLEL;


CREATE INDEX SIM_USU_ENV_I ON &OWNER..TR_SIM
(USUA_C_USU_ENV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SIM_PK ON &OWNER..TR_SIM
(X_SIM)
LOGGING
NOPARALLEL;


CREATE INDEX TAEX_BLPE_FK_I ON &OWNER..TR_TAREAS_EXPEDIENTE
(BLPE_X_BLPE)
LOGGING
NOPARALLEL;


CREATE INDEX TAEX_EXEF_FK_I ON &OWNER..TR_TAREAS_EXPEDIENTE
(EXEF_X_EXEF)
LOGGING
NOPARALLEL;


CREATE INDEX TAEX_USUA_FK_I ON &OWNER..TR_TAREAS_EXPEDIENTE
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX TAEX_EXPE_FK_I ON &OWNER..TR_TAREAS_EXPEDIENTE
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TAEX_PK ON &OWNER..TR_TAREAS_EXPEDIENTE
(X_TAEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TEDI_PK ON &OWNER..TR_TEXTOS_DISPOSICIONES
(X_TEDI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TCPR_PK ON &OWNER..TR_TIPCER_X_TIPOS_EVOL
(TIEV_X_TIEV, TPCR_X_TPCR)
LOGGING
NOPARALLEL;


CREATE INDEX TCPR_TIEV_FK_I ON &OWNER..TR_TIPCER_X_TIPOS_EVOL
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX TCPR_TPCR_FK_I ON &OWNER..TR_TIPCER_X_TIPOS_EVOL
(TPCR_X_TPCR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_TIPODOC_ENI_PK ON &OWNER..TR_TIPODOC_ENI
(X_TDEN)
LOGGING
NOPARALLEL;


CREATE INDEX TIAC_STMA_FK_I ON &OWNER..TR_TIPOS_ACTOS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIAC_PK ON &OWNER..TR_TIPOS_ACTOS
(X_TIAC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIAC_ABREV_1_UK ON &OWNER..TR_TIPOS_ACTOS
(C_ABREVIATURA, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_PUOR_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(PUOR_X_UORG, PUOR_X_PUTR)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_PUOR_S_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(PUOR_X_UORG_S, PUOR_X_PU&OWNER..TR_S)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_PUOR_D_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(PUOR_X_UORG_D, PUOR_X_PU&OWNER..TR_D)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_USUA_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_USU_DIG_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(USUA_C_USU_DIGI)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_DOEX_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE INDEX FIDO_FIDO_FK_I ON &OWNER..TR_FIRMAS_DOCEXP
(FIDO_X_DOEX, FIDO_C_USU_DIGI, FIDO_X_UORG, FIDO_X_PUTR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FIDO_PK1 ON &OWNER..TR_FIRMAS_DOCEXP
(X_FIDO)
LOGGING
NOPARALLEL;


CREATE INDEX FITI_TIDO_FK_I ON &OWNER..TR_FIRMAS_TIPDOCS
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX FITI_FIDE_FK_I ON &OWNER..TR_FIRMAS_TIPDOCS
(FIDE_X_FIDE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FITI_PK ON &OWNER..TR_FIRMAS_TIPDOCS
(TIDO_X_TIDO, FIDE_X_FIDE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_PK_FORMATODOC_ENI ON &OWNER..TR_FORMATODOC_ENI
(X_FOEN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX IMAG_PK ON &OWNER..TR_IMAGENES
(X_IMAG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX IMAG_UORG_1_UK ON &OWNER..TR_IMAGENES
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE INDEX INFI_TIEV_FK_I ON &OWNER..TR_INDICACIONES_FICHA
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX INFI_TIIN_FK_I ON &OWNER..TR_INDICACIONES_FICHA
(TIIN_X_TIIN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INFI_PK ON &OWNER..TR_INDICACIONES_FICHA
(X_INFI)
LOGGING
NOPARALLEL;


CREATE INDEX INTE_TIID_FK_I ON &OWNER..TR_INTERESADOS
(TIID_C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE INDEX INTE_TORZ_FK_I ON &OWNER..TR_INTERESADOS
(TORZ_C_TIPO_ORGZ)
LOGGING
NOPARALLEL;


CREATE INDEX INTE_DACO_FK_I ON &OWNER..TR_INTERESADOS
(DACO_X_DACO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INTE_PK ON &OWNER..TR_INTERESADOS
(X_INTE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INTE_ANAGFISCAL_1_UK ON &OWNER..TR_INTERESADOS
(C_ANAGRAMA_FISCAL)
LOGGING
NOPARALLEL;


CREATE INDEX INDO_INEX_FK_I ON &OWNER..TR_INTERESADOS_DOCUMENTO
(INEX_X_EXPE, INEX_X_INTE, INEX_X_RAIN)
LOGGING
NOPARALLEL;


CREATE INDEX INDO_DOEX_FK_I ON &OWNER..TR_INTERESADOS_DOCUMENTO
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE INDEX INDO_RAIN_FK_I ON &OWNER..TR_INTERESADOS_DOCUMENTO
(RAIN_X_RAIN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INDO_PK ON &OWNER..TR_INTERESADOS_DOCUMENTO
(DOEX_X_DOEX, INEX_X_EXPE, INEX_X_INTE, INEX_X_RAIN, RAIN_X_RAIN)
LOGGING
NOPARALLEL;


CREATE INDEX INEX_INTE_FK_I ON &OWNER..TR_INTERESADOS_EXPEDIENTE
(INTE_X_INTE)
LOGGING
NOPARALLEL;


CREATE INDEX INEX_RAIN_FK_I ON &OWNER..TR_INTERESADOS_EXPEDIENTE
(RAIN_X_RAIN)
LOGGING
NOPARALLEL;


CREATE INDEX INEX_EXPE_FK_I ON &OWNER..TR_INTERESADOS_EXPEDIENTE
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX INEX_DACO_FK_I ON &OWNER..TR_INTERESADOS_EXPEDIENTE
(DACO_X_DACO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INEX_PK ON &OWNER..TR_INTERESADOS_EXPEDIENTE
(EXPE_X_EXPE, INTE_X_INTE, RAIN_X_RAIN)
LOGGING
NOPARALLEL;


CREATE INDEX LICA_CADU_FK_I ON &OWNER..TR_LIMITES_CADUCIDADES
(CADU_X_CADU)
LOGGING
NOPARALLEL;


CREATE INDEX LICA_TRAN_FK_I ON &OWNER..TR_LIMITES_CADUCIDADES
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LICA_PK ON &OWNER..TR_LIMITES_CADUCIDADES
(CADU_X_CADU, TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LIRE_PK ON &OWNER..TR_LIMITES_RELACION
(X_LIRE)
LOGGING
NOPARALLEL;


CREATE INDEX LIRE_REIN_FK_I ON &OWNER..TR_LIMITES_RELACION
(REIN_X_REIN)
LOGGING
NOPARALLEL;


CREATE INDEX LIRE_META_FK_I ON &OWNER..TR_LIMITES_RELACION
(META_X_META)
LOGGING
NOPARALLEL;


CREATE INDEX LIRE_FASE_FK_I ON &OWNER..TR_LIMITES_RELACION
(FASE_X_FASE)
LOGGING
NOPARALLEL;


CREATE INDEX LIRE_EXPE_FK_I ON &OWNER..TR_LIMITES_RELACION
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX META_STMA_FK_I ON &OWNER..TR_METAFASES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX META_PK ON &OWNER..TR_METAFASES
(X_META)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX META_NOMBRE_1_UK ON &OWNER..TR_METAFASES
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX METG_DDPG_FK_I ON &OWNER..TR_METAFASES_GR
(DDPG_X_DDPG)
LOGGING
NOPARALLEL;


CREATE INDEX METG_META_FK_I ON &OWNER..TR_METAFASES_GR
(META_X_META)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX METG_PK ON &OWNER..TR_METAFASES_GR
(X_METG)
LOGGING
NOPARALLEL;


CREATE INDEX MOCA_CAEX_FK_I ON &OWNER..TR_MODIFICACIONES_CADUCIDADES
(CAEX_X_CAEX)
LOGGING
NOPARALLEL;


CREATE INDEX MOCA_USUA_FK_I ON &OWNER..TR_MODIFICACIONES_CADUCIDADES
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MOCA_PK ON &OWNER..TR_MODIFICACIONES_CADUCIDADES
(X_MOCA)
LOGGING
NOPARALLEL;


CREATE INDEX NOTG_TRAG_FK_I ON &OWNER..TR_NODOSTRAN_GR
(TRAG_X_TRAG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NOTG_PK ON &OWNER..TR_NODOSTRAN_GR
(X_NOTG)
LOGGING
NOPARALLEL;


CREATE INDEX NORM_TIPU_FK_I ON &OWNER..TR_NORMATIVAS
(TIPU_X_TIPU)
LOGGING
NOPARALLEL;


CREATE INDEX NORM_TINO_FK_I ON &OWNER..TR_NORMATIVAS
(TINO_X_TINO)
LOGGING
NOPARALLEL;


CREATE INDEX NOMR_AMLE_FK_I ON &OWNER..TR_NORMATIVAS
(AMLE_X_AMLE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NORM_PK ON &OWNER..TR_NORMATIVAS
(X_NORM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NORM_1_UK ON &OWNER..TR_NORMATIVAS
(TINO_X_TINO, AMLE_X_AMLE, N_NUMERO, N_ANIO, T_TITULO)
LOGGING
NOPARALLEL;


CREATE INDEX NOPR_TIEV_FK_I ON &OWNER..TR_NORMATIVAS_PROCEDIMIENTO
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX NOPR_NORM_FK_I ON &OWNER..TR_NORMATIVAS_PROCEDIMIENTO
(NORM_X_NORM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NOPR_PK ON &OWNER..TR_NORMATIVAS_PROCEDIMIENTO
(TIEV_X_TIEV, NORM_X_NORM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NOEN_PK ON &OWNER..TR_NOTIFICACIONES_ENVIO
(X_NOEN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NOTINT_PK ON &OWNER..TR_NOTIFICACIONES_INTE
(INDO_X_DOEX, INDO_X_EXPE, INDO_X_INTE, INDO_X_RAIN_INEX, INDO_X_RAIN, 
NOEN_X_NOEN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REM_PK ON &OWNER..TR_NOTIFICACIONES_REMESAS
(X_REM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX NUMERADORES_PK ON &OWNER..TR_NUMERADORES
(X_NUM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UOEX_PK ON &OWNER..TR_ORGANISMOS_EXPEDIENTE
(X_UOEX)
LOGGING
NOPARALLEL;


CREATE INDEX UOEX_EXPE_FK_I ON &OWNER..TR_ORGANISMOS_EXPEDIENTE
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX UOEX_UORG_FK_I ON &OWNER..TR_ORGANISMOS_EXPEDIENTE
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UOPR_PK ON &OWNER..TR_ORGANISMOS_PROCEDIMIENTO
(X_UOPR)
LOGGING
NOPARALLEL;


CREATE INDEX UOPR_TIEV_FK_I ON &OWNER..TR_ORGANISMOS_PROCEDIMIENTO
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX UOPR_UORG_FK_I ON &OWNER..TR_ORGANISMOS_PROCEDIMIENTO
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_PAGOS_TASAS_PK ON &OWNER..TR_PAGOS_TASAS
(X_PATA)
LOGGING
NOPARALLEL;


CREATE INDEX PARA_STMA_FK_I ON &OWNER..TR_PARAMETROS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PARA_PK ON &OWNER..TR_PARAMETROS
(X_PARA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PARA_NOMBRE_1_UK ON &OWNER..TR_PARAMETROS
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX PABL_BLOQ_FK_I ON &OWNER..TR_PARAMETROS_BLOQUES
(BLOQ_X_BLOQ)
LOGGING
NOPARALLEL;


CREATE INDEX PABL_PARA_FK_I ON &OWNER..TR_PARAMETROS_BLOQUES
(PARA_X_PARA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PABL_PK ON &OWNER..TR_PARAMETROS_BLOQUES
(BLOQ_X_BLOQ, PARA_X_PARA)
LOGGING
NOPARALLEL;


CREATE INDEX PMDO_DOEX_FK_I ON &OWNER..TR_PARAMETROS_DOCUMENTOS
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PMDO_PK ON &OWNER..TR_PARAMETROS_DOCUMENTOS
(X_PMDO)
LOGGING
NOPARALLEL;


CREATE INDEX PAVA_VARI_FK_I ON &OWNER..TR_PARAMETROS_VARIABLES
(VARI_X_VARI)
LOGGING
NOPARALLEL;


CREATE INDEX PAVA_PARA_FK_I ON &OWNER..TR_PARAMETROS_VARIABLES
(PARA_X_PARA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PAVA_PK ON &OWNER..TR_PARAMETROS_VARIABLES
(VARI_X_VARI, PARA_X_PARA)
LOGGING
NOPARALLEL;


CREATE INDEX PADO_DOEX_FK_I ON &OWNER..TR_PARRAFOS_DOCEXPS
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE INDEX PADO_TIPA_FK_I ON &OWNER..TR_PARRAFOS_DOCEXPS
(TIPA_X_TIPA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PADO_PK ON &OWNER..TR_PARRAFOS_DOCEXPS
(X_PADO)
LOGGING
NOPARALLEL;


CREATE INDEX PATI_TIDO_FK_I ON &OWNER..TR_PARRAFOS_TIPDOCS
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX PATI_TIPA_FK_I ON &OWNER..TR_PARRAFOS_TIPDOCS
(TIPA_X_TIPA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PATI_PK ON &OWNER..TR_PARRAFOS_TIPDOCS
(X_PATI)
LOGGING
NOPARALLEL;


CREATE INDEX PEUS_STMA_FK_I ON &OWNER..TR_PERFILES_USUARIOS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PEUS_PK ON &OWNER..TR_PERFILES_USUARIOS
(X_PEUS)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PEUS_NOMBRE_1_UK ON &OWNER..TR_PERFILES_USUARIOS
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX PLAN_STMA_FK_I ON &OWNER..TR_PLANTILLAS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PLAN_PK ON &OWNER..TR_PLANTILLAS
(X_PLAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PLAN_NOMBRE_1_UK ON &OWNER..TR_PLANTILLAS
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_PLANTILLAS_OFFICE_PK ON &OWNER..TR_PLANTILLAS_OFFICE
(COD_PLAN_OFFICE, TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX PLPR_TIEV_FK_I ON &OWNER..TR_PLANTILLAS_PROCEDIMIENTO
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PLPR_PK ON &OWNER..TR_PLANTILLAS_PROCEDIMIENTO
(X_PLPR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PLPR_NOMBRE_1_UK ON &OWNER..TR_PLANTILLAS_PROCEDIMIENTO
(T_NOMBRE, TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX RIXD_DXTE_FK_I ON &OWNER..TR_RAZINT_X_DOCPEREVOL
(DOPE_X_DOPE)
LOGGING
NOPARALLEL;


CREATE INDEX RIXD_RAIN_FK_I ON &OWNER..TR_RAZINT_X_DOCPEREVOL
(RAIN_X_RAIN, TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RIXD_PK ON &OWNER..TR_RAZINT_X_DOCPEREVOL
(RAIN_X_RAIN, TIEV_X_TIEV, DOPE_X_DOPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RAIN_PK ON &OWNER..TR_RAZONES_INTERES
(X_RAIN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RAIN_ABREV_1_UK ON &OWNER..TR_RAZONES_INTERES
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RAIPR_PK ON &OWNER..TR_RAZONINT_PROCEDIMIENTO
(TIEV_X_TIEV, RAIN_X_RAIN)
LOGGING
NOPARALLEL;


CREATE INDEX RAIPR_TIEV_FK_I ON &OWNER..TR_RAZONINT_PROCEDIMIENTO
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX RAIPR_RAIN_FK_I ON &OWNER..TR_RAZONINT_PROCEDIMIENTO
(RAIN_X_RAIN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REOP_PK ON &OWNER..TR_REGISTRO_OPERACIONES
(X_REOP)
LOGGING
NOPARALLEL;


CREATE INDEX REOP_REIN_FK_I ON &OWNER..TR_REGISTRO_OPERACIONES
(REIN_X_REIN)
LOGGING
NOPARALLEL;


CREATE INDEX REOP_LIRE_FK_I ON &OWNER..TR_REGISTRO_OPERACIONES
(LIRE_X_LIRE)
LOGGING
NOPARALLEL;


CREATE INDEX DOEX_EXPE_FK_I ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX DOEX_COMP_FK_I ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE INDEX DOEX_FASE_FK_I ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(EXEF_X_EXEF)
LOGGING
NOPARALLEL;


CREATE INDEX DOEX_USUA_FK_I ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX DOEX_TIDO_FK_I ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX DOEX_DOEX_FK_I ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DOEX_PK ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
(X_DOEX)
LOGGING
NOPARALLEL;


CREATE INDEX DOPE_TIDO_FK_I ON &OWNER..TR_DOCUMENTOS_PERMITIDOS
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX DOPE_FASE_FK_I ON &OWNER..TR_DOCUMENTOS_PERMITIDOS
(FASE_X_FASE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DOPE_PK ON &OWNER..TR_DOCUMENTOS_PERMITIDOS
(X_DOPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DOPE_1_UK ON &OWNER..TR_DOCUMENTOS_PERMITIDOS
(FASE_X_FASE, TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX DOPE_TIAC_FK_I ON &OWNER..TR_DOCUMENTOS_PERMITIDOS
(TIAC_X_TIAC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX ERRO_PK ON &OWNER..TR_ERRORES
(X_ERRO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_PK_ESTELAB_ENI ON &OWNER..TR_ESTELAB_ENI
(X_ESLA)
LOGGING
NOPARALLEL;


CREATE INDEX EXPE_UORG_FK_I ON &OWNER..TR_EXPEDIENTES
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE INDEX EXPE_UORG_ENVIA_FK_I ON &OWNER..TR_EXPEDIENTES
(UORG_X_UORG_ENVIA)
LOGGING
NOPARALLEL;


CREATE INDEX EXPE_COMP_FK_I ON &OWNER..TR_EXPEDIENTES
(COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX EXPE_PK ON &OWNER..TR_EXPEDIENTES
(X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX EXPE_USUA_FK_I ON &OWNER..TR_EXPEDIENTES
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;

CREATE UNIQUE INDEX C_CSV_UNIQUE ON &OWNER..TR_EXPEDIENTES
(C_CSV)
LOGGING
NOPARALLEL;


CREATE INDEX EXPEB_EXPEB_FK_I ON &OWNER..TR_EXPEDIENTES_BORRADOS
(EXPE_X_EXPE_BOR)
LOGGING
NOPARALLEL;


CREATE INDEX EXPEB_STMA_FK_I ON &OWNER..TR_EXPEDIENTES_BORRADOS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX EXPEB_UORG_FK_I ON &OWNER..TR_EXPEDIENTES_BORRADOS
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE INDEX EXPEB_UORG_ENVIA_FK_I ON &OWNER..TR_EXPEDIENTES_BORRADOS
(UORG_X_UORG_ENVIA)
LOGGING
NOPARALLEL;


CREATE INDEX EXPEB_COMP_FK_I ON &OWNER..TR_EXPEDIENTES_BORRADOS
(COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX EXPEB_PK ON &OWNER..TR_EXPEDIENTES_BORRADOS
(X_EXPE_BOR)
LOGGING
NOPARALLEL;


CREATE INDEX EXPEB_USUA_FK_I ON &OWNER..TR_EXPEDIENTES_BORRADOS
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_USUA_FK_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_TRAN_FK_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_USUA_BLQ_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(USUA_C_USUA_BLQ)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_TIEV_FK_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_EXEF_FK_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(EXEF_X_EXEF)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_FASE_FK_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(FASE_X_FASE)
LOGGING
NOPARALLEL;


CREATE INDEX EXEF_EXPE_FK_I ON &OWNER..TR_EXPEDIENTES_EN_FASE
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX EXEF_PK ON &OWNER..TR_EXPEDIENTES_EN_FASE
(X_EXEF)
LOGGING
NOPARALLEL;


CREATE INDEX EXTG_FASE_FK_I ON &OWNER..TR_EXTREMOSTRAN_GR
(FASE_X_FASE)
LOGGING
NOPARALLEL;


CREATE INDEX EXTG_DDPG_FK_I ON &OWNER..TR_EXTREMOSTRAN_GR
(DDPG_X_DDPG)
LOGGING
NOPARALLEL;


CREATE INDEX EXTG_METG_FK_I ON &OWNER..TR_EXTREMOSTRAN_GR
(METG_X_METG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX EXTG_PK ON &OWNER..TR_EXTREMOSTRAN_GR
(X_EXTG)
LOGGING
NOPARALLEL;


CREATE INDEX FASE_TIEV_FK_I ON &OWNER..TR_FASES
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX FASE_STMA_FK_I ON &OWNER..TR_FASES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX FASE_META_FK_I ON &OWNER..TR_FASES
(META_X_META)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FASE_PK ON &OWNER..TR_FASES
(X_FASE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FASE_NOMBRE_1_UK ON &OWNER..TR_FASES
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX FIDE_TEDI_FK_I ON &OWNER..TR_FIRMANTES_DEFINIDOS
(TEDI_X_TEDI)
LOGGING
NOPARALLEL;


CREATE INDEX FIDE_FIDE_FK_I ON &OWNER..TR_FIRMANTES_DEFINIDOS
(FIDE_X_FIDE)
LOGGING
NOPARALLEL;


CREATE INDEX FIDE_PUOR_FK_I ON &OWNER..TR_FIRMANTES_DEFINIDOS
(PTUO_X_UORG, PTUO_X_PUTR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FIDE_PK ON &OWNER..TR_FIRMANTES_DEFINIDOS
(X_FIDE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FIRM_PK ON &OWNER..TR_FIRMAS
(X_FIRM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FIRM_USUA_1_UK ON &OWNER..TR_FIRMAS
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX MOIN_MDLO_FK_I ON &OWNER..GN_MOD_INVOCAR
(MDLO_C_MODULO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MOIN_PK ON &OWNER..GN_MOD_INVOCAR
(MDLO_C_MODULO, MDLO_C_MODULO_INV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MDLO_PK ON &OWNER..GN_MODULOS
(C_MODULO)
LOGGING
NOPARALLEL;


CREATE INDEX MUNI_PROV_FK_I ON &OWNER..GN_MUNICIPIOS
(PROV_C_PROVINCIA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MUNI_PK ON &OWNER..GN_MUNICIPIOS
(C_MUNICIPIO, PROV_C_PROVINCIA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PAIS_PK ON &OWNER..GN_PAISES
(C_PAIS)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PROV_PK ON &OWNER..GN_PROVINCIAS
(C_PROVINCIA)
LOGGING
NOPARALLEL;


CREATE INDEX PUOR_PU&OWNER..TR_FK_I ON &OWNER..GN_PTOS_UNI_ORG
(PU&OWNER..TR_C_PUESTO_TRAB)
LOGGING
NOPARALLEL;


CREATE INDEX PUOR_UORG_FK_I ON &OWNER..GN_PTOS_UNI_ORG
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PUOR_PK ON &OWNER..GN_PTOS_UNI_ORG
(UORG_X_UORG, PU&OWNER..TR_C_PUESTO_TRAB)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PU&OWNER..TR_PK ON &OWNER..GN_PUESTO_TRAB
(C_PUESTO_TRAB)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_NOTI_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_NOTI)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_ARCH_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_ARCH)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_INF_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_INF)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_GUAR_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_GUAR)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_REG_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_REG)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_FIRMA_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_FIRMA)
LOGGING
NOPARALLEL;


CREATE INDEX STMA_COMP_AVI_FK_I ON &OWNER..GN_SISTEMAS
(COMP_X_COMP_AVI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX STMA_PK ON &OWNER..GN_SISTEMAS
(X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX STMA_IDENT_1_UK ON &OWNER..GN_SISTEMAS
(C_SISTEMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIID_PK ON &OWNER..GN_TIPOS_IDENTIFICADOR
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIOR_PK ON &OWNER..GN_TIPOS_ORGANISMO
(X_TIOR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIOR_ABREV_1_UK ON &OWNER..GN_TIPOS_ORGANISMO
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TORZ_PK ON &OWNER..GN_TIPOS_ORGANIZACION
(C_TIPO_ORGZ)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIVA_PK ON &OWNER..GN_TIPOS_VIA
(C_TIPO_VIA)
LOGGING
NOPARALLEL;


CREATE INDEX UORG_TIVA_FK_I ON &OWNER..GN_UNI_ORG
(TIVA_C_TIPO_VIA)
LOGGING
NOPARALLEL;


CREATE INDEX UORG_TORZ_FK_I ON &OWNER..GN_UNI_ORG
(TORZ_C_TIPO_ORGZ)
LOGGING
NOPARALLEL;


CREATE INDEX UORG_UORG_FK_I ON &OWNER..GN_UNI_ORG
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE INDEX UORG_MUNI_FK_I ON &OWNER..GN_UNI_ORG
(MUNI_C_MUNICIPIO, PROV_C_PROVINCIA)
LOGGING
NOPARALLEL;


CREATE INDEX UORG_TIOR_FK_I ON &OWNER..GN_UNI_ORG
(TIOR_X_TIOR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UORG_PK ON &OWNER..GN_UNI_ORG
(X_UORG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UORG_UNIORG_1_UK ON &OWNER..GN_UNI_ORG
(C_UNI_ORG)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UORG_PRELACION_2_UK ON &OWNER..GN_UNI_ORG
(C_PRELACION)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX USUA_PK ON &OWNER..GN_USUARIOS
(C_USUARIO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_ACCESOS_ADM_PK ON &OWNER..TR_ACCESOS_ADM
(X_ACC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AMLE_PK ON &OWNER..TR_AMBITOS_LEY
(X_AMLE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AMLE_ABREV_1_UK ON &OWNER..TR_AMBITOS_LEY
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE INDEX AVCA_CAEX_FK_I ON &OWNER..TR_AVISOS_CADUCIDADES
(CAEX_X_CAEX)
LOGGING
NOPARALLEL;


CREATE INDEX AVCA_USUA_AVISAR_A_FK_I ON &OWNER..TR_AVISOS_CADUCIDADES
(USUA_C_USU_AVI)
LOGGING
NOPARALLEL;


CREATE INDEX AVCA_USUA_FK_I ON &OWNER..TR_AVISOS_CADUCIDADES
(USUA_C_USU_CRE)
LOGGING
NOPARALLEL;


CREATE INDEX AVCA_TRAN_FK_I ON &OWNER..TR_AVISOS_CADUCIDADES
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AVCA_PK ON &OWNER..TR_AVISOS_CADUCIDADES
(X_AVCA)
LOGGING
NOPARALLEL;


CREATE INDEX BLXP_PEUS_FK_I ON &OWNER..TR_BLOQPEREVOL_X_PERFILES
(PEUS_X_PEUS)
LOGGING
NOPARALLEL;


CREATE INDEX BLXP_BXTE_FK_I ON &OWNER..TR_BLOQPEREVOL_X_PERFILES
(BXTE_X_TIEV, BXTE_X_BLPE, BXTE_X_FASE, BXTE_X_BLOQ_FIN, BXTE_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BLXP_PK ON &OWNER..TR_BLOQPEREVOL_X_PERFILES
(PEUS_X_PEUS, BXTE_X_TIEV, BXTE_X_BLPE)
LOGGING
NOPARALLEL;


CREATE INDEX BXTE_TIEV_FK_I ON &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX BXTE_BLPE_FK_I ON &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
(BLPE_X_BLPE, BLPE_X_FASE, BLPE_X_BLOQ_FIN, BLPE_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BXTE_PK ON &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
(TIEV_X_TIEV, BLPE_X_BLPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BXTE_1_UK ON &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
(TIEV_X_TIEV, BLPE_X_BLPE, BLPE_X_FASE, BLPE_X_BLOQ_FIN, BLPE_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE INDEX BLOQ_STMA_FK_I ON &OWNER..TR_BLOQUES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BLOQ_PK ON &OWNER..TR_BLOQUES
(X_BLOQ)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BLOQ_NOMBRE_1_UK ON &OWNER..TR_BLOQUES
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX BLPE_BLOQ_INI_I ON &OWNER..TR_BLOQUES_PERMITIDOS
(BLOQ_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE INDEX BLPE_BLOQ_FIN_I ON &OWNER..TR_BLOQUES_PERMITIDOS
(BLOQ_X_BLOQ_FIN)
LOGGING
NOPARALLEL;


CREATE INDEX BLPE_FASE_FK_I ON &OWNER..TR_BLOQUES_PERMITIDOS
(FASE_X_FASE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BLPE_PK ON &OWNER..TR_BLOQUES_PERMITIDOS
(X_BLPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BLPE_1_UK ON &OWNER..TR_BLOQUES_PERMITIDOS
(X_BLPE, FASE_X_FASE, BLOQ_X_BLOQ_FIN, BLOQ_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BLPE_2_UK ON &OWNER..TR_BLOQUES_PERMITIDOS
(L_VALIDO, T_ETIQUETA, FASE_X_FASE, BLOQ_X_BLOQ_FIN, BLOQ_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE INDEX BLPE_TIAC_FK_I ON &OWNER..TR_BLOQUES_PERMITIDOS
(TIAC_X_TIAC)
LOGGING
NOPARALLEL;


CREATE INDEX CADU_TIEV_FK_I ON &OWNER..TR_CADUCIDADES
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX CADU_TRAN_FK_I ON &OWNER..TR_CADUCIDADES
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CADU_PK ON &OWNER..TR_CADUCIDADES
(X_CADU)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CADU_ABREV_1_UK ON &OWNER..TR_CADUCIDADES
(C_ABREVIATURA, TIEV_X_TIEV, TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX CAEX_EXPE_FK_I ON &OWNER..TR_CADUCIDADES_EXPS
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX CAEX_CADU_FK_I ON &OWNER..TR_CADUCIDADES_EXPS
(CADU_X_CADU)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CAEX_PK ON &OWNER..TR_CADUCIDADES_EXPS
(X_CAEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CALE_PK ON &OWNER..TR_CALENDAR
(X_CALE)
LOGGING
NOPARALLEL;


CREATE INDEX CALE_MUNI_FK_I ON &OWNER..TR_CALENDAR
(MUNI_C_MUNICIPIO, MUNI_C_PROVINCIA)
LOGGING
NOPARALLEL;


CREATE INDEX CAEV_USUA_FK_I ON &OWNER..TR_CAMBIOS_EVOLEXPS
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX CAEV_EXPE_FK_I ON &OWNER..TR_CAMBIOS_EVOLEXPS
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX CAEV_VEFL_FK_I ON &OWNER..TR_CAMBIOS_EVOLEXPS
(VEFL_X_TIEV, VEFL_X_TIEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CAEV_PK ON &OWNER..TR_CAMBIOS_EVOLEXPS
(X_CAEV)
LOGGING
NOPARALLEL;


CREATE INDEX COMP_UORG_FK_I ON &OWNER..TR_COMPONENTES
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE INDEX COMP_TICO_FK_I ON &OWNER..TR_COMPONENTES
(TICO_X_TICO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COMP_PK ON &OWNER..TR_COMPONENTES
(X_COMP)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COMP_NOMBRE_1_UK ON &OWNER..TR_COMPONENTES
(C_NOMBRE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_COMUNICACIONES_PK ON &OWNER..TR_COMUNICACIONES
(X_COM)
LOGGING
NOPARALLEL;


CREATE INDEX COXB_BXTE_FK_I ON &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
(BXTE_X_TIEV, BXTE_X_BLPE, BXTE_X_FASE, BXTE_X_BLOQ_FIN, BXTE_X_BLOQ_INI)
LOGGING
NOPARALLEL;


CREATE INDEX COXB_COAC_FK_I ON &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
(COAC_X_COAC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COXB_PK ON &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
(COAC_X_COAC, BXTE_X_TIEV, BXTE_X_BLPE)
LOGGING
NOPARALLEL;


CREATE INDEX COXD_DXTE_FK_I ON &OWNER..TR_CONDACC_X_DOCPERTIPEVOS
(DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX COXD_COAC_FK_I ON &OWNER..TR_CONDACC_X_DOCPERTIPEVOS
(COAC_X_COAC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COXD_PK ON &OWNER..TR_CONDACC_X_DOCPERTIPEVOS
(COAC_X_COAC, DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX COXT_TXTE_FK_I ON &OWNER..TR_CONDACC_X_TRANSICIONES
(TXTE_X_TIEV, TXTE_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX COXT_COAC_FK_I ON &OWNER..TR_CONDACC_X_TRANSICIONES
(COAC_X_COAC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COXT_PK ON &OWNER..TR_CONDACC_X_TRANSICIONES
(COAC_X_COAC, TXTE_X_TIEV, TXTE_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX COAC_STMA_FK_I ON &OWNER..TR_CONDICIONES_ACCIONES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COAC_PK ON &OWNER..TR_CONDICIONES_ACCIONES
(X_COAC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COAC_NOMBRE_1_UK ON &OWNER..TR_CONDICIONES_ACCIONES
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_CONS_PLANMULT_PK ON &OWNER..TR_CONS_PLANMULT
(X_COPLANMULT)
LOGGING
NOPARALLEL;


CREATE INDEX CNTE_STMA_FK_I ON &OWNER..TR_CONSTANTES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CNTE_PK ON &OWNER..TR_CONSTANTES
(C_CONSTANTE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX COCE_PK ON &OWNER..TR_CONSULTAS_CERT
(X_COCE)
LOGGING
NOPARALLEL;


CREATE INDEX COCE_INDO_FK_I ON &OWNER..TR_CONSULTAS_CERT
(INDO_X_DOEX, INDO_X_EXPE, INDO_X_INTE, INDO_X_RAIN_EXP, INDO_X_RAIN_DOC)
LOGGING
NOPARALLEL;


CREATE INDEX COCE_USUA_FK_I ON &OWNER..TR_CONSULTAS_CERT
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX DATC_COMP_FK_I ON &OWNER..TR_DATOS_COMPONENTE
(COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DATC_PK ON &OWNER..TR_DATOS_COMPONENTE
(X_DATC)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DATC_ATRIB_1_UK ON &OWNER..TR_DATOS_COMPONENTE
(C_ATRIBUTO, COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE INDEX DACO_TIVA_FK_I ON &OWNER..TR_DATOS_CONTACTO
(TIVA_C_TIPO_VIA)
LOGGING
NOPARALLEL;


CREATE INDEX DACO_PAIS_FK_I ON &OWNER..TR_DATOS_CONTACTO
(PAIS_C_PAIS)
LOGGING
NOPARALLEL;


CREATE INDEX DACO_MUNI_FK_I ON &OWNER..TR_DATOS_CONTACTO
(MUNI_C_MUNICIPIO, MUNI_C_PROVINCIA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DACO_PK ON &OWNER..TR_DATOS_CONTACTO
(X_DACO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_DATOS_TIPOS_PAGO_PK ON &OWNER..TR_DATOS_TIPO_PAGO
(X_DAPA)
LOGGING
NOPARALLEL;


CREATE INDEX DDPG_TIEV_FK_I ON &OWNER..TR_DEFPROCS_GR
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DDPG_PK ON &OWNER..TR_DEFPROCS_GR
(X_DDPG)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_DOEXB_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(DOEX_X_DOEX_BOR)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_STMA_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_EXPE_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_COMP_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(COMP_X_COMP)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_FASE_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(EXEF_X_EXEF)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_USUA_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_TIDO_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX DOEXB_DOEX_FK_I ON &OWNER..TR_DOC_EXPE_BORRADOS
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DOEXB_PK ON &OWNER..TR_DOC_EXPE_BORRADOS
(X_DOEX_BOR)
LOGGING
NOPARALLEL;


CREATE INDEX DOXP_PEUS_FK_I ON &OWNER..TR_DOCPEREVOL_X_PERFILES
(PEUS_X_PEUS)
LOGGING
NOPARALLEL;


CREATE INDEX DOXP_DXTE_FK_I ON &OWNER..TR_DOCPEREVOL_X_PERFILES
(DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DOXP_PK ON &OWNER..TR_DOCPEREVOL_X_PERFILES
(PEUS_X_PEUS, DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO, V_PERMISO)
LOGGING
NOPARALLEL;


CREATE INDEX DXTE_TIEV_FK_I ON &OWNER..TR_DOCPER_X_TIPOS_EVOL
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX DXTE_DOPE_FK_I ON &OWNER..TR_DOCPER_X_TIPOS_EVOL
(DOPE_X_FASE, DOPE_X_TIDO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DXTE_PK ON &OWNER..TR_DOCPER_X_TIPOS_EVOL
(TIEV_X_TIEV, DOPE_X_FASE, DOPE_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX DODE_TIDO_FK_I ON &OWNER..TR_DOCUMENTOS_DELEGADOS
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE INDEX DODE_FIDE_FK_I ON &OWNER..TR_DOCUMENTOS_DELEGADOS
(FIDE_X_FIDE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DODE_PK ON &OWNER..TR_DOCUMENTOS_DELEGADOS
(X_DODE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TPCR_PK ON &OWNER..TR_TIPOS_CERTIF
(X_TPCR)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TICO_PK ON &OWNER..TR_TIPOS_COMPONENTE
(X_TICO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TICO_ABREV_1_UK ON &OWNER..TR_TIPOS_COMPONENTE
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TCON_PK ON &OWNER..TR_TIPOS_CONTACTO
(X_TCON)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TCON_ABREV_1_UK ON &OWNER..TR_TIPOS_CONTACTO
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE INDEX TIDO_STMA_FK_I ON &OWNER..TR_TIPOS_DOCUMENTOS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX TIDO_PLAN_FK_I ON &OWNER..TR_TIPOS_DOCUMENTOS
(PLAN_X_PLAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIDO_PK ON &OWNER..TR_TIPOS_DOCUMENTOS
(X_TIDO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIDO_NOMBRE_1_UK ON &OWNER..TR_TIPOS_DOCUMENTOS
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_UORG_COMP_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(UORG_X_UORG_COMP)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_USUA_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(USUA_C_USUA_BLQ)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_STMA_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_UORG_RES_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(UORG_X_UORG_RES)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_UORG_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(UORG_X_UORG)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_TIEV_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX TIEV_UORG_TRAM_FK_I ON &OWNER..TR_TIPOS_EVOLUCIONES
(UORG_X_UORG_TRAM)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIEV_PK ON &OWNER..TR_TIPOS_EVOLUCIONES
(X_TIEV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIEV_ABREV_1_UK ON &OWNER..TR_TIPOS_EVOLUCIONES
(C_ABREVIATURA, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX TIEX_STMA_FK_I ON &OWNER..TR_TIPOS_EXPEDIENTES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIEX_PK ON &OWNER..TR_TIPOS_EXPEDIENTES
(X_TIEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIEX_ABREV_1_UK ON &OWNER..TR_TIPOS_EXPEDIENTES
(C_ABREVIATURA, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIIN_PK ON &OWNER..TR_TIPOS_INDICACION
(X_TIIN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIIN_ABREV_1_UK ON &OWNER..TR_TIPOS_INDICACION
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TINO_PK ON &OWNER..TR_TIPOS_NORMATIVA
(X_TINO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TINO_ABREV_1_UK ON &OWNER..TR_TIPOS_NORMATIVA
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX &OWNER..TR_TIPOS_PAGO_PK ON &OWNER..TR_TIPOS_PAGO
(X_TIPA)
LOGGING
NOPARALLEL;


CREATE INDEX TIPA_STMA_FK_I ON &OWNER..TR_TIPOS_PARRAFOS
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIPA_PK ON &OWNER..TR_TIPOS_PARRAFOS
(X_TIPA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIPA_ABREV_1_UK ON &OWNER..TR_TIPOS_PARRAFOS
(C_ABREVIATURA, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIPU_PK ON &OWNER..TR_TIPOS_PUBLICACION
(X_TIPU)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIPU_ABREV_1_UK ON &OWNER..TR_TIPOS_PUBLICACION
(C_ABREVIATURA)
LOGGING
NOPARALLEL;


CREATE INDEX TIRE_STMA_FK_I ON &OWNER..TR_TIPOS_RELACIONES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIRE_PK ON &OWNER..TR_TIPOS_RELACIONES
(X_TIRE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TIRE_NOMBRE_1_UK ON &OWNER..TR_TIPOS_RELACIONES
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX TRXP_TXTE_FK_I ON &OWNER..TR_TRANSEVOL_X_PERFILES
(TXTE_X_TIEV, TXTE_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX TRXP_PEUS_FK_I ON &OWNER..TR_TRANSEVOL_X_PERFILES
(PEUS_X_PEUS)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TRXP_PK ON &OWNER..TR_TRANSEVOL_X_PERFILES
(PEUS_X_PEUS, TXTE_X_TIEV, TXTE_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX TRAN_TIAC_FK_I ON &OWNER..TR_TRANSICIONES
(TIAC_X_TIAC)
LOGGING
NOPARALLEL;


CREATE INDEX TRAN_TRAN_FK_I ON &OWNER..TR_TRANSICIONES
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX TRAN_FASE_FIN_I ON &OWNER..TR_TRANSICIONES
(FASE_X_FASE_FIN)
LOGGING
NOPARALLEL;


CREATE INDEX TRAN_FASE_INI_I ON &OWNER..TR_TRANSICIONES
(FASE_X_FASE_INI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TRAN_PK ON &OWNER..TR_TRANSICIONES
(X_TRAN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TRAN_1_UK ON &OWNER..TR_TRANSICIONES
(V_TIPO, L_VALIDA, T_ETIQUETA, FASE_X_FASE_INI, FASE_X_FASE_FIN, 
TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX TRAG_TRAN_FK_I ON &OWNER..TR_TRANSICIONES_GR
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX TRAG_DDPG_FK_I ON &OWNER..TR_TRANSICIONES_GR
(DDPG_X_DDPG)
LOGGING
NOPARALLEL;


CREATE INDEX TRAG_EXTG_INI_FK_I ON &OWNER..TR_TRANSICIONES_GR
(EXTG_X_EXTG_INI)
LOGGING
NOPARALLEL;


CREATE INDEX TRAG_EXTG_FIN_FK_I ON &OWNER..TR_TRANSICIONES_GR
(EXTG_X_EXTG_FIN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TRAG_PK ON &OWNER..TR_TRANSICIONES_GR
(X_TRAG)
LOGGING
NOPARALLEL;


CREATE INDEX TXTE_TRAN_FK_I ON &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS
(TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX TXTE_TIEV_FK_I ON &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX TXTE_TRAN_PROV_FK_I ON &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS
(TRAN_X_TRAN_PROV)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX TXTE_PK ON &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS
(TIEV_X_TIEV, TRAN_X_TRAN)
LOGGING
NOPARALLEL;


CREATE INDEX USAS_USUA_FK_I ON &OWNER..TR_USUARIOS_ASIGNADOS
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE INDEX USAS_EXPE_FK_I ON &OWNER..TR_USUARIOS_ASIGNADOS
(EXPE_X_EXPE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX USAS_PK ON &OWNER..TR_USUARIOS_ASIGNADOS
(X_USAS)
LOGGING
NOPARALLEL;


CREATE INDEX UXPU_PEUS_FK_I ON &OWNER..TR_USUARIOS_X_PERFILES_USUARIO
(PEUS_X_PEUS)
LOGGING
NOPARALLEL;


CREATE INDEX UXPU_USUA_FK_I ON &OWNER..TR_USUARIOS_X_PERFILES_USUARIO
(USUA_C_USUARIO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UXPU_PK ON &OWNER..TR_USUARIOS_X_PERFILES_USUARIO
(USUA_C_USUARIO, PEUS_X_PEUS)
LOGGING
NOPARALLEL;


CREATE INDEX VARI_TIAC_FK_I ON &OWNER..TR_VARIABLES
(TIAC_X_TIAC)
LOGGING
NOPARALLEL;


CREATE INDEX VARI_STMA_FK_I ON &OWNER..TR_VARIABLES
(STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX VARI_PK ON &OWNER..TR_VARIABLES
(X_VARI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX VARI_NOMBRE_1_UK ON &OWNER..TR_VARIABLES
(C_NOMBRE, STMA_X_STMA)
LOGGING
NOPARALLEL;


CREATE INDEX VADO_DOEX_FK_I ON &OWNER..TR_VARIABLES_DOCEXP
(DOEX_X_DOEX)
LOGGING
NOPARALLEL;


CREATE INDEX VADO_VARI_FK_I ON &OWNER..TR_VARIABLES_DOCEXP
(VARI_X_VARI)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX VADO_PK ON &OWNER..TR_VARIABLES_DOCEXP
(DOEX_X_DOEX, VARI_X_VARI)
LOGGING
NOPARALLEL;


CREATE INDEX VATI_VARI_FK_I ON &OWNER..TR_VARIABLES_TIPDOC
(VARI_X_VARI)
LOGGING
NOPARALLEL;


CREATE INDEX VATI_TIDO_FK_I ON &OWNER..TR_VARIABLES_TIPDOC
(TIDO_X_TIDO)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX VATI_PK ON &OWNER..TR_VARIABLES_TIPDOC
(TIDO_X_TIDO, VARI_X_VARI)
LOGGING
NOPARALLEL;


CREATE INDEX VEFL_TIEV_FK_I ON &OWNER..TR_VERSIONES_FLUJOS
(TIEV_X_TIEV)
LOGGING
NOPARALLEL;


CREATE INDEX VEFL_TIEX_FK_I ON &OWNER..TR_VERSIONES_FLUJOS
(TIEX_X_TIEX)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX VEFL_PK ON &OWNER..TR_VERSIONES_FLUJOS
(TIEV_X_TIEV, TIEX_X_TIEX)
LOGGING
NOPARALLEL;


CREATE OR REPLACE FUNCTION md5 (p_in VARCHAR2)
       RETURN VARCHAR2
    IS
       l_hash   VARCHAR2 (32);
    BEGIN
       l_hash :=RAWTOHEX(UTL_RAW.cast_to_raw(DBMS_OBFUSCATION_TOOLKIT.md5 (input_string=> p_in)));
       RETURN l_hash;
    END;
/

SHOW ERRORS;

CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_sistemas (creado_api,
                                            f_creacion,
                                            modificado_api,
                                            f_modifica,
                                            x_stma,
                                            c_sistema,
                                            d_sistema,
                                            v_conex_bus,
                                            comp_x_comp_inf,
                                            comp_x_comp_avi,
                                            comp_x_comp_guar,
                                            comp_x_comp_arch,
                                            comp_x_comp_reg,
                                            comp_x_comp_firma,
                                            comp_x_comp_noti
                                           )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, x_stma,
          c_sistema, d_sistema, v_conex_bus, comp_x_comp_inf, comp_x_comp_avi,
          comp_x_comp_guar, comp_x_comp_arch, comp_x_comp_reg,
          comp_x_comp_firma, comp_x_comp_noti
     FROM &OWNER..GN_sistemas s
    WHERE s.x_stma IN (
             SELECT DISTINCT p.stma_x_stma
                        FROM &OWNER..TR_usuarios_x_perfiles_usuario upu,
                             &OWNER..TR_perfiles_usuarios p
                       WHERE (upu.peus_x_peus = p.x_peus)
                         AND (upu.usua_c_usuario = USER)
                         AND (p.stma_x_stma = s.x_stma))
       OR USER = (SELECT v_constante
                    FROM &OWNER..GN_constantes
                   WHERE c_constante = 'TRUSUPROP')
       OR s.c_sistema = (SELECT v_constante
                           FROM &OWNER..GN_constantes
                          WHERE c_constante = 'TRSTMA');




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_documentos (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_tido,
                                                    t_etiqueta,
                                                    c_nombre,
                                                    d_descripcion,
                                                    v_ent_sal,
                                                    v_inc_gen,
                                                    l_multiple,
                                                    l_fecha_firma,
                                                    l_informar,
                                                    l_archivable,
                                                    l_versionable,
                                                    l_reutilizable,
                                                    l_fusionar_var,
                                                    l_registrable,
                                                    l_notificable,
                                                    v_modogen,
                                                    l_firma_digi,
                                                    v_tipo_firma,
                                                    l_obsoleto,
                                                    t_auxiliar,
                                                    c_niwa,
                                                    plan_x_plan,
                                                    stma_x_stma,
                                                    v_clase_doc,
                                                    tpcr_x_tpcr,
                                                    coplanmult_x_coplanmult,
                                                    l_valida_cons,
                                                    tden_x_tden,
                                                    l_firma_dinamica,
                                                    tipa_x_tipa
                                                   )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_tido, f.t_etiqueta, f.c_nombre, f.d_descripcion, f.v_ent_sal,
          f.v_inc_gen, f.l_multiple, f.l_fecha_firma, f.l_informar,
          f.l_archivable, f.l_versionable, f.l_reutilizable, f.l_fusionar_var,
          f.l_registrable, f.l_notificable, f.v_modogen, f.l_firma_digi,
          f.v_tipo_firma, f.l_obsoleto, f.t_auxiliar, f.c_niwa, f.plan_x_plan,
          f.stma_x_stma, f.v_clase_doc, f.tpcr_x_tpcr,
          f.coplanmult_x_coplanmult, f.l_valida_cons, f.tden_x_tden,
          f.l_firma_dinamica, f.tipa_x_tipa
     FROM &OWNER..TR_tipos_documentos f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_perfiles_usuarios (f_creacion,
                                                     f_modifica,
                                                     creado_api,
                                                     modificado_api,
                                                     x_peus,
                                                     c_nombre,
                                                     d_descripcion,
                                                     stma_x_stma
                                                    )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_peus, f.c_nombre, f.d_descripcion, f.stma_x_stma
     FROM &OWNER..TR_perfiles_usuarios f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_fases (f_creacion,
                                         f_modifica,
                                         creado_api,
                                         modificado_api,
                                         x_fase,
                                         c_nombre,
                                         d_descripcion,
                                         l_informar,
                                         meta_x_meta,
                                         n_orden,
                                         t_auxiliar,
                                         tiev_x_tiev,
                                         l_telematica,
                                         stma_x_stma
                                        )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_fase, f.c_nombre, f.d_descripcion, f.l_informar, f.meta_x_meta,
          f.n_orden, f.t_auxiliar, f.tiev_x_tiev, f.l_telematica,
          f.stma_x_stma
     FROM &OWNER..TR_fases f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_uni_org (creado_api,
                                           f_creacion,
                                           modificado_api,
                                           f_modifica,
                                           x_uorg,
                                           c_uni_org,
                                           s_uni_org,
                                           d_uni_org,
                                           v_tipo,
                                           muni_c_municipio,
                                           prov_c_provincia,
                                           tiva_c_tipo_via,
                                           t_nombre_via,
                                           n_numero,
                                           t_letra,
                                           t_escalera,
                                           n_piso,
                                           t_puerta,
                                           c_postal,
                                           t_telefono,
                                           t_tlfmovil,
                                           t_fax,
                                           t_email,
                                           c_ciwa,
                                           t_id_aries,
                                           t_identificador,
                                           t_digito_control,
                                           f_ini_vig,
                                           f_fin_vig,
                                           uorg_x_uorg,
                                           tior_x_tior,
                                           torz_c_tipo_orgz,
                                           c_prelacion,
                                           c_dir3
                                          )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, x_uorg,
          c_uni_org, s_uni_org, d_uni_org, v_tipo, muni_c_municipio,
          prov_c_provincia, tiva_c_tipo_via, t_nombre_via, n_numero, t_letra,
          t_escalera, n_piso, t_puerta, c_postal, t_telefono, t_tlfmovil,
          t_fax, t_email, c_ciwa, t_id_aries, t_identificador,
          t_digito_control, f_ini_vig, f_fin_vig, uorg_x_uorg, tior_x_tior,
          torz_c_tipo_orgz, c_prelacion, c_dir3
     FROM &OWNER..GN_uni_org;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_variables (f_creacion,
                                             f_modifica,
                                             creado_api,
                                             modificado_api,
                                             x_vari,
                                             c_nombre,
                                             d_descripcion,
                                             v_implementacion,
                                             t_paquete,
                                             t_nomb_funcion,
                                             tiac_x_tiac,
                                             stma_x_stma
                                            )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_vari, f.c_nombre, f.d_descripcion, f.v_implementacion,
          f.t_paquete, f.t_nomb_funcion, f.tiac_x_tiac, f.stma_x_stma
     FROM &OWNER..TR_variables f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_relaciones (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_tire,
                                                    c_nombre,
                                                    d_descripcion,
                                                    stma_x_stma
                                                   )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_tire, f.c_nombre, f.d_descripcion, f.stma_x_stma
     FROM &OWNER..TR_tipos_relaciones f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_bloques (f_creacion,
                                           f_modifica,
                                           creado_api,
                                           modificado_api,
                                           x_bloq,
                                           stma_x_stma,
                                           c_nombre,
                                           d_descripcion,
                                           v_tipo,
                                           l_informar,
                                           c_formula,
                                           d_accion_inicio,
                                           d_accion_retorno,
                                           c_procesa
                                          )
AS
   SELECT bl.f_creacion, bl.f_modifica, bl.creado_api, bl.modificado_api,
          bl.x_bloq, bl.stma_x_stma, bl.c_nombre, bl.d_descripcion, bl.v_tipo,
          bl.l_informar, bl.c_formula, bl.d_accion_inicio,
          bl.d_accion_retorno, bl.c_procesa
     FROM &OWNER..TR_bloques bl, &OWNER..GN_v_sistemas sis
    WHERE bl.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_condiciones_acciones (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        x_coac,
                                                        c_nombre,
                                                        d_descripcion,
                                                        v_tipo,
                                                        l_param_ref_exp,
                                                        l_param_ref_tran,
                                                        l_param_ref_docper,
                                                        l_param_ref_expxfas,
                                                        l_param_ref_tipevo,
                                                        l_param_fecha,
                                                        l_param_usuario,
                                                        l_param_ref_fase,
                                                        l_param_ref_tipdoc,
                                                        v_implementacion,
                                                        v_compleja,
                                                        t_paquete,
                                                        t_nomb_funcion,
                                                        t_expresion,
                                                        stma_x_stma,
                                                        t_texto_param
                                                       )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_coac, f.c_nombre, f.d_descripcion, f.v_tipo, f.l_param_ref_exp,
          f.l_param_ref_tran, f.l_param_ref_docper, f.l_param_ref_expxfas,
          f.l_param_ref_tipevo, f.l_param_fecha, f.l_param_usuario,
          f.l_param_ref_fase, f.l_param_ref_tipdoc, f.v_implementacion,
          f.v_compleja, f.t_paquete, f.t_nomb_funcion, f.t_expresion,
          f.stma_x_stma, f.t_texto_param
     FROM &OWNER..TR_condiciones_acciones f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_expedientes (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_expe,
                                               l_informado,
                                               t_num_exp,
                                               t_titulo_exp,
                                               f_archivo,
                                               t_observaciones,
                                               b_otros_datos,
                                               comp_x_comp,
                                               uorg_x_uorg,
                                               uorg_x_uorg_envia,
                                               t_url_wanda,
                                               usua_c_usuario,
                                               t_identificador_eni,
                                               t_ref_archiva,
                                               v_estado_archiva,
                                               t_numreg_archiva,
                                               t_organo,
                                               c_clasificacion
                                              )
AS
   SELECT e.f_creacion, e.f_modifica, e.creado_api, e.modificado_api,
          e.x_expe, e.l_informado, e.t_num_exp, e.t_titulo_exp, e.f_archivo,
          e.t_observaciones, e.b_otros_datos, e.comp_x_comp, e.uorg_x_uorg,
          e.uorg_x_uorg_envia, e.t_url_wanda, e.usua_c_usuario,
          e.t_identificador_eni, e.t_ref_archiva, e.v_estado_archiva,
          e.t_numreg_archiva, e.t_organo, e.c_clasificacion
     FROM &OWNER..TR_expedientes e;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_razonint_procedimiento (f_creacion,
                                                          f_modifica,
                                                          creado_api,
                                                          modificado_api,
                                                          rain_x_rain,
                                                          tiev_x_tiev,
                                                          cardinalidad_min,
                                                          cardinalidad_max
                                                         )
AS
   SELECT t.f_creacion, t.f_modifica, t.creado_api, t.modificado_api,
          t.rain_x_rain, t.tiev_x_tiev, t.cardinalidad_min,
          t.cardinalidad_max
     FROM &OWNER..TR_razonint_procedimiento t,
          &OWNER..TR_tipos_evoluciones evo,
          &OWNER..GN_v_sistemas sis
    WHERE evo.stma_x_stma = sis.x_stma AND t.tiev_x_tiev = evo.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_razint_x_docperevol (f_creacion,
                                                       f_modifica,
                                                       creado_api,
                                                       modificado_api,
                                                       rain_x_rain,
                                                       tiev_x_tiev,
                                                       dope_x_dope,
                                                       cardinalidad_min,
                                                       cardinalidad_max,
                                                       n_firma_min,
                                                       n_firma_max,
                                                       l_editar,
                                                       l_telematica
                                                      )
AS
   SELECT t.f_creacion, t.f_modifica, t.creado_api, t.modificado_api,
          t.rain_x_rain, t.tiev_x_tiev, t.dope_x_dope, t.cardinalidad_min,
          t.cardinalidad_max, t.n_firma_min, t.n_firma_max, t.l_editar,
          t.l_telematica
     FROM &OWNER..TR_razint_x_docperevol t,
          &OWNER..TR_tipos_evoluciones evo,
          &OWNER..GN_v_sistemas sis
    WHERE evo.stma_x_stma = sis.x_stma AND t.tiev_x_tiev = evo.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_cons_planmult (f_creacion,
                                                 f_modifica,
                                                 creado_api,
                                                 modificado_api,
                                                 x_coplanmult,
                                                 stma_x_stma,
                                                 c_nombre,
                                                 d_descripcion,
                                                 t_paquete,
                                                 t_nomb_funcion,
                                                 l_param_ref_exp,
                                                 l_param_ref_tipdoc,
                                                 l_param_ref_docper,
                                                 l_param_ref_expxfas,
                                                 l_param_ref_tipevo,
                                                 l_param_fecha,
                                                 l_param_usuario
                                                )
AS
   SELECT t.f_creacion, t.f_modifica, t.creado_api, t.modificado_api,
          t.x_coplanmult, t.stma_x_stma, t.c_nombre, t.d_descripcion,
          t.t_paquete, t.t_nomb_funcion, t.l_param_ref_exp,
          t.l_param_ref_tipdoc, t.l_param_ref_docper, t.l_param_ref_expxfas,
          t.l_param_ref_tipevo, t.l_param_fecha, t.l_param_usuario
     FROM &OWNER..TR_cons_planmult t, &OWNER..GN_v_sistemas sis
    WHERE t.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_expedientes_borrados (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        x_expe_bor,
                                                        expe_x_expe_bor,
                                                        l_informado,
                                                        t_num_exp,
                                                        t_titulo_exp,
                                                        f_archivo,
                                                        t_observaciones,
                                                        b_otros_datos,
                                                        comp_x_comp,
                                                        uorg_x_uorg,
                                                        uorg_x_uorg_envia,
                                                        t_url_wanda,
                                                        usua_c_usuario,
                                                        stma_x_stma,
                                                        l_reinicio,
                                                        t_ref_archiva,
                                                        v_estado_archiva,
                                                        t_numreg_archiva
                                                       )
AS
   SELECT e.f_creacion, e.f_modifica, e.creado_api, e.modificado_api,
          e.x_expe_bor, e.expe_x_expe_bor, e.l_informado, e.t_num_exp,
          e.t_titulo_exp, e.f_archivo, e.t_observaciones, e.b_otros_datos,
          e.comp_x_comp, e.uorg_x_uorg, e.uorg_x_uorg_envia, e.t_url_wanda,
          e.usua_c_usuario, e.stma_x_stma, e.l_reinicio, e.t_ref_archiva,
          e.v_estado_archiva, e.t_numreg_archiva
     FROM &OWNER..TR_expedientes_borrados e, &OWNER..GN_v_sistemas sis
    WHERE e.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_doc_expe_borrados (f_creacion,
                                                     f_modifica,
                                                     creado_api,
                                                     modificado_api,
                                                     x_doex_bor,
                                                     doex_x_doex_bor,
                                                     expe_x_expe,
                                                     tido_x_tido,
                                                     exef_x_exef,
                                                     usua_c_usuario,
                                                     f_alta,
                                                     l_presentado,
                                                     l_correcto,
                                                     v_estado,
                                                     l_informado,
                                                     l_reutilizable,
                                                     l_firma_digi,
                                                     v_modogen,
                                                     f_limite,
                                                     b_documento,
                                                     t_nomb_fichero,
                                                     t_formato,
                                                     t_observaciones,
                                                     f_caducidad,
                                                     f_finalizacion,
                                                     f_archivo,
                                                     t_version,
                                                     c_hash,
                                                     b_otros_datos,
                                                     ref_warda,
                                                     ref_warda_anx,
                                                     doex_x_doex,
                                                     comp_x_comp,
                                                     v_clase_doc,
                                                     stma_x_stma
                                                    )
AS
   SELECT doex.f_creacion, doex.f_modifica, doex.creado_api,
          doex.modificado_api, doex.x_doex_bor, doex.doex_x_doex_bor,
          doex.expe_x_expe, doex.tido_x_tido, doex.exef_x_exef,
          doex.usua_c_usuario, doex.f_alta, doex.l_presentado,
          doex.l_correcto, doex.v_estado, doex.l_informado,
          doex.l_reutilizable, doex.l_firma_digi, doex.v_modogen,
          doex.f_limite, doex.b_documento, doex.t_nomb_fichero,
          doex.t_formato, doex.t_observaciones, doex.f_caducidad,
          doex.f_finalizacion, doex.f_archivo, doex.t_version, doex.c_hash,
          doex.b_otros_datos, doex.ref_warda, doex.ref_warda_anx,
          doex.doex_x_doex, doex.comp_x_comp, doex.v_clase_doc,
          doex.stma_x_stma
     FROM &OWNER..TR_doc_expe_borrados doex, &OWNER..GN_v_sistemas sis
    WHERE doex.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_parrafos (f_creacion,
                                                  f_modifica,
                                                  creado_api,
                                                  modificado_api,
                                                  x_tipa,
                                                  c_abreviatura,
                                                  d_descripcion,
                                                  t_contenido,
                                                  v_alineacion,
                                                  t_etiqueta,
                                                  v_estilo,
                                                  v_estilo_etiq,
                                                  v_ubicacion,
                                                  l_editable,
                                                  b_imagen,
                                                  t_formato,
                                                  t_nomb_fichero,
                                                  stma_x_stma
                                                 )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_tipa, f.c_abreviatura, f.d_descripcion, f.t_contenido,
          f.v_alineacion, f.t_etiqueta, f.v_estilo, f.v_estilo_etiq,
          f.v_ubicacion, f.l_editable, f.b_imagen, f.t_formato,
          f.t_nomb_fichero, f.stma_x_stma
     FROM &OWNER..TR_tipos_parrafos f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_expedientes (f_creacion,
                                                     f_modifica,
                                                     creado_api,
                                                     modificado_api,
                                                     x_tiex,
                                                     c_abreviatura,
                                                     d_descripcion,
                                                     l_vigente,
                                                     stma_x_stma
                                                    )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_tiex, f.c_abreviatura, f.d_descripcion, f.l_vigente,
          f.stma_x_stma
     FROM &OWNER..TR_tipos_expedientes f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_actos (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_tiac,
                                               c_abreviatura,
                                               d_descripcion,
                                               stma_x_stma
                                              )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_tiac, f.c_abreviatura, f.d_descripcion, f.stma_x_stma
     FROM &OWNER..TR_tipos_actos f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_plantillas (f_creacion,
                                              f_modifica,
                                              creado_api,
                                              modificado_api,
                                              x_plan,
                                              c_nombre,
                                              d_descripcion,
                                              t_nomb_informe,
                                              stma_x_stma
                                             )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_plan, f.c_nombre, f.d_descripcion, f.t_nomb_informe,
          f.stma_x_stma
     FROM &OWNER..TR_plantillas f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_parametros (f_creacion,
                                              f_modifica,
                                              creado_api,
                                              modificado_api,
                                              x_para,
                                              c_nombre,
                                              d_descripcion,
                                              v_tipo,
                                              n_tamanio,
                                              stma_x_stma
                                             )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_para, f.c_nombre, f.d_descripcion, f.v_tipo, f.n_tamanio,
          f.stma_x_stma
     FROM &OWNER..TR_parametros f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_metafases (f_creacion,
                                             f_modifica,
                                             creado_api,
                                             modificado_api,
                                             x_meta,
                                             c_nombre,
                                             d_descripcion,
                                             l_informar,
                                             n_orden,
                                             stma_x_stma
                                            )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_meta, f.c_nombre, f.d_descripcion, f.l_informar, f.n_orden,
          f.stma_x_stma
     FROM &OWNER..TR_metafases f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_constantes (f_creacion,
                                              f_modifica,
                                              creado_api,
                                              modificado_api,
                                              c_constante,
                                              d_constante,
                                              v_constante,
                                              stma_x_stma
                                             )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.c_constante, f.d_constante, f.v_constante, f.stma_x_stma
     FROM &OWNER..TR_constantes f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_numeradores (creado_api,
                                               f_creacion,
                                               modificado_api,
                                               f_modifica,
                                               x_num,
                                               anyo,
                                               sis_origen,
                                               numerador
                                              )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, x_num, anyo,
          sis_origen, numerador
     FROM &OWNER..TR_numeradores;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_formatodoc_eni (creado_api,
                                                  f_creacion,
                                                  modificado_api,
                                                  f_modifica,
                                                  x_foen,
                                                  c_formato_eni,
                                                  c_formato_trewa
                                                 )
AS
   SELECT fordoc.creado_api, fordoc.f_creacion, fordoc.modificado_api,
          fordoc.f_modifica, fordoc.x_foen, fordoc.c_formato_eni,
          fordoc.c_formato_trewa
     FROM &OWNER..TR_formatodoc_eni fordoc;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_estelab_eni (creado_api,
                                               f_creacion,
                                               modificado_api,
                                               f_modifica,
                                               x_esla,
                                               c_estelab_eni,
                                               d_estelab_eni
                                              )
AS
   SELECT esla.creado_api, esla.f_creacion, esla.modificado_api,
          esla.f_modifica, esla.x_esla, esla.c_estelab_eni,
          esla.d_estelab_eni
     FROM &OWNER..TR_estelab_eni esla;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_remisiones (creado_api,
                                              f_creacion,
                                              modificado_api,
                                              f_modifica,
                                              x_remi,
                                              expe_x_expe,
                                              c_csv_origen,
                                              t_sistema_origen,
                                              t_sistema_destino,
                                              c_reg_entrada,
                                              c_reg_salida,
                                              t_entorno,
                                              t_version_nti_ja,
                                              f_remision,
                                              f_recepcion,
                                              c_ident_lote,
                                              t_&OWNER..SEQ_lote
                                             )
AS
   SELECT REM.creado_api, REM.f_creacion, REM.modificado_api, REM.f_modifica,
          REM.x_remi, REM.expe_x_expe, REM.c_csv_origen, REM.t_sistema_origen,
          REM.t_sistema_destino, REM.c_reg_entrada, REM.c_reg_salida,
          REM.t_entorno, REM.t_version_nti_ja, REM.f_remision,
          REM.f_recepcion, REM.c_ident_lote, REM.t_&OWNER..SEQ_lote
     FROM &OWNER..TR_remisiones REM;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_accesos_adm (creado_api,
                                               f_creacion,
                                               modificado_api,
                                               f_modifica,
                                               x_acc,
                                               usua_c_usu,
                                               l_acceso
                                              )
AS
   SELECT am.creado_api, am.f_creacion, am.modificado_api, am.f_modifica,
          am.x_acc, am.usua_c_usu, am.l_acceso
     FROM &OWNER..TR_accesos_adm am;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_datos_tipo_pago (f_creacion,
                                                   f_modifica,
                                                   x_dapa,
                                                   tipa_x_tipa,
                                                   c_atributo,
                                                   t_valor,
                                                   creado_api,
                                                   modificado_api
                                                  )
AS
   SELECT f_creacion, f_modifica, x_dapa, tipa_x_tipa, c_atributo, t_valor,
          creado_api, modificado_api
     FROM &OWNER..TR_datos_tipo_pago;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipodoc_eni (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_tden,
                                               c_tipodoc_eni,
                                               d_tipodoc_eni,
                                               v_origen,
                                               v_grupo_doc
                                              )
AS
   SELECT dn.f_creacion, dn.f_modifica, dn.creado_api, dn.modificado_api,
          dn.x_tden, dn.c_tipodoc_eni, dn.d_tipodoc_eni, dn.v_origen,
          dn.v_grupo_doc
     FROM &OWNER..TR_tipodoc_eni dn;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_pago (f_creacion,
                                              f_modifica,
                                              x_tipa,
                                              c_modelo,
                                              t_concepto,
                                              n_codigo_territorial,
                                              n_importe_defecto,
                                              n_plazo_pago,
                                              l_autoliquidacion,
                                              l_obligatorio,
                                              d_descripcion,
                                              n_iva,
                                              creado_api,
                                              modificado_api
                                             )
AS
   SELECT f_creacion, f_modifica, x_tipa, c_modelo, t_concepto,
          n_codigo_territorial, n_importe_defecto, n_plazo_pago,
          l_autoliquidacion, l_obligatorio, d_descripcion, n_iva, creado_api,
          modificado_api
     FROM &OWNER..TR_tipos_pago;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_certif (f_creacion,
                                                f_modifica,
                                                x_tpcr,
                                                c_nombre,
                                                d_descripcion,
                                                t_url_consulta,
                                                t_clase_implem,
                                                creado_api,
                                                modificado_api
                                               )
AS
   SELECT f_creacion, f_modifica, x_tpcr, c_nombre, d_descripcion,
          t_url_consulta, t_clase_implem, creado_api, modificado_api
     FROM &OWNER..TR_tipos_certif;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_calendar (f_creacion,
                                            f_modifica,
                                            creado_api,
                                            modificado_api,
                                            x_cale,
                                            muni_c_provincia,
                                            muni_c_municipio,
                                            f_festivo,
                                            t_descripcion,
                                            l_periodico
                                           )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_cale,
          muni_c_provincia, muni_c_municipio, f_festivo, t_descripcion,
          l_periodico
     FROM &OWNER..TR_calendar;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_documentos_expedientes (f_creacion,
                                                          f_modifica,
                                                          creado_api,
                                                          modificado_api,
                                                          x_doex,
                                                          expe_x_expe,
                                                          tido_x_tido,
                                                          exef_x_exef,
                                                          usua_c_usuario,
                                                          f_alta,
                                                          l_presentado,
                                                          l_correcto,
                                                          v_estado,
                                                          l_informado,
                                                          l_reutilizable,
                                                          l_firma_digi,
                                                          v_modogen,
                                                          f_limite,
                                                          b_documento,
                                                          t_nomb_fichero,
                                                          t_formato,
                                                          t_observaciones,
                                                          f_caducidad,
                                                          f_finalizacion,
                                                          f_archivo,
                                                          t_version,
                                                          c_hash,
                                                          b_otros_datos,
                                                          ref_warda,
                                                          ref_warda_anx,
                                                          doex_x_doex,
                                                          comp_x_comp,
                                                          v_clase_doc,
                                                          t_identificador_eni,
                                                          t_num_doc,
                                                          t_organo,
                                                          t_num_doc_orig,
                                                          tden_x_tden,
                                                          esla_x_esla
                                                         )
AS
   SELECT doex.f_creacion, doex.f_modifica, doex.creado_api,
          doex.modificado_api, doex.x_doex, doex.expe_x_expe,
          doex.tido_x_tido, doex.exef_x_exef, doex.usua_c_usuario,
          doex.f_alta, doex.l_presentado, doex.l_correcto, doex.v_estado,
          doex.l_informado, doex.l_reutilizable, doex.l_firma_digi,
          doex.v_modogen, doex.f_limite, doex.b_documento,
          doex.t_nomb_fichero, doex.t_formato, doex.t_observaciones,
          doex.f_caducidad, doex.f_finalizacion, doex.f_archivo,
          doex.t_version, doex.c_hash, doex.b_otros_datos, doex.ref_warda,
          doex.ref_warda_anx, doex.doex_x_doex, doex.comp_x_comp,
          doex.v_clase_doc, doex.t_identificador_eni, doex.t_num_doc,
          doex.t_organo, doex.t_num_doc_orig, doex.tden_x_tden,
          doex.esla_x_esla
     FROM &OWNER..TR_documentos_expedientes doex, &OWNER..TR_v_tipos_documentos td
    WHERE doex.tido_x_tido = td.x_tido;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_bloques_permitidos (f_creacion,
                                                      f_modifica,
                                                      creado_api,
                                                      modificado_api,
                                                      x_blpe,
                                                      fase_x_fase,
                                                      bloq_x_bloq_fin,
                                                      t_etiqueta,
                                                      d_descripcion,
                                                      l_obligatorio,
                                                      l_valido,
                                                      l_informar,
                                                      n_orden,
                                                      t_etiq_larga,
                                                      bloq_x_bloq_ini,
                                                      tiac_x_tiac
                                                     )
AS
   SELECT bp.f_creacion, bp.f_modifica, bp.creado_api, bp.modificado_api,
          bp.x_blpe, bp.fase_x_fase, bp.bloq_x_bloq_fin, bp.t_etiqueta,
          bp.d_descripcion, bp.l_obligatorio, bp.l_valido, bp.l_informar,
          bp.n_orden, bp.t_etiq_larga, bp.bloq_x_bloq_ini, bp.tiac_x_tiac
     FROM &OWNER..TR_bloques_permitidos bp, &OWNER..TR_v_fases f
    WHERE bp.fase_x_fase = f.x_fase;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_usuarios (f_creacion,
                                            f_modifica,
                                            creado_api,
                                            modificado_api,
                                            c_usuario,
                                            v_tipo_ident,
                                            t_identificador,
                                            t_apellido1,
                                            t_apellido2,
                                            t_nombre,
                                            v_sexo,
                                            f_alta,
                                            f_baja,
                                            t_email,
                                            t_clave,
                                            f_clave,
                                            c_anagrama_fiscal,
                                            t_delegado
                                           )
AS
   SELECT usu.f_creacion, usu.f_modifica, usu.creado_api, usu.modificado_api,
          usu.c_usuario, usu.v_tipo_ident, usu.t_identificador,
          usu.t_apellido1, usu.t_apellido2, usu.t_nombre, usu.v_sexo,
          usu.f_alta, usu.f_baja, usu.t_email, usu.t_clave, usu.f_clave,
          usu.c_anagrama_fiscal, usu.t_delegado
     FROM &OWNER..GN_usuarios usu
    WHERE usu.c_usuario IN (
             SELECT DISTINCT upu.usua_c_usuario
                        FROM &OWNER..GN_usuarios u,
                             &OWNER..TR_usuarios_x_perfiles_usuario upu,
                             &OWNER..TR_v_perfiles_usuarios pu
                       WHERE (u.c_usuario = upu.usua_c_usuario(+))
                         AND (upu.peus_x_peus = pu.x_peus)
                         AND (u.c_usuario = usu.c_usuario))
       OR NOT EXISTS (SELECT upu2.usua_c_usuario
                        FROM &OWNER..TR_usuarios_x_perfiles_usuario upu2
                       WHERE upu2.usua_c_usuario = usu.c_usuario)
       OR USER = (SELECT v_constante
                    FROM &OWNER..GN_constantes
                   WHERE c_constante = 'TRUSUPROP');




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_normativa (f_creacion,
                                                   f_modifica,
                                                   creado_api,
                                                   modificado_api,
                                                   x_tino,
                                                   c_abreviatura,
                                                   d_tipo_norma,
                                                   l_obsoleto,
                                                   c_niwa
                                                  )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tino,
          c_abreviatura, d_tipo_norma, l_obsoleto, c_niwa
     FROM &OWNER..TR_tipos_normativa;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_publicacion (f_creacion,
                                                     f_modifica,
                                                     creado_api,
                                                     modificado_api,
                                                     x_tipu,
                                                     c_abreviatura,
                                                     d_tipo_publi,
                                                     l_obsoleto,
                                                     c_niwa
                                                    )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tipu,
          c_abreviatura, d_tipo_publi, l_obsoleto, c_niwa
     FROM &OWNER..TR_tipos_publicacion;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_indicacion (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_tiin,
                                                    c_abreviatura,
                                                    d_tipo_indica,
                                                    l_obsoleto,
                                                    c_niwa
                                                   )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tiin,
          c_abreviatura, d_tipo_indica, l_obsoleto, c_niwa
     FROM &OWNER..TR_tipos_indicacion;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_contacto (f_creacion,
                                                  f_modifica,
                                                  creado_api,
                                                  modificado_api,
                                                  x_tcon,
                                                  c_abreviatura,
                                                  d_tipo_contacto,
                                                  l_obsoleto,
                                                  c_niwa
                                                 )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tcon,
          c_abreviatura, d_tipo_contacto, l_obsoleto, c_niwa
     FROM &OWNER..TR_tipos_contacto;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_componente (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_tico,
                                                    c_abreviatura,
                                                    d_tipo_comp,
                                                    l_obsoleto,
                                                    c_niwa
                                                   )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tico,
          c_abreviatura, d_tipo_comp, l_obsoleto, c_niwa
     FROM &OWNER..TR_tipos_componente;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_textos_disposiciones (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        x_tedi,
                                                        t_texto,
                                                        v_tipo
                                                       )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tedi, t_texto,
          v_tipo
     FROM &OWNER..TR_textos_disposiciones;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_razones_interes (f_creacion,
                                                   f_modifica,
                                                   creado_api,
                                                   modificado_api,
                                                   x_rain,
                                                   c_abreviatura,
                                                   d_razon_interes,
                                                   l_obsoleto,
                                                   c_niwa
                                                  )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_rain,
          c_abreviatura, d_razon_interes, l_obsoleto, c_niwa
     FROM &OWNER..TR_razones_interes;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_normativas (f_creacion,
                                              f_modifica,
                                              creado_api,
                                              modificado_api,
                                              x_norm,
                                              tino_x_tino,
                                              tipu_x_tipu,
                                              amle_x_amle,
                                              d_normativa,
                                              f_vigor,
                                              t_titulo,
                                              n_numero,
                                              n_anio,
                                              f_publicacion,
                                              n_publicacion,
                                              c_niwa
                                             )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_norm,
          tino_x_tino, tipu_x_tipu, amle_x_amle, d_normativa, f_vigor,
          t_titulo, n_numero, n_anio, f_publicacion, n_publicacion, c_niwa
     FROM &OWNER..TR_normativas;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_interesados (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_inte,
                                               tiid_c_abreviatura,
                                               t_identificador,
                                               t_apellido1,
                                               t_apellido2,
                                               t_nombre,
                                               v_sexo,
                                               t_digito_control,
                                               c_ciwa,
                                               f_nacimiento,
                                               f_baja,
                                               t_num_rm,
                                               f_rca,
                                               t_epigrafe_iae,
                                               t_epigrafe_cnae,
                                               t_comentarios,
                                               c_anagrama_fiscal,
                                               b_otros_datos,
                                               torz_c_tipo_orgz,
                                               daco_x_daco,
                                               t_razon_social,
                                               tiid_c_abrev_empr,
                                               t_ident_empresa
                                              )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_inte,
          tiid_c_abreviatura, t_identificador, t_apellido1, t_apellido2,
          t_nombre, v_sexo, t_digito_control, c_ciwa, f_nacimiento, f_baja,
          t_num_rm, f_rca, t_epigrafe_iae, t_epigrafe_cnae, t_comentarios,
          c_anagrama_fiscal, b_otros_datos, torz_c_tipo_orgz, daco_x_daco,
          t_razon_social, tiid_c_abrev_empr, t_ident_empresa
     FROM &OWNER..TR_interesados;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_firmantes_definidos (f_creacion,
                                                       f_modifica,
                                                       creado_api,
                                                       modificado_api,
                                                       x_fide,
                                                       ptuo_x_uorg,
                                                       ptuo_x_putr,
                                                       tedi_x_tedi,
                                                       v_tipo,
                                                       f_ini_vig,
                                                       f_fin_vig,
                                                       fide_x_fide
                                                      )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_fide,
          ptuo_x_uorg, ptuo_x_putr, tedi_x_tedi, v_tipo, f_ini_vig, f_fin_vig,
          fide_x_fide
     FROM &OWNER..TR_firmantes_definidos;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_errores (f_creacion,
                                           f_modifica,
                                           creado_api,
                                           modificado_api,
                                           x_erro,
                                           t_mensaje
                                          )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_erro,
          t_mensaje
     FROM &OWNER..TR_errores;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_datos_contacto (f_creacion,
                                                  f_modifica,
                                                  creado_api,
                                                  modificado_api,
                                                  x_daco,
                                                  muni_c_municipio,
                                                  muni_c_provincia,
                                                  tiva_c_tipo_via,
                                                  t_nombre_via,
                                                  n_numero,
                                                  t_letra,
                                                  t_escalera,
                                                  n_piso,
                                                  t_puerta,
                                                  c_postal,
                                                  t_telefono,
                                                  t_tlfmovil,
                                                  t_fax,
                                                  t_email,
                                                  pais_c_pais,
                                                  t_ciudad,
                                                  t_region
                                                 )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_daco,
          muni_c_municipio, muni_c_provincia, tiva_c_tipo_via, t_nombre_via,
          n_numero, t_letra, t_escalera, n_piso, t_puerta, c_postal,
          t_telefono, t_tlfmovil, t_fax, t_email, pais_c_pais, t_ciudad,
          t_region
     FROM &OWNER..TR_datos_contacto;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_datos_componente (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_datc,
                                                    comp_x_comp,
                                                    c_atributo,
                                                    t_valor
                                                   )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_datc,
          comp_x_comp, c_atributo, t_valor
     FROM &OWNER..TR_datos_componente;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_componentes (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_comp,
                                               c_nombre,
                                               d_descripcion,
                                               tico_x_tico,
                                               uorg_x_uorg,
                                               t_direccion_ip,
                                               t_usuario,
                                               t_password,
                                               c_niwa
                                              )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_comp,
          c_nombre, d_descripcion, tico_x_tico, uorg_x_uorg, t_direccion_ip,
          t_usuario, t_password, c_niwa
     FROM &OWNER..TR_componentes;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_ambitos_ley (creado_api,
                                               f_creacion,
                                               modificado_api,
                                               f_modifica,
                                               x_amle,
                                               c_abreviatura,
                                               d_ambito_ley,
                                               l_obsoleto,
                                               c_niwa
                                              )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, x_amle,
          c_abreviatura, d_ambito_ley, l_obsoleto, c_niwa
     FROM &OWNER..TR_ambitos_ley;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_tipos_via (creado_api,
                                             f_creacion,
                                             modificado_api,
                                             f_modifica,
                                             c_tipo_via,
                                             d_tipo_via,
                                             l_obsoleto,
                                             c_niwa
                                            )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_tipo_via,
          d_tipo_via, l_obsoleto, c_niwa
     FROM &OWNER..GN_tipos_via;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_tipos_organizacion (creado_api,
                                                      f_creacion,
                                                      modificado_api,
                                                      f_modifica,
                                                      c_tipo_orgz,
                                                      d_tipo_orgz,
                                                      l_vigente
                                                     )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_tipo_orgz,
          d_tipo_orgz, l_vigente
     FROM &OWNER..GN_tipos_organizacion;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_plantillas_office (f_creacion,
                                                     f_modifica,
                                                     creado_api,
                                                     modificado_api,
                                                     cod_plan_office,
                                                     tido_x_tido,
                                                     t_nombre_fichero,
                                                     t_formato,
                                                     b_plantilla
                                                    )
AS
   SELECT t.f_creacion, t.f_modifica, t.creado_api, t.modificado_api,
          t.cod_plan_office, t.tido_x_tido, t.t_nombre_fichero, t.t_formato,
          t.b_plantilla
     FROM &OWNER..TR_plantillas_office t, &OWNER..TR_v_tipos_documentos doc,
          &OWNER..GN_v_sistemas sis
    WHERE doc.stma_x_stma = sis.x_stma AND t.tido_x_tido = doc.x_tido;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_variables_tipdoc (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    tido_x_tido,
                                                    vari_x_vari
                                                   )
AS
   SELECT vtp.f_creacion, vtp.f_modifica, vtp.creado_api, vtp.modificado_api,
          vtp.tido_x_tido, vtp.vari_x_vari
     FROM &OWNER..TR_variables_tipdoc vtp, &OWNER..TR_v_tipos_documentos td
    WHERE vtp.tido_x_tido = td.x_tido;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_usuarios_x_perfiles (f_creacion,
                                                       f_modifica,
                                                       creado_api,
                                                       modificado_api,
                                                       usua_c_usuario,
                                                       peus_x_peus
                                                      )
AS
   SELECT upu.f_creacion, upu.f_modifica, upu.creado_api, upu.modificado_api,
          upu.usua_c_usuario, upu.peus_x_peus
     FROM &OWNER..TR_usuarios_x_perfiles_usuario upu, &OWNER..TR_v_perfiles_usuarios p
    WHERE upu.peus_x_peus = p.x_peus;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_transiciones (f_creacion,
                                                f_modifica,
                                                creado_api,
                                                modificado_api,
                                                x_tran,
                                                t_etiqueta,
                                                d_transicion,
                                                l_valida,
                                                v_tipo,
                                                l_informar,
                                                d_fecha,
                                                n_orden,
                                                t_etiq_larga,
                                                fase_x_fase_ini,
                                                fase_x_fase_fin,
                                                tran_x_tran,
                                                tiac_x_tiac
                                               )
AS
   SELECT f_creacion, f_modifica, creado_api, modificado_api, x_tran,
          t_etiqueta, d_transicion, l_valida, v_tipo, l_informar, d_fecha,
          n_orden, t_etiq_larga, fase_x_fase_ini, fase_x_fase_fin,
          tran_x_tran, tiac_x_tiac
     FROM &OWNER..TR_transiciones t
    WHERE (   t.fase_x_fase_ini IN (SELECT x_fase
                                      FROM &OWNER..TR_v_fases f)
           OR t.fase_x_fase_ini IS NULL
          )
      AND (   t.fase_x_fase_fin IN (SELECT x_fase
                                      FROM &OWNER..TR_v_fases f)
           OR t.fase_x_fase_fin IS NULL
          );




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_imagenes (f_creacion,
                                            f_modifica,
                                            creado_api,
                                            modificado_api,
                                            x_imag,
                                            uorg_x_uorg,
                                            b_imagen,
                                            t_formato,
                                            t_nomb_fichero
                                           )
AS
   SELECT i.f_creacion, i.f_modifica, i.creado_api, i.modificado_api,
          i.x_imag, i.uorg_x_uorg, i.b_imagen, i.t_formato, i.t_nomb_fichero
     FROM &OWNER..TR_imagenes i, &OWNER..GN_v_uni_org u
    WHERE i.uorg_x_uorg = u.x_uorg;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_variables_docexp (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    doex_x_doex,
                                                    vari_x_vari
                                                   )
AS
   SELECT vd.f_creacion, vd.f_modifica, vd.creado_api, vd.modificado_api,
          vd.doex_x_doex, vd.vari_x_vari
     FROM &OWNER..TR_variables_docexp vd, &OWNER..TR_v_variables v
    WHERE vd.vari_x_vari = v.x_vari;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_relaciones (f_creacion,
                                              f_modifica,
                                              creado_api,
                                              modificado_api,
                                              x_rela,
                                              tire_x_tire,
                                              d_descripcion,
                                              fase_x_fase_a,
                                              fase_x_fase_b,
                                              tran_x_tran,
                                              tido_x_tido,
                                              tiev_x_tiev
                                             )
AS
   SELECT r.f_creacion, r.f_modifica, r.creado_api, r.modificado_api,
          r.x_rela, r.tire_x_tire, r.d_descripcion, r.fase_x_fase_a,
          r.fase_x_fase_b, r.tran_x_tran, r.tido_x_tido, r.tiev_x_tiev
     FROM &OWNER..TR_relaciones r, &OWNER..TR_v_tipos_relaciones tr
    WHERE r.tire_x_tire = tr.x_tire;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_parrafos_tipdocs (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_pati,
                                                    tido_x_tido,
                                                    tipa_x_tipa,
                                                    b_parrafo,
                                                    n_orden,
                                                    v_alineacion,
                                                    v_estilo,
                                                    v_estilo_etiq,
                                                    l_editable,
                                                    l_fusionar_var,
                                                    t_etiqueta,
                                                    b_imagen,
                                                    t_formato,
                                                    t_nomb_fichero
                                                   )
AS
   SELECT pt.f_creacion, pt.f_modifica, pt.creado_api, pt.modificado_api,
          pt.x_pati, pt.tido_x_tido, pt.tipa_x_tipa, pt.b_parrafo, pt.n_orden,
          pt.v_alineacion, pt.v_estilo, pt.v_estilo_etiq, pt.l_editable,
          pt.l_fusionar_var, pt.t_etiqueta, pt.b_imagen, pt.t_formato,
          pt.t_nomb_fichero
     FROM &OWNER..TR_parrafos_tipdocs pt, &OWNER..TR_v_tipos_documentos td
    WHERE pt.tido_x_tido = td.x_tido;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_parametros_variables (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        vari_x_vari,
                                                        para_x_para,
                                                        n_orden
                                                       )
AS
   SELECT pv.f_creacion, pv.f_modifica, pv.creado_api, pv.modificado_api,
          pv.vari_x_vari, pv.para_x_para, pv.n_orden
     FROM &OWNER..TR_parametros_variables pv, &OWNER..TR_v_variables v
    WHERE pv.vari_x_vari = v.x_vari;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_parametros_bloques (f_creacion,
                                                      f_modifica,
                                                      creado_api,
                                                      modificado_api,
                                                      bloq_x_bloq,
                                                      para_x_para,
                                                      n_orden
                                                     )
AS
   SELECT pb.f_creacion, pb.f_modifica, pb.creado_api, pb.modificado_api,
          pb.bloq_x_bloq, pb.para_x_para, pb.n_orden
     FROM &OWNER..TR_parametros_bloques pb, &OWNER..TR_v_bloques b
    WHERE pb.bloq_x_bloq = b.x_bloq;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_firmas_tipdocs (f_creacion,
                                                  f_modifica,
                                                  creado_api,
                                                  modificado_api,
                                                  tido_x_tido,
                                                  fide_x_fide,
                                                  n_orden,
                                                  l_editable,
                                                  t_etiqueta
                                                 )
AS
   SELECT ftd.f_creacion, ftd.f_modifica, ftd.creado_api, ftd.modificado_api,
          ftd.tido_x_tido, ftd.fide_x_fide, ftd.n_orden, ftd.l_editable,
          ftd.t_etiqueta
     FROM &OWNER..TR_firmas_tipdocs ftd, &OWNER..TR_v_tipos_documentos td
    WHERE ftd.tido_x_tido = td.x_tido;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_documentos_permitidos (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         x_dope,
                                                         fase_x_fase,
                                                         tido_x_tido,
                                                         t_etiqueta,
                                                         d_descripcion,
                                                         l_obligatorio,
                                                         l_valido,
                                                         l_informar,
                                                         n_orden,
                                                         t_etiq_larga,
                                                         t_auxiliar,
                                                         tiac_x_tiac
                                                        )
AS
   SELECT dp.f_creacion, dp.f_modifica, dp.creado_api, dp.modificado_api,
          dp.x_dope, dp.fase_x_fase, dp.tido_x_tido, dp.t_etiqueta,
          dp.d_descripcion, dp.l_obligatorio, dp.l_valido, dp.l_informar,
          dp.n_orden, dp.t_etiq_larga, dp.t_auxiliar, dp.tiac_x_tiac
     FROM &OWNER..TR_documentos_permitidos dp, &OWNER..TR_v_fases f
    WHERE dp.fase_x_fase = f.x_fase;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_documentos_delegados (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        x_dode,
                                                        tido_x_tido,
                                                        fide_x_fide,
                                                        f_ini_vig,
                                                        f_fin_vig
                                                       )
AS
   SELECT dode.f_creacion, dode.f_modifica, dode.creado_api,
          dode.modificado_api, dode.x_dode, dode.tido_x_tido,
          dode.fide_x_fide, dode.f_ini_vig, dode.f_fin_vig
     FROM &OWNER..TR_documentos_delegados dode, &OWNER..TR_v_tipos_documentos td
    WHERE dode.tido_x_tido = td.x_tido;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_condacc_x_transiciones (f_creacion,
                                                          f_modifica,
                                                          creado_api,
                                                          modificado_api,
                                                          coac_x_coac,
                                                          txte_x_tiev,
                                                          txte_x_tran,
                                                          l_obligatoria,
                                                          l_valida,
                                                          v_comprobar,
                                                          v_mostrar_msj,
                                                          t_mensaje_ok,
                                                          t_mensaje_no_ok,
                                                          t_texto_param
                                                         )
AS
   SELECT ct.f_creacion, ct.f_modifica, ct.creado_api, ct.modificado_api,
          ct.coac_x_coac, ct.txte_x_tiev, ct.txte_x_tran, ct.l_obligatoria,
          ct.l_valida, ct.v_comprobar, ct.v_mostrar_msj, ct.t_mensaje_ok,
          ct.t_mensaje_no_ok, ct.t_texto_param
     FROM &OWNER..TR_condacc_x_transiciones ct, &OWNER..TR_v_condiciones_acciones c
    WHERE ct.coac_x_coac = c.x_coac;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_condacc_x_docpertipevos (f_creacion,
                                                           f_modifica,
                                                           creado_api,
                                                           modificado_api,
                                                           coac_x_coac,
                                                           dxte_x_tiev,
                                                           dxte_x_fase,
                                                           dxte_x_tido,
                                                           l_obligatoria,
                                                           l_valida,
                                                           v_comprobar,
                                                           v_mostrar_msj,
                                                           t_mensaje_ok,
                                                           t_mensaje_no_ok,
                                                           t_texto_param
                                                          )
AS
   SELECT cdp.f_creacion, cdp.f_modifica, cdp.creado_api, cdp.modificado_api,
          cdp.coac_x_coac, cdp.dxte_x_tiev, cdp.dxte_x_fase, cdp.dxte_x_tido,
          cdp.l_obligatoria, cdp.l_valida, cdp.v_comprobar, cdp.v_mostrar_msj,
          cdp.t_mensaje_ok, cdp.t_mensaje_no_ok, cdp.t_texto_param
     FROM &OWNER..TR_condacc_x_docpertipevos cdp, &OWNER..TR_v_condiciones_acciones c
    WHERE cdp.coac_x_coac = c.x_coac;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_condacc_x_bloqpertipevos (f_creacion,
                                                            f_modifica,
                                                            creado_api,
                                                            modificado_api,
                                                            coac_x_coac,
                                                            bxte_x_tiev,
                                                            bxte_x_blpe,
                                                            bxte_x_fase,
                                                            bxte_x_bloq_fin,
                                                            l_obligatoria,
                                                            l_valida,
                                                            v_comprobar,
                                                            v_mostrar_msj,
                                                            t_mensaje_ok,
                                                            t_mensaje_no_ok,
                                                            bxte_x_bloq_ini,
                                                            t_texto_param
                                                           )
AS
   SELECT cbp.f_creacion, cbp.f_modifica, cbp.creado_api, cbp.modificado_api,
          cbp.coac_x_coac, cbp.bxte_x_tiev, cbp.bxte_x_blpe, cbp.bxte_x_fase,
          cbp.bxte_x_bloq_fin, cbp.l_obligatoria, cbp.l_valida,
          cbp.v_comprobar, cbp.v_mostrar_msj, cbp.t_mensaje_ok,
          cbp.t_mensaje_no_ok, cbp.bxte_x_bloq_ini, cbp.t_texto_param
     FROM &OWNER..TR_condacc_x_bloqpertipevos cbp, &OWNER..TR_v_condiciones_acciones c
    WHERE cbp.coac_x_coac = c.x_coac;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_organismos_expediente (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         x_uoex,
                                                         expe_x_expe,
                                                         uorg_x_uorg,
                                                         t_asocia,
                                                         t_observaciones,
                                                         f_ini_vig,
                                                         f_fin_vig
                                                        )
AS
   SELECT oe.f_creacion, oe.f_modifica, oe.creado_api, oe.modificado_api,
          oe.x_uoex, oe.expe_x_expe, oe.uorg_x_uorg, oe.t_asocia,
          oe.t_observaciones, oe.f_ini_vig, oe.f_fin_vig
     FROM &OWNER..TR_organismos_expediente oe, &OWNER..TR_v_expedientes e
    WHERE oe.expe_x_expe = e.x_expe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_usuarios_asignados (f_creacion,
                                                      f_modifica,
                                                      creado_api,
                                                      modificado_api,
                                                      x_usas,
                                                      expe_x_expe,
                                                      usua_c_usuario,
                                                      v_tipo,
                                                      f_alta,
                                                      f_baja,
                                                      t_razon_asigna
                                                     )
AS
   SELECT ua.f_creacion, ua.f_modifica, ua.creado_api, ua.modificado_api,
          ua.x_usas, ua.expe_x_expe, ua.usua_c_usuario, ua.v_tipo, ua.f_alta,
          ua.f_baja, ua.t_razon_asigna
     FROM &OWNER..TR_usuarios_asignados ua, &OWNER..TR_v_expedientes e
    WHERE ua.expe_x_expe = e.x_expe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_relaciones_expediente (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         x_reex,
                                                         expe_x_expe,
                                                         v_tipo_relacion,
                                                         t_num_exp,
                                                         t_titulo_exp,
                                                         t_observaciones,
                                                         expe_x_expe_int,
                                                         comp_x_comp,
                                                         expe_x_expe_ext
                                                        )
AS
   SELECT re.f_creacion, re.f_modifica, re.creado_api, re.modificado_api,
          re.x_reex, re.expe_x_expe, re.v_tipo_relacion, re.t_num_exp,
          re.t_titulo_exp, re.t_observaciones, re.expe_x_expe_int,
          re.comp_x_comp, re.expe_x_expe_ext
     FROM &OWNER..TR_relaciones_expediente re, &OWNER..TR_v_expedientes e
    WHERE re.expe_x_expe = e.x_expe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_interesados_expediente (f_creacion,
                                                          f_modifica,
                                                          creado_api,
                                                          modificado_api,
                                                          expe_x_expe,
                                                          inte_x_inte,
                                                          rain_x_rain,
                                                          daco_x_daco,
                                                          t_observaciones,
                                                          l_notifica
                                                         )
AS
   SELECT ie.f_creacion, ie.f_modifica, ie.creado_api, ie.modificado_api,
          ie.expe_x_expe, ie.inte_x_inte, ie.rain_x_rain, ie.daco_x_daco,
          ie.t_observaciones, ie.l_notifica
     FROM &OWNER..TR_interesados_expediente ie, &OWNER..TR_v_expedientes e
    WHERE ie.expe_x_expe = e.x_expe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_sim (f_creacion,
                                       f_modifica,
                                       creado_api,
                                       modificado_api,
                                       x_sim,
                                       expe_x_expe,
                                       usua_c_usu_rec,
                                       f_mensaje,
                                       l_leido,
                                       v_prioridad,
                                       t_mensaje,
                                       usua_c_usu_env
                                      )
AS
   SELECT s.f_creacion, s.f_modifica, s.creado_api, s.modificado_api, s.x_sim,
          s.expe_x_expe, s.usua_c_usu_rec, s.f_mensaje, s.l_leido,
          s.v_prioridad, s.t_mensaje, s.usua_c_usu_env
     FROM &OWNER..TR_sim s, &OWNER..TR_v_expedientes e
    WHERE s.expe_x_expe = e.x_expe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_tipos_organismo (creado_api,
                                                   f_creacion,
                                                   modificado_api,
                                                   f_modifica,
                                                   x_tior,
                                                   c_abreviatura,
                                                   d_tipo_organismo,
                                                   l_obsoleto,
                                                   c_niwa
                                                  )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, x_tior,
          c_abreviatura, d_tipo_organismo, l_obsoleto, c_niwa
     FROM &OWNER..GN_tipos_organismo;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_tipos_identificador (creado_api,
                                                       f_creacion,
                                                       modificado_api,
                                                       f_modifica,
                                                       c_abreviatura,
                                                       d_tipo_ident,
                                                       v_tipo_ident,
                                                       l_obsoleto,
                                                       c_niwa
                                                      )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_abreviatura,
          d_tipo_ident, v_tipo_ident, l_obsoleto, c_niwa
     FROM &OWNER..GN_tipos_identificador;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_puesto_trab (creado_api,
                                               f_creacion,
                                               modificado_api,
                                               f_modifica,
                                               c_puesto_trab,
                                               s_puesto_trab,
                                               d_puesto_trab
                                              )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_puesto_trab,
          s_puesto_trab, d_puesto_trab
     FROM &OWNER..GN_puesto_trab;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_ptos_uni_org (creado_api,
                                                f_creacion,
                                                modificado_api,
                                                f_modifica,
                                                uorg_x_uorg,
                                                pu&OWNER..TR_c_puesto_trab
                                               )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, uorg_x_uorg,
          pu&OWNER..TR_c_puesto_trab
     FROM &OWNER..GN_ptos_uni_org;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_provincias (creado_api,
                                              f_creacion,
                                              modificado_api,
                                              f_modifica,
                                              c_provincia,
                                              s_provincia,
                                              d_provincia
                                             )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_provincia,
          s_provincia, d_provincia
     FROM &OWNER..GN_provincias;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_paises (creado_api,
                                          f_creacion,
                                          modificado_api,
                                          f_modifica,
                                          c_pais,
                                          s_pais,
                                          d_pais
                                         )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_pais, s_pais,
          d_pais
     FROM &OWNER..GN_paises;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_municipios (creado_api,
                                              f_creacion,
                                              modificado_api,
                                              f_modifica,
                                              prov_c_provincia,
                                              c_municipio,
                                              s_municipio,
                                              d_municipio
                                             )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica,
          prov_c_provincia, c_municipio, s_municipio, d_municipio
     FROM &OWNER..GN_municipios;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_mod_invocar (creado_api,
                                               f_creacion,
                                               modificado_api,
                                               f_modifica,
                                               mdlo_c_modulo,
                                               mdlo_c_modulo_inv,
                                               l_mas_datos,
                                               l_ir_a
                                              )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, mdlo_c_modulo,
          mdlo_c_modulo_inv, l_mas_datos, l_ir_a
     FROM &OWNER..GN_mod_invocar;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_modulos (creado_api,
                                           f_creacion,
                                           modificado_api,
                                           f_modifica,
                                           c_modulo,
                                           s_modulo,
                                           d_modulo,
                                           l_clave,
                                           t_fichero_ayuda
                                          )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_modulo,
          s_modulo, d_modulo, l_clave, t_fichero_ayuda
     FROM &OWNER..GN_modulos;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_errores (creado_api,
                                           f_creacion,
                                           modificado_api,
                                           f_modifica,
                                           c_orierr,
                                           c_error,
                                           d_error,
                                           l_alerta,
                                           l_supwrn,
                                           v_tipo,
                                           t_amperr
                                          )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_orierr,
          c_error, d_error, l_alerta, l_supwrn, v_tipo, t_amperr
     FROM &OWNER..GN_errores;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_empleados (creado_api,
                                             f_creacion,
                                             modificado_api,
                                             f_modifica,
                                             usua_c_usuario,
                                             puor_x_uorg,
                                             puor_c_puesto_trab,
                                             v_tipo,
                                             f_nombramiento,
                                             f_cese,
                                             t_tratamiento,
                                             t_referencia
                                            )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, usua_c_usuario,
          puor_x_uorg, puor_c_puesto_trab, v_tipo, f_nombramiento, f_cese,
          t_tratamiento, t_referencia
     FROM &OWNER..GN_empleados;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..GN_v_constantes (creado_api,
                                              f_creacion,
                                              modificado_api,
                                              f_modifica,
                                              c_constante,
                                              d_constante,
                                              v_constante
                                             )
AS
   SELECT creado_api, f_creacion, modificado_api, f_modifica, c_constante,
          d_constante, v_constante
     FROM &OWNER..GN_constantes;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_pagos_tasas (f_creacion,
                                               f_modifica,
                                               x_pata,
                                               t_error_documento,
                                               t_error_pago,
                                               t_estado_documento,
                                               l_estado_pago,
                                               f_pago,
                                               n_importe,
                                               t_numero_documento,
                                               t_concepto,
                                               doex_x_doex,
                                               creado_api,
                                               modificado_api
                                              )
AS
   SELECT pt.f_creacion, pt.f_modifica, pt.x_pata, pt.t_error_documento,
          pt.t_error_pago, pt.t_estado_documento, pt.l_estado_pago, pt.f_pago,
          pt.n_importe, pt.t_numero_documento, pt.t_concepto, pt.doex_x_doex,
          pt.creado_api, pt.modificado_api
     FROM &OWNER..TR_pagos_tasas pt, &OWNER..TR_v_documentos_expedientes doex
    WHERE pt.doex_x_doex = doex.x_doex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tareas_expediente (f_creacion,
                                                     f_modifica,
                                                     creado_api,
                                                     modificado_api,
                                                     x_taex,
                                                     expe_x_expe,
                                                     blpe_x_blpe,
                                                     exef_x_exef,
                                                     usua_c_usuario,
                                                     f_comienzo,
                                                     v_estado,
                                                     l_informado,
                                                     f_limite,
                                                     f_finalizacion,
                                                     t_observaciones
                                                    )
AS
   SELECT te.f_creacion, te.f_modifica, te.creado_api, te.modificado_api,
          te.x_taex, te.expe_x_expe, te.blpe_x_blpe, te.exef_x_exef,
          te.usua_c_usuario, te.f_comienzo, te.v_estado, te.l_informado,
          te.f_limite, te.f_finalizacion, te.t_observaciones
     FROM &OWNER..TR_tareas_expediente te, &OWNER..TR_v_bloques_permitidos bp
    WHERE te.blpe_x_blpe = bp.x_blpe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_parrafos_docexps (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_pado,
                                                    doex_x_doex,
                                                    tipa_x_tipa,
                                                    b_parrafo,
                                                    n_orden,
                                                    v_alineacion,
                                                    v_estilo,
                                                    v_estilo_etiq,
                                                    l_editable,
                                                    t_etiqueta,
                                                    b_imagen,
                                                    t_formato,
                                                    t_nomb_fichero
                                                   )
AS
   SELECT pd.f_creacion, pd.f_modifica, pd.creado_api, pd.modificado_api,
          pd.x_pado, pd.doex_x_doex, pd.tipa_x_tipa, pd.b_parrafo, pd.n_orden,
          pd.v_alineacion, pd.v_estilo, pd.v_estilo_etiq, pd.l_editable,
          pd.t_etiqueta, pd.b_imagen, pd.t_formato, pd.t_nomb_fichero
     FROM &OWNER..TR_parrafos_docexps pd, &OWNER..TR_v_documentos_expedientes de
    WHERE pd.doex_x_doex = de.x_doex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_parametros_documentos (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         x_pmdo,
                                                         doex_x_doex,
                                                         c_nombre,
                                                         t_valor
                                                        )
AS
   SELECT pd.f_creacion, pd.f_modifica, pd.creado_api, pd.modificado_api,
          pd.x_pmdo, pd.doex_x_doex, pd.c_nombre, pd.t_valor
     FROM &OWNER..TR_parametros_documentos pd, &OWNER..TR_v_documentos_expedientes doex
    WHERE pd.doex_x_doex = doex.x_doex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_firmas_docexp (f_creacion,
                                                 f_modifica,
                                                 creado_api,
                                                 modificado_api,
                                                 doex_x_doex,
                                                 usua_c_usu_digi,
                                                 puor_x_uorg,
                                                 puor_x_putr,
                                                 usua_c_usuario,
                                                 f_firma,
                                                 l_editable,
                                                 n_orden,
                                                 puor_x_uorg_d,
                                                 puor_x_pu&OWNER..TR_d,
                                                 puor_x_uorg_s,
                                                 puor_x_pu&OWNER..TR_s,
                                                 t_pie,
                                                 t_fdo,
                                                 t_auxiliar,
                                                 c_hash_ptf,
                                                 f_firma_digi,
                                                 c_transaccion,
                                                 b_pkcs7,
                                                 fido_x_doex,
                                                 fido_c_usu_digi,
                                                 fido_x_uorg,
                                                 fido_x_putr,
                                                 x_fido,
                                                 inte_x_inte,
                                                 v_tipo_firma,
                                                 v_tf_eni,
                                                 c_codigo_csv,
                                                 t_regulacion_csv
                                                )
AS
   SELECT fde.f_creacion, fde.f_modifica, fde.creado_api, fde.modificado_api,
          fde.doex_x_doex, fde.usua_c_usu_digi, fde.puor_x_uorg,
          fde.puor_x_putr, fde.usua_c_usuario, fde.f_firma, fde.l_editable,
          fde.n_orden, fde.puor_x_uorg_d, fde.puor_x_pu&OWNER..TR_d,
          fde.puor_x_uorg_s, fde.puor_x_pu&OWNER..TR_s, fde.t_pie, fde.t_fdo,
          fde.t_auxiliar, fde.c_hash_ptf, fde.f_firma_digi, fde.c_transaccion,
          fde.b_pkcs7, fde.fido_x_doex, fde.fido_c_usu_digi, fde.fido_x_uorg,
          fde.fido_x_putr, fde.x_fido, fde.inte_x_inte, fde.v_tipo_firma,
          fde.v_tf_eni, fde.c_codigo_csv, fde.t_regulacion_csv
     FROM &OWNER..TR_firmas_docexp fde, &OWNER..TR_v_documentos_expedientes doex
    WHERE fde.doex_x_doex = doex.x_doex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_firmas (f_creacion,
                                          f_modifica,
                                          creado_api,
                                          modificado_api,
                                          x_firm,
                                          usua_c_usuario,
                                          b_firma,
                                          t_formato,
                                          t_nomb_fichero
                                         )
AS
   SELECT f.f_creacion, f.f_modifica, f.creado_api, f.modificado_api,
          f.x_firm, f.usua_c_usuario, f.b_firma, f.t_formato,
          f.t_nomb_fichero
     FROM &OWNER..TR_firmas f, &OWNER..GN_v_usuarios u
    WHERE f.usua_c_usuario = u.c_usuario;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipos_evoluciones (creado_api,
                                                     f_creacion,
                                                     modificado_api,
                                                     f_modifica,
                                                     x_tiev,
                                                     c_abreviatura,
                                                     d_descripcion,
                                                     v_categoria,
                                                     l_vigente,
                                                     l_informar,
                                                     t_descripcion_amp,
                                                     t_comentarios,
                                                     b_otros_datos,
                                                     c_niwa,
                                                     tiev_x_tiev,
                                                     usua_c_usua_blq,
                                                     uorg_x_uorg,
                                                     uorg_x_uorg_comp,
                                                     uorg_x_uorg_res,
                                                     uorg_x_uorg_tram,
                                                     t_finalidad,
                                                     c_rpa,
                                                     t_serie_doc,
                                                     stma_x_stma,
                                                     l_adaptadoeni,
                                                     c_clasificacion
                                                    )
AS
   SELECT f.creado_api, f.f_creacion, f.modificado_api, f.f_modifica,
          f.x_tiev, f.c_abreviatura, f.d_descripcion, f.v_categoria,
          f.l_vigente, f.l_informar, f.t_descripcion_amp, f.t_comentarios,
          f.b_otros_datos, f.c_niwa, f.tiev_x_tiev, f.usua_c_usua_blq,
          f.uorg_x_uorg, f.uorg_x_uorg_comp, f.uorg_x_uorg_res,
          f.uorg_x_uorg_tram, f.t_finalidad, f.c_rpa, f.t_serie_doc,
          f.stma_x_stma, f.l_adaptadoeni, f.c_clasificacion
     FROM &OWNER..TR_tipos_evoluciones f, &OWNER..GN_v_sistemas sis
    WHERE f.stma_x_stma = sis.x_stma;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_interesados_documento (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         doex_x_doex,
                                                         inex_x_expe,
                                                         inex_x_inte,
                                                         inex_x_rain,
                                                         rain_x_rain,
                                                         t_observaciones,
                                                         l_consentimiento
                                                        )
AS
   SELECT ido.f_creacion, ido.f_modifica, ido.creado_api, ido.modificado_api,
          ido.doex_x_doex, ido.inex_x_expe, ido.inex_x_inte, ido.inex_x_rain,
          ido.rain_x_rain, ido.t_observaciones, ido.l_consentimiento
     FROM &OWNER..TR_interesados_documento ido, &OWNER..TR_v_expedientes ex
    WHERE ido.inex_x_expe = ex.x_expe;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_registros_docexp (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    reg_c_registro,
                                                    reg_t_tipo_reg,
                                                    doex_x_doex
                                                   )
AS
   SELECT rgde.f_creacion, rgde.f_modifica, rgde.creado_api,
          rgde.modificado_api, rgde.reg_c_registro, rgde.reg_t_tipo_reg,
          rgde.doex_x_doex
     FROM &OWNER..TR_registros_docexp rgde, &OWNER..TR_v_documentos_expedientes doex
    WHERE rgde.doex_x_doex = doex.x_doex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_notificaciones_inte (f_creacion,
                                                       f_modifica,
                                                       indo_x_doex,
                                                       indo_x_expe,
                                                       indo_x_inte,
                                                       indo_x_rain_inex,
                                                       indo_x_rain,
                                                       noen_x_noen,
                                                       creado_api,
                                                       modificado_api
                                                      )
AS
   SELECT n.f_creacion, n.f_modifica, n.indo_x_doex, n.indo_x_expe,
          n.indo_x_inte, n.indo_x_rain_inex, n.indo_x_rain, n.noen_x_noen,
          n.creado_api, n.modificado_api
     FROM &OWNER..TR_notificaciones_inte n, &OWNER..TR_v_documentos_expedientes doex
    WHERE n.indo_x_doex = doex.x_doex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_relaciones_interesado (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         inte_x_inte_ini,
                                                         inte_x_inte_fin,
                                                         tcon_x_tcon,
                                                         x_rein,
                                                         f_ini_vig,
                                                         f_fin_vig,
                                                         l_representa,
                                                         l_pendiente,
                                                         tiev_x_tiev,
                                                         f_revoca,
                                                         f_rechazo
                                                        )
AS
   SELECT rein.f_creacion, rein.f_modifica, rein.creado_api,
          rein.modificado_api, rein.inte_x_inte_ini, rein.inte_x_inte_fin,
          rein.tcon_x_tcon, rein.x_rein, rein.f_ini_vig, rein.f_fin_vig,
          rein.l_representa, rein.l_pendiente, rein.tiev_x_tiev,
          rein.f_revoca, rein.f_rechazo
     FROM &OWNER..TR_relaciones_interesado rein, &OWNER..TR_v_tipos_evoluciones
    WHERE rein.tiev_x_tiev = x_tiev(+);




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_defprocs_gr (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_ddpg,
                                               tiev_x_tiev,
                                               d_diagrama
                                              )
AS
   SELECT dg.f_creacion, dg.f_modifica, dg.creado_api, dg.modificado_api,
          dg.x_ddpg, dg.tiev_x_tiev, dg.d_diagrama
     FROM &OWNER..TR_defprocs_gr dg, &OWNER..TR_v_tipos_evoluciones te
    WHERE dg.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_caducidades (f_creacion,
                                               f_modifica,
                                               creado_api,
                                               modificado_api,
                                               x_cadu,
                                               tiev_x_tiev,
                                               tran_x_tran,
                                               c_abreviatura,
                                               d_descripcion,
                                               v_unidad,
                                               n_unidades,
                                               v_tipo,
                                               l_vigente
                                              )
AS
   SELECT c.f_creacion, c.f_modifica, c.creado_api, c.modificado_api,
          c.x_cadu, c.tiev_x_tiev, c.tran_x_tran, c.c_abreviatura,
          c.d_descripcion, c.v_unidad, c.n_unidades, c.v_tipo, c.l_vigente
     FROM &OWNER..TR_caducidades c, &OWNER..TR_v_tipos_evoluciones te
    WHERE c.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_comunicaciones (creado_api,
                                                  f_creacion,
                                                  modificado_api,
                                                  f_modifica,
                                                  x_com,
                                                  usua_c_usu_env,
                                                  t_titulo,
                                                  t_cuerpo,
                                                  v_prioridad,
                                                  f_inicio,
                                                  f_fin,
                                                  expe_x_expe,
                                                  inte_x_inte,
                                                  rain_x_rain,
                                                  tiev_x_tiev,
                                                  l_leido,
                                                  f_leido
                                                 )
AS
   SELECT c.creado_api, c.f_creacion, c.modificado_api, c.f_modifica, c.x_com,
          c.usua_c_usu_env, c.t_titulo, c.t_cuerpo, c.v_prioridad, c.f_inicio,
          c.f_fin, c.expe_x_expe, c.inte_x_inte, c.rain_x_rain, c.tiev_x_tiev,
          c.l_leido, c.f_leido
     FROM &OWNER..TR_comunicaciones c, &OWNER..TR_v_expedientes e, &OWNER..TR_v_tipos_evoluciones te
    WHERE c.expe_x_expe = e.x_expe OR te.x_tiev = c.tiev_x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_tipcer_x_tipos_evol (creado_api,
                                                       f_creacion,
                                                       modificado_api,
                                                       f_modifica,
                                                       tiev_x_tiev,
                                                       tpcr_x_tpcr,
                                                       c_peticion
                                                      )
AS
   SELECT t.creado_api, t.f_creacion, t.modificado_api, t.f_modifica,
          t.tiev_x_tiev, t.tpcr_x_tpcr, t.c_peticion
     FROM &OWNER..TR_tipcer_x_tipos_evol t, &OWNER..TR_v_tipos_evoluciones te
    WHERE te.x_tiev = t.tiev_x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_organismos_procedimiento (f_creacion,
                                                            f_modifica,
                                                            creado_api,
                                                            modificado_api,
                                                            x_uopr,
                                                            tiev_x_tiev,
                                                            uorg_x_uorg,
                                                            t_asocia,
                                                            t_observaciones,
                                                            f_ini_vig,
                                                            f_fin_vig
                                                           )
AS
   SELECT op.f_creacion, op.f_modifica, op.creado_api, op.modificado_api,
          op.x_uopr, op.tiev_x_tiev, op.uorg_x_uorg, op.t_asocia,
          op.t_observaciones, op.f_ini_vig, op.f_fin_vig
     FROM &OWNER..TR_organismos_procedimiento op, &OWNER..TR_v_tipos_evoluciones te
    WHERE op.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_versiones_flujos (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    tiev_x_tiev,
                                                    tiex_x_tiex,
                                                    f_vigor,
                                                    d_descripcion
                                                   )
AS
   SELECT vf.f_creacion, vf.f_modifica, vf.creado_api, vf.modificado_api,
          vf.tiev_x_tiev, vf.tiex_x_tiex, vf.f_vigor, vf.d_descripcion
     FROM &OWNER..TR_versiones_flujos vf, &OWNER..TR_v_tipos_evoluciones te
    WHERE vf.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_transiciones_x_procs (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        tiev_x_tiev,
                                                        tran_x_tran,
                                                        n_num_max,
                                                        v_unidad,
                                                        n_unidades,
                                                        d_fecha_limite,
                                                        tran_x_tran_prov
                                                       )
AS
   SELECT tte.f_creacion, tte.f_modifica, tte.creado_api, tte.modificado_api,
          tte.tiev_x_tiev, tte.tran_x_tran, tte.n_num_max, tte.v_unidad,
          tte.n_unidades, tte.d_fecha_limite, tte.tran_x_tran_prov
     FROM &OWNER..TR_transiciones_x_tipos_evols tte, &OWNER..TR_v_tipos_evoluciones te
    WHERE tte.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_transevol_x_perfiles (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        peus_x_peus,
                                                        txte_x_tiev,
                                                        txte_x_tran,
                                                        v_permiso
                                                       )
AS
   SELECT tp.f_creacion, tp.f_modifica, tp.creado_api, tp.modificado_api,
          tp.peus_x_peus, tp.txte_x_tiev, tp.txte_x_tran, tp.v_permiso
     FROM &OWNER..TR_transevol_x_perfiles tp, &OWNER..TR_v_tipos_evoluciones te
    WHERE tp.txte_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_plantillas_procedimiento (f_creacion,
                                                            f_modifica,
                                                            creado_api,
                                                            modificado_api,
                                                            x_plpr,
                                                            tiev_x_tiev,
                                                            t_nombre,
                                                            t_descripcion,
                                                            b_fichero,
                                                            t_nomb_fichero,
                                                            t_formato
                                                           )
AS
   SELECT pp.f_creacion, pp.f_modifica, pp.creado_api, pp.modificado_api,
          pp.x_plpr, pp.tiev_x_tiev, pp.t_nombre, pp.t_descripcion,
          pp.b_fichero, pp.t_nomb_fichero, pp.t_formato
     FROM &OWNER..TR_plantillas_procedimiento pp, &OWNER..TR_v_tipos_evoluciones te
    WHERE pp.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_normativas_procedimiento (f_creacion,
                                                            f_modifica,
                                                            creado_api,
                                                            modificado_api,
                                                            tiev_x_tiev,
                                                            norm_x_norm
                                                           )
AS
   SELECT np.f_creacion, np.f_modifica, np.creado_api, np.modificado_api,
          np.tiev_x_tiev, np.norm_x_norm
     FROM &OWNER..TR_normativas_procedimiento np, &OWNER..TR_v_tipos_evoluciones te
    WHERE te.x_tiev = np.tiev_x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_indicaciones_ficha (f_creacion,
                                                      f_modifica,
                                                      creado_api,
                                                      modificado_api,
                                                      x_infi,
                                                      tiev_x_tiev,
                                                      tiin_x_tiin,
                                                      d_descripcion
                                                     )
AS
   SELECT ifi.f_creacion, ifi.f_modifica, ifi.creado_api, ifi.modificado_api,
          ifi.x_infi, ifi.tiev_x_tiev, ifi.tiin_x_tiin, ifi.d_descripcion
     FROM &OWNER..TR_indicaciones_ficha ifi, &OWNER..TR_v_tipos_evoluciones te
    WHERE ifi.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_expedientes_en_fase (f_creacion,
                                                       f_modifica,
                                                       creado_api,
                                                       modificado_api,
                                                       x_exef,
                                                       expe_x_expe,
                                                       tran_x_tran,
                                                       fase_x_fase,
                                                       usua_c_usuario,
                                                       f_entrada,
                                                       l_informado,
                                                       l_informado_fin,
                                                       l_abierta_evento,
                                                       tiev_x_tiev,
                                                       f_salida,
                                                       f_limite,
                                                       t_observaciones,
                                                       exef_x_exef,
                                                       usua_c_usua_blq
                                                      )
AS
   SELECT ef.f_creacion, ef.f_modifica, ef.creado_api, ef.modificado_api,
          ef.x_exef, ef.expe_x_expe, ef.tran_x_tran, ef.fase_x_fase,
          ef.usua_c_usuario, ef.f_entrada, ef.l_informado, ef.l_informado_fin,
          ef.l_abierta_evento, ef.tiev_x_tiev, ef.f_salida, ef.f_limite,
          ef.t_observaciones, ef.exef_x_exef, ef.usua_c_usua_blq
     FROM &OWNER..TR_expedientes_en_fase ef, &OWNER..TR_v_tipos_evoluciones tev
    WHERE ef.tiev_x_tiev = tev.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_docper_x_tipos_evol (f_creacion,
                                                       f_modifica,
                                                       creado_api,
                                                       modificado_api,
                                                       tiev_x_tiev,
                                                       dope_x_fase,
                                                       dope_x_tido,
                                                       v_unidad,
                                                       n_unidades,
                                                       d_fecha_limite
                                                      )
AS
   SELECT dte.f_creacion, dte.f_modifica, dte.creado_api, dte.modificado_api,
          dte.tiev_x_tiev, dte.dope_x_fase, dte.dope_x_tido, dte.v_unidad,
          dte.n_unidades, dte.d_fecha_limite
     FROM &OWNER..TR_docper_x_tipos_evol dte, &OWNER..TR_v_tipos_evoluciones te
    WHERE dte.tiev_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_docperevol_x_perfiles (f_creacion,
                                                         f_modifica,
                                                         creado_api,
                                                         modificado_api,
                                                         peus_x_peus,
                                                         dxte_x_tiev,
                                                         dxte_x_fase,
                                                         dxte_x_tido,
                                                         v_permiso
                                                        )
AS
   SELECT dp.f_creacion, dp.f_modifica, dp.creado_api, dp.modificado_api,
          dp.peus_x_peus, dp.dxte_x_tiev, dp.dxte_x_fase, dp.dxte_x_tido,
          dp.v_permiso
     FROM &OWNER..TR_docperevol_x_perfiles dp, &OWNER..TR_v_tipos_evoluciones te
    WHERE dp.dxte_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_cambios_evolexps (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_caev,
                                                    expe_x_expe,
                                                    vefl_x_tiex,
                                                    vefl_x_tiev,
                                                    usua_c_usuario,
                                                    f_asociacion,
                                                    l_activo,
                                                    t_observaciones
                                                   )
AS
   SELECT cev.f_creacion, cev.f_modifica, cev.creado_api, cev.modificado_api,
          cev.x_caev, cev.expe_x_expe, cev.vefl_x_tiex, cev.vefl_x_tiev,
          cev.usua_c_usuario, cev.f_asociacion, cev.l_activo,
          cev.t_observaciones
     FROM &OWNER..TR_cambios_evolexps cev, &OWNER..TR_v_tipos_evoluciones te
    WHERE cev.vefl_x_tiev = te.x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_bloqpers_x_tipos_evols (f_creacion,
                                                          f_modifica,
                                                          creado_api,
                                                          modificado_api,
                                                          tiev_x_tiev,
                                                          blpe_x_blpe,
                                                          blpe_x_fase,
                                                          blpe_x_bloq_fin,
                                                          v_unidad,
                                                          n_unidades,
                                                          d_fecha_limite,
                                                          blpe_x_bloq_ini
                                                         )
AS
   SELECT bte.f_creacion, bte.f_modifica, bte.creado_api, bte.modificado_api,
          bte.tiev_x_tiev, bte.blpe_x_blpe, bte.blpe_x_fase,
          bte.blpe_x_bloq_fin, bte.v_unidad, bte.n_unidades,
          bte.d_fecha_limite, bte.blpe_x_bloq_ini
     FROM &OWNER..TR_bloqpers_x_tipos_evols bte, &OWNER..TR_v_tipos_evoluciones te
    WHERE te.x_tiev = bte.tiev_x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_bloqperevol_x_perfiles (f_creacion,
                                                          f_modifica,
                                                          creado_api,
                                                          modificado_api,
                                                          peus_x_peus,
                                                          bxte_x_tiev,
                                                          bxte_x_blpe,
                                                          bxte_x_fase,
                                                          bxte_x_bloq_fin,
                                                          bxte_x_bloq_ini
                                                         )
AS
   SELECT bpp.f_creacion, bpp.f_modifica, bpp.creado_api, bpp.modificado_api,
          bpp.peus_x_peus, bpp.bxte_x_tiev, bpp.bxte_x_blpe, bpp.bxte_x_fase,
          bpp.bxte_x_bloq_fin, bpp.bxte_x_bloq_ini
     FROM &OWNER..TR_bloqperevol_x_perfiles bpp, &OWNER..TR_v_tipos_evoluciones te
    WHERE te.x_tiev = bpp.bxte_x_tiev;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_registro_operaciones (f_creacion,
                                                        f_modifica,
                                                        creado_api,
                                                        modificado_api,
                                                        x_reop,
                                                        rein_x_rein,
                                                        lire_x_lire,
                                                        f_operacion,
                                                        d_descripcion
                                                       )
AS
   SELECT reop.f_creacion, reop.f_modifica, reop.creado_api,
          reop.modificado_api, reop.x_reop, reop.rein_x_rein,
          reop.lire_x_lire, reop.f_operacion, reop.d_descripcion
     FROM &OWNER..TR_registro_operaciones reop, &OWNER..TR_v_relaciones_interesado rein
    WHERE rein_x_rein = x_rein;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_limites_relacion (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_lire,
                                                    rein_x_rein,
                                                    meta_x_meta,
                                                    fase_x_fase,
                                                    expe_x_expe,
                                                    f_ini_vig,
                                                    f_fin_vig
                                                   )
AS
   SELECT lire.f_creacion, lire.f_modifica, lire.creado_api,
          lire.modificado_api, lire.x_lire, lire.rein_x_rein,
          lire.meta_x_meta, lire.fase_x_fase, lire.expe_x_expe,
          lire.f_ini_vig, lire.f_fin_vig
     FROM &OWNER..TR_limites_relacion lire, &OWNER..TR_v_relaciones_interesado rein
    WHERE rein_x_rein = x_rein;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_metafases_gr (f_creacion,
                                                f_modifica,
                                                creado_api,
                                                modificado_api,
                                                x_metg,
                                                meta_x_meta,
                                                ddpg_x_ddpg,
                                                n_xizq,
                                                n_yarr,
                                                n_ancho,
                                                n_alto,
                                                n_color_texto,
                                                n_color_fondo
                                               )
AS
   SELECT mg.f_creacion, mg.f_modifica, mg.creado_api, mg.modificado_api,
          mg.x_metg, mg.meta_x_meta, mg.ddpg_x_ddpg, mg.n_xizq, mg.n_yarr,
          mg.n_ancho, mg.n_alto, mg.n_color_texto, mg.n_color_fondo
     FROM &OWNER..TR_metafases_gr mg, &OWNER..TR_v_defprocs_gr d
    WHERE mg.ddpg_x_ddpg = d.x_ddpg;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_limites_caducidades (f_creacion,
                                                       f_modifica,
                                                       creado_api,
                                                       modificado_api,
                                                       cadu_x_cadu,
                                                       tran_x_tran
                                                      )
AS
   SELECT lc.f_creacion, lc.f_modifica, lc.creado_api, lc.modificado_api,
          lc.cadu_x_cadu, lc.tran_x_tran
     FROM &OWNER..TR_limites_caducidades lc, &OWNER..TR_v_caducidades c
    WHERE lc.cadu_x_cadu = c.x_cadu;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_extremostran_gr (f_creacion,
                                                   f_modifica,
                                                   creado_api,
                                                   modificado_api,
                                                   x_extg,
                                                   fase_x_fase,
                                                   ddpg_x_ddpg,
                                                   n_xizq,
                                                   n_yarr,
                                                   n_ancho,
                                                   n_alto,
                                                   v_tipo,
                                                   n_color_fondo,
                                                   n_color_texto,
                                                   metg_x_metg
                                                  )
AS
   SELECT ex.f_creacion, ex.f_modifica, ex.creado_api, ex.modificado_api,
          ex.x_extg, ex.fase_x_fase, ex.ddpg_x_ddpg, ex.n_xizq, ex.n_yarr,
          ex.n_ancho, ex.n_alto, ex.v_tipo, ex.n_color_fondo,
          ex.n_color_texto, ex.metg_x_metg
     FROM &OWNER..TR_extremostran_gr ex, &OWNER..TR_v_defprocs_gr d
    WHERE ex.ddpg_x_ddpg = d.x_ddpg;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_consultas_cert (f_creacion,
                                                  f_modifica,
                                                  creado_api,
                                                  modificado_api,
                                                  indo_x_doex,
                                                  indo_x_expe,
                                                  indo_x_inte,
                                                  indo_x_rain_exp,
                                                  indo_x_rain_doc,
                                                  x_coce,
                                                  usua_c_usuario,
                                                  f_consulta,
                                                  c_consulta,
                                                  d_consulta,
                                                  b_datos_consulta
                                                 )
AS
   SELECT c.f_creacion, c.f_modifica, c.creado_api, c.modificado_api,
          c.indo_x_doex, c.indo_x_expe, c.indo_x_inte, c.indo_x_rain_exp,
          c.indo_x_rain_doc, c.x_coce, c.usua_c_usuario, c.f_consulta,
          c.c_consulta, c.d_consulta, c.b_datos_consulta
     FROM &OWNER..TR_consultas_cert c, &OWNER..TR_v_interesados_documento ido
    WHERE c.indo_x_doex = ido.doex_x_doex
      AND c.indo_x_expe = ido.inex_x_expe
      AND c.indo_x_inte = ido.inex_x_inte
      AND c.indo_x_rain_exp = ido.inex_x_rain
      AND c.indo_x_rain_doc = ido.rain_x_rain;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_registros (f_creacion,
                                             f_modifica,
                                             creado_api,
                                             modificado_api,
                                             c_registro,
                                             t_tipo_reg,
                                             f_registro,
                                             t_remitente,
                                             t_destinatario,
                                             t_oficina_sal,
                                             t_oficina_ent,
                                             t_asunto,
                                             b_registro
                                            )
AS
   SELECT rg.f_creacion, rg.f_modifica, rg.creado_api, rg.modificado_api,
          rg.c_registro, rg.t_tipo_reg, rg.f_registro, rg.t_remitente,
          rg.t_destinatario, rg.t_oficina_sal, rg.t_oficina_ent, rg.t_asunto,
          rg.b_registro
     FROM &OWNER..TR_registros rg
    WHERE EXISTS (
             SELECT rde.reg_c_registro, rde.reg_t_tipo_reg
               FROM &OWNER..TR_v_registros_docexp rde
              WHERE rde.reg_c_registro = rg.c_registro
                AND rde.reg_t_tipo_reg = rg.t_tipo_reg);




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_notificaciones_envio (f_creacion,
                                                        f_modifica,
                                                        x_noen,
                                                        rem_x_rem,
                                                        f_envio,
                                                        t_medio,
                                                        t_rechazo,
                                                        c_hash,
                                                        f_estado,
                                                        n_estado,
                                                        t_asunto,
                                                        t_cuerpo,
                                                        t_observaciones,
                                                        creado_api,
                                                        modificado_api
                                                       )
AS
   SELECT n.f_creacion, n.f_modifica, n.x_noen, n.rem_x_rem, n.f_envio,
          n.t_medio, n.t_rechazo, n.c_hash, n.f_estado, n.n_estado,
          n.t_asunto, n.t_cuerpo, n.t_observaciones, n.creado_api,
          n.modificado_api
     FROM &OWNER..TR_notificaciones_envio n, &OWNER..TR_v_notificaciones_inte noin
    WHERE n.x_noen = noin.noen_x_noen;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_transiciones_gr (f_creacion,
                                                   f_modifica,
                                                   creado_api,
                                                   modificado_api,
                                                   x_trag,
                                                   extg_x_extg_ini,
                                                   extg_x_extg_fin,
                                                   ddpg_x_ddpg,
                                                   n_color_linea,
                                                   n_color_texto,
                                                   tran_x_tran
                                                  )
AS
   SELECT tg.f_creacion, tg.f_modifica, tg.creado_api, tg.modificado_api,
          tg.x_trag, tg.extg_x_extg_ini, tg.extg_x_extg_fin, tg.ddpg_x_ddpg,
          tg.n_color_linea, tg.n_color_texto, tg.tran_x_tran
     FROM &OWNER..TR_transiciones_gr tg, &OWNER..TR_v_defprocs_gr d
    WHERE tg.ddpg_x_ddpg = d.x_ddpg;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_caducidades_exps (f_creacion,
                                                    f_modifica,
                                                    creado_api,
                                                    modificado_api,
                                                    x_caex,
                                                    expe_x_expe,
                                                    cadu_x_cadu,
                                                    l_activa,
                                                    f_inicio,
                                                    f_limite
                                                   )
AS
   SELECT cex.f_creacion, cex.f_modifica, cex.creado_api, cex.modificado_api,
          cex.x_caex, cex.expe_x_expe, cex.cadu_x_cadu, cex.l_activa,
          cex.f_inicio, cex.f_limite
     FROM &OWNER..TR_caducidades_exps cex, &OWNER..TR_v_caducidades c
    WHERE cex.cadu_x_cadu = c.x_cadu;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_notificaciones_remesas (f_creacion,
                                                          f_modifica,
                                                          x_rem,
                                                          f_remesa,
                                                          c_servicio,
                                                          id_remesa,
                                                          creado_api,
                                                          modificado_api
                                                         )
AS
   SELECT n.f_creacion, n.f_modifica, n.x_rem, n.f_remesa, n.c_servicio,
          n.id_remesa, n.creado_api, n.modificado_api
     FROM &OWNER..TR_notificaciones_remesas n, &OWNER..TR_v_notificaciones_envio noen
    WHERE n.x_rem = noen.rem_x_rem;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_nodostran_gr (f_creacion,
                                                f_modifica,
                                                creado_api,
                                                modificado_api,
                                                x_notg,
                                                trag_x_trag,
                                                n_x,
                                                n_y,
                                                n_orden
                                               )
AS
   SELECT ng.f_creacion, ng.f_modifica, ng.creado_api, ng.modificado_api,
          ng.x_notg, ng.trag_x_trag, ng.n_x, ng.n_y, ng.n_orden
     FROM &OWNER..TR_nodostran_gr ng, &OWNER..TR_v_transiciones_gr tg
    WHERE ng.trag_x_trag = tg.x_trag;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_modificaciones_caducidad (f_creacion,
                                                            f_modifica,
                                                            creado_api,
                                                            modificado_api,
                                                            x_moca,
                                                            caex_x_caex,
                                                            usua_c_usuario,
                                                            v_tipo,
                                                            f_inicio,
                                                            f_final,
                                                            v_unidad,
                                                            n_unidades
                                                           )
AS
   SELECT mc.f_creacion, mc.f_modifica, mc.creado_api, mc.modificado_api,
          mc.x_moca, mc.caex_x_caex, mc.usua_c_usuario, mc.v_tipo,
          mc.f_inicio, mc.f_final, mc.v_unidad, mc.n_unidades
     FROM &OWNER..TR_modificaciones_caducidades mc, &OWNER..TR_v_caducidades_exps ce
    WHERE mc.caex_x_caex = ce.x_caex;




/* Formatted on 2016/05/31 09:35 (Formatter Plus v4.8.8) */
CREATE OR REPLACE FORCE VIEW &OWNER..TR_v_avisos_caducidades (f_creacion,
                                                      f_modifica,
                                                      creado_api,
                                                      modificado_api,
                                                      x_avca,
                                                      caex_x_caex,
                                                      usua_c_usu_cre,
                                                      usua_c_usu_avi,
                                                      f_creado,
                                                      l_realizado,
                                                      f_aviso,
                                                      tran_x_tran
                                                     )
AS
   SELECT ac.f_creacion, ac.f_modifica, ac.creado_api, ac.modificado_api,
          ac.x_avca, ac.caex_x_caex, ac.usua_c_usu_cre, ac.usua_c_usu_avi,
          ac.f_creado, ac.l_realizado, ac.f_aviso, ac.tran_x_tran
     FROM &OWNER..TR_avisos_caducidades ac, &OWNER..TR_v_caducidades_exps ce
    WHERE ac.caex_x_caex = ce.x_caex;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUCATE
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_CONSTANTES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUEMPL
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_EMPLEADOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUGNER
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_ERRORES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUMDLO
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_MODULOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUMOIN
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_MOD_INVOCAR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUMUNI
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_MUNICIPIOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUPAIS
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_PAISES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUPROV
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_PROVINCIAS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUPUOR
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_PTOS_UNI_ORG
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUPUTR
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_PUESTO_TRAB
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUSTMA
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_SISTEMAS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUTIID
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_TIPOS_IDENTIFICADOR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUTIOR
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_TIPOS_ORGANISMO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUTIVA
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_TIPOS_VIA
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUTORZ
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_TIPOS_ORGANIZACION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_PIUUORG
 BEFORE INSERT OR UPDATE
 ON &OWNER..GN_UNI_ORG
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..GN_&OWNER..TR_piuusua
BEFORE INSERT OR UPDATE  ON &OWNER..GN_USUARIOS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;  
      :NEW.F_CLAVE     := V_FECHA; 
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA CLAVE */
    IF UPDATING ('T_CLAVE') THEN
      /* SE ASIGNAN FECHA A LAS COLUMNAS DE FECHA CLAVE */
      :NEW.F_CLAVE     := V_FECHA;    
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_NUM
BEFORE INSERT
ON &OWNER..TR_NUMERADORES
FOR EACH ROW
DECLARE
   CURSOR C_SEQ IS
      SELECT &OWNER..SEQ_NUM.NEXTVAL
        FROM SYS.DUAL;

   V_&OWNER..SEQ_NUM &OWNER..TR_NUMERADORES.X_NUM%TYPE;        
BEGIN

IF :NEW.X_NUM IS NULL THEN
   OPEN C_SEQ;
   FETCH C_SEQ INTO V_&OWNER..SEQ_NUM;
   CLOSE C_SEQ;

   :NEW.X_NUM := V_&OWNER..SEQ_NUM;

END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_NUM_AUDITORIA
BEFORE INSERT OR UPDATE
ON &OWNER..TR_NUMERADORES
FOR EACH ROW
DECLARE
   V_USUARIO VARCHAR2(20);
   V_FECHA   DATE;

   CURSOR C IS
      SELECT USER, SYSDATE
        FROM SYS.DUAL;
BEGIN
   OPEN C;
   FETCH C INTO V_USUARIO, V_FECHA;
   CLOSE C;

   IF INSERTING THEN
      :NEW.CREADO := V_USUARIO;
      :NEW.F_CREACION := V_FECHA;
      :NEW.MODIFICADO := V_USUARIO;
      :NEW.F_MODIFICA := V_FECHA; 
   END IF;

   IF UPDATING THEN
      :NEW.MODIFICADO := V_USUARIO;
      :NEW.F_MODIFICA := V_FECHA;
   END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRACCADM
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_ACCESOS_ADM  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRDAPA
BEFORE INSERT OR UPDATE
ON &OWNER..TR_DATOS_TIPO_PAGO REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
V_USUARIO VARCHAR2(20);
 V_FECHA DATE;
CURSOR C IS
 SELECT USER,
 SYSDATE
  FROM SYS.DUAL;
BEGIN
 OPEN C;
 FETCH C
 INTO V_USUARIO,
    V_FECHA;
 CLOSE C;
IF INSERTING THEN
  :NEW.CREADO            := V_USUARIO;
  :NEW.F_CREACION    := V_FECHA;
 :NEW.MODIFICADO    := V_USUARIO;
  :NEW.F_MODIFICA     := V_FECHA;
END IF;
 IF UPDATING THEN
 :NEW.MODIFICADO    := V_USUARIO;
 :NEW.F_MODIFICA     := V_FECHA;
END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUAMLE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_AMBITOS_LEY
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;

CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUMETADATO 
BEFORE INSERT OR UPDATE
ON &OWNER..TR_METADATOS REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/

SHOW ERRORS;

CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUAVCA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_AVISOS_CADUCIDADES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUBLOQ
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_BLOQUES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUBLPE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_BLOQUES_PERMITIDOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUBLXP
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_BLOQPEREVOL_X_PERFILES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUBXTE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCADU
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CADUCIDADES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCAEV
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CAMBIOS_EVOLEXPS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCAEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CADUCIDADES_EXPS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCALE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CALENDAR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* SE IMPLEMENTAN LOS CAMPOS REFERIDOS A LA AUDITORiA */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCERT
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONSULTAS_CERT
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* SE IMPLEMENTAN LOS CAMPOS REFERIDOS A LA AUDITORiA */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCNTE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONSTANTES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCOAC
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONDICIONES_ACCIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCOM
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_COMUNICACIONES  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCOMP
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_COMPONENTES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCONS_PLANMULT
BEFORE INSERT OR UPDATE
ON &OWNER..TR_CONS_PLANMULT REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCOXB
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCOXD
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONDACC_X_DOCPERTIPEVOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUCOXT
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONDACC_X_TRANSICIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDACO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DATOS_CONTACTO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDATC
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DATOS_COMPONENTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDDPG
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DEFPROCS_GR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDFKBXTE
 BEFORE INSERT OR UPDATE OR DELETE
 ON &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
    CURSOR BLPE_PADRE IS
	  SELECT COUNT(X_BLPE)
		FROM &OWNER..TR_BLOQUES_PERMITIDOS
	   WHERE X_BLPE = :NEW.BLPE_X_BLPE
	     AND FASE_X_FASE = :NEW.BLPE_X_FASE
		 AND BLOQ_X_BLOQ_FIN = :NEW.BLPE_X_BLOQ_FIN
		 AND NVL(BLOQ_X_BLOQ_INI,-1) = NVL(:NEW.BLPE_X_BLOQ_INI,-1);

    CURSOR PERF_HIJOS IS
	  SELECT COUNT(BXTE_X_BLPE)
		FROM &OWNER..TR_BLOQPEREVOL_X_PERFILES
	   WHERE BXTE_X_TIEV = :OLD.TIEV_X_TIEV
	     AND BXTE_X_BLPE = :OLD.BLPE_X_BLPE
	     AND BXTE_X_FASE = :OLD.BLPE_X_FASE
		 AND BXTE_X_BLOQ_FIN = :OLD.BLPE_X_BLOQ_FIN
		 AND NVL(BXTE_X_BLOQ_INI,-1) = NVL(:OLD.BLPE_X_BLOQ_INI,-1);

    CURSOR COND_HIJOS IS
	  SELECT COUNT(BXTE_X_BLPE)
		FROM &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
	   WHERE BXTE_X_TIEV = :OLD.TIEV_X_TIEV
	     AND BXTE_X_BLPE = :OLD.BLPE_X_BLPE
	     AND BXTE_X_FASE = :OLD.BLPE_X_FASE
		 AND BXTE_X_BLOQ_FIN = :OLD.BLPE_X_BLOQ_FIN
		 AND NVL(BXTE_X_BLOQ_INI,-1) = NVL(:OLD.BLPE_X_BLOQ_INI,-1);

    V_CONTADOR NUMBER(10) := 0;
BEGIN

/*COMPROBACION DEL PADRE*/
	IF (INSERTING OR
	   (UPDATING AND
	     ((:OLD.BLPE_X_BLPE != :NEW.BLPE_X_BLPE)OR
		  (:OLD.BLPE_X_FASE != :NEW.BLPE_X_FASE)OR
		  (:OLD.BLPE_X_BLOQ_FIN != :NEW.BLPE_X_BLOQ_FIN)OR
		  (:OLD.BLPE_X_BLOQ_INI != :NEW.BLPE_X_BLOQ_INI)OR
		  (NVL(:OLD.BLPE_X_BLOQ_INI,-1) != NVL(:NEW.BLPE_X_BLOQ_INI,-1)))))THEN
	    OPEN BLPE_PADRE;
	      FETCH BLPE_PADRE INTO V_CONTADOR;
	    CLOSE BLPE_PADRE;

		IF (V_CONTADOR = 0) THEN
		   RAISE_APPLICATION_ERROR(-20160, 'restriccion de integridad (BXTE_BLPE_FK) violada - clave padre no encontrada');
		END IF;

	    V_CONTADOR := 0;
	END IF;

	/*COMPROBACION DE HIJOS*/
	IF (DELETING OR
	   (UPDATING AND
	     ((:OLD.BLPE_X_BLPE!=:NEW.BLPE_X_BLPE)OR
		  (:OLD.BLPE_X_FASE!=:NEW.BLPE_X_FASE)OR
		  (:OLD.BLPE_X_BLOQ_FIN!=:NEW.BLPE_X_BLOQ_FIN)OR
		  (:OLD.BLPE_X_BLOQ_INI!=:NEW.BLPE_X_BLOQ_INI)OR
		  (NVL(:OLD.BLPE_X_BLOQ_INI,-1) != NVL(:NEW.BLPE_X_BLOQ_INI,-1)))))THEN
	    OPEN PERF_HIJOS;
	      FETCH PERF_HIJOS INTO V_CONTADOR;
	    CLOSE PERF_HIJOS;

		IF (V_CONTADOR > 0) THEN
		   RAISE_APPLICATION_ERROR(-20160, 'restriccion de integridad (BLXP_BXTE_FK) violada - registro secundario encontrado');
		END IF;

		V_CONTADOR := 0;

	    OPEN COND_HIJOS;
	      FETCH COND_HIJOS INTO V_CONTADOR;
	    CLOSE COND_HIJOS;

		IF (V_CONTADOR > 0) THEN
		   RAISE_APPLICATION_ERROR(-20160, 'restriccion de integridad (COXB_BXTE_FK) violada - registro secundario encontrado');
		END IF;
	END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDODE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DOCUMENTOS_DELEGADOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDOEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DOCUMENTOS_EXPEDIENTES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDOEXB
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DOC_EXPE_BORRADOS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDOPE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DOCUMENTOS_PERMITIDOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDOXP
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DOCPEREVOL_X_PERFILES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUDXTE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_DOCPER_X_TIPOS_EVOL
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUERRO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_ERRORES  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRpiuesla
   BEFORE INSERT OR UPDATE
   ON &OWNER..TR_estelab_eni
   REFERENCING OLD AS OLD NEW AS NEW
   FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
   v_usuario   VARCHAR2 (20);
   v_fecha     DATE;

   CURSOR c
   IS
      SELECT USER, SYSDATE
        FROM SYS.DUAL;
BEGIN
   /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
   OPEN c;

   /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
   FETCH c
    INTO v_usuario, v_fecha;

   /* SE CIERRA EL CURSOR */
   CLOSE c;

   /* SI ESTA INSERTANDO LA FILA */
   IF INSERTING
   THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.creado := v_usuario;
      :NEW.f_creacion := v_fecha;
      :NEW.modificado := v_usuario;
      :NEW.f_modifica := v_fecha;
   END IF;

   /* SI ESTA ACTUALIZANDO LA FILA */
   IF UPDATING
   THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.modificado := v_usuario;
      :NEW.f_modifica := v_fecha;
   END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUEXEF
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_EXPEDIENTES_EN_FASE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUEXPE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_EXPEDIENTES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUEXPEB
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_EXPEDIENTES_BORRADOS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUEXTG
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_EXTREMOSTRAN_GR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFASE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_FASES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFIDE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_FIRMANTES_DEFINIDOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFIDO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_FIRMAS_DOCEXP
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFIRM
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_FIRMAS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFITI
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_FIRMAS_TIPDOCS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFKBLXP
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_BLOQPEREVOL_X_PERFILES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
    CURSOR BXTE_PADRE IS
	  SELECT COUNT(BLPE_X_BLPE)
		FROM &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
	   WHERE TIEV_X_TIEV = :NEW.BXTE_X_TIEV
	     AND BLPE_X_BLPE = :NEW.BXTE_X_BLPE
	     AND BLPE_X_FASE = :NEW.BXTE_X_FASE
		 AND BLPE_X_BLOQ_FIN = :NEW.BXTE_X_BLOQ_FIN
		 AND NVL(BLPE_X_BLOQ_INI,-1) = NVL(:NEW.BXTE_X_BLOQ_INI,-1);

    V_CONTADOR NUMBER(10) := 0;
BEGIN
	IF (INSERTING OR
	   (UPDATING AND
	     ((:OLD.BXTE_X_BLPE != :NEW.BXTE_X_BLPE)OR
		  (:OLD.BXTE_X_FASE != :NEW.BXTE_X_FASE)OR
		  (:OLD.BXTE_X_BLOQ_FIN != :NEW.BXTE_X_BLOQ_FIN)OR
		  (:OLD.BXTE_X_BLOQ_INI != :NEW.BXTE_X_BLOQ_INI)OR
		  (NVL(:OLD.BXTE_X_BLOQ_INI,-1) != NVL(:NEW.BXTE_X_BLOQ_INI,-1)))))THEN
	    OPEN BXTE_PADRE;
	      FETCH BXTE_PADRE INTO V_CONTADOR;
	    CLOSE BXTE_PADRE;

		IF (V_CONTADOR = 0) THEN
		   RAISE_APPLICATION_ERROR(-20160, 'restriccion de integridad (BLXP_BXTE_FK) violada - clave padre no encontrada');
		END IF;
	END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUFKCOXB
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
    CURSOR BXTE_PADRE IS
	  SELECT COUNT(BLPE_X_BLPE)
		FROM &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
	   WHERE TIEV_X_TIEV = :NEW.BXTE_X_TIEV
	     AND BLPE_X_BLPE = :NEW.BXTE_X_BLPE
	     AND BLPE_X_FASE = :NEW.BXTE_X_FASE
		 AND BLPE_X_BLOQ_FIN = :NEW.BXTE_X_BLOQ_FIN
		 AND NVL(BLPE_X_BLOQ_INI,-1) = NVL(:NEW.BXTE_X_BLOQ_INI,-1);

    V_CONTADOR NUMBER(10) := 0;
BEGIN
	IF (INSERTING OR
	   (UPDATING AND
	     ((:OLD.BXTE_X_BLPE != :NEW.BXTE_X_BLPE)OR
		  (:OLD.BXTE_X_FASE != :NEW.BXTE_X_FASE)OR
		  (:OLD.BXTE_X_BLOQ_FIN != :NEW.BXTE_X_BLOQ_FIN)OR
		  (:OLD.BXTE_X_BLOQ_INI != :NEW.BXTE_X_BLOQ_INI)OR
		  (NVL(:OLD.BXTE_X_BLOQ_INI,-1) != NVL(:NEW.BXTE_X_BLOQ_INI,-1)))))THEN
	    OPEN BXTE_PADRE;
	      FETCH BXTE_PADRE INTO V_CONTADOR;
	    CLOSE BXTE_PADRE;

		IF (V_CONTADOR = 0) THEN
		   RAISE_APPLICATION_ERROR(-20160, 'restriccion de integridad (COXB_BXTE_FK) violada - clave padre no encontrada');
		END IF;
	END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRpiufoen
   BEFORE INSERT OR UPDATE
   ON &OWNER..TR_formatodoc_eni
   REFERENCING OLD AS OLD NEW AS NEW
   FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
   v_usuario   VARCHAR2 (20);
   v_fecha     DATE;

   CURSOR c
   IS
      SELECT USER, SYSDATE
        FROM SYS.DUAL;
BEGIN
   /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
   OPEN c;

   /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
   FETCH c
    INTO v_usuario, v_fecha;

   /* SE CIERRA EL CURSOR */
   CLOSE c;

   /* SI ESTA INSERTANDO LA FILA */
   IF INSERTING
   THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.creado := v_usuario;
      :NEW.f_creacion := v_fecha;
      :NEW.modificado := v_usuario;
      :NEW.f_modifica := v_fecha;
   END IF;

   /* SI ESTA ACTUALIZANDO LA FILA */
   IF UPDATING
   THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.modificado := v_usuario;
      :NEW.f_modifica := v_fecha;
   END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUIMAG
BEFORE INSERT OR UPDATE
ON &OWNER..TR_IMAGENES REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUINDO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_INTERESADOS_DOCUMENTO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUINEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_INTERESADOS_EXPEDIENTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUINFI
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_INDICACIONES_FICHA
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUINTE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_INTERESADOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIULICA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_LIMITES_CADUCIDADES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIULIRE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_LIMITES_RELACION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUMETA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_METAFASES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUMOCA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_MODIFICACIONES_CADUCIDADES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUNOEN
BEFORE INSERT OR UPDATE
ON &OWNER..TR_NOTIFICACIONES_ENVIO REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUNOIN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_NOTIFICACIONES_INTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUNOPR
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_NORMATIVAS_PROCEDIMIENTO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUNORM
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_NORMATIVAS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUNOTG
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_NODOSTRAN_GR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPABL
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PARAMETROS_BLOQUES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPADO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PARRAFOS_DOCEXPS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPARA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PARAMETROS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPATA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PAGOS_TASAS  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPATI
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PARRAFOS_TIPDOCS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPAVA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PARAMETROS_VARIABLES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPEUS
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PERFILES_USUARIOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPLAN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PLANTILLAS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPLANOFF
BEFORE INSERT OR UPDATE
ON &OWNER..TR_PLANTILLAS_OFFICE REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPLPR
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PLANTILLAS_PROCEDIMIENTO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUPMDO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_PARAMETROS_DOCUMENTOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIURAIN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_RAZONES_INTERES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIURAIPR
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_RAZONINT_PROCEDIMIENTO  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUREEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_RELACIONES_EXPEDIENTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUREG
BEFORE INSERT OR UPDATE
ON &OWNER..TR_REGISTROS REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUREGDEX
BEFORE INSERT OR UPDATE
ON &OWNER..TR_REGISTROS_DOCEXP REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUREIN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_RELACIONES_INTERESADO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIURELA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_RELACIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUREM
BEFORE INSERT OR UPDATE
ON &OWNER..TR_NOTIFICACIONES_REMESAS REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRpiuremi
   BEFORE INSERT OR UPDATE
   ON &OWNER..TR_remisiones
   REFERENCING OLD AS OLD NEW AS NEW
   FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditor?a */
   v_usuario   VARCHAR2 (20);
   v_fecha     DATE;

   CURSOR c
   IS
      SELECT USER, SYSDATE
        FROM SYS.DUAL;
BEGIN
   /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
   OPEN c;

   /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
   FETCH c
    INTO v_usuario, v_fecha;

   /* SE CIERRA EL CURSOR */
   CLOSE c;

   /* SI ESTA INSERTANDO LA FILA */
   IF INSERTING
   THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.creado := v_usuario;
      :NEW.f_creacion := v_fecha;
      :NEW.modificado := v_usuario;
      :NEW.f_modifica := v_fecha;
   END IF;

   /* SI ESTA ACTUALIZANDO LA FILA */
   IF UPDATING
   THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.modificado := v_usuario;
      :NEW.f_modifica := v_fecha;
   END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUREOP
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_REGISTRO_OPERACIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* SE IMPLEMENTAN LOS CAMPOS REFERIDOS A LA AUDITORiA */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIURIXD
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_RAZINT_X_DOCPEREVOL  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUSIM
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_SIM
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTAEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TAREAS_EXPEDIENTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTCON
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_CONTACTO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTCPR
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPCER_X_TIPOS_EVOL  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTDEN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPODOC_ENI  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;
    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;
  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;
    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;
    /* SE CIERRA EL CURSOR */
    CLOSE C;
    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTEDI
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TEXTOS_DISPOSICIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIAC
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_ACTOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTICO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_COMPONENTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIDO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_DOCUMENTOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIEV
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_EVOLUCIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_EXPEDIENTES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIIN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_INDICACION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTINO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_NORMATIVA
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIPA
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_PARRAFOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIPAGO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_PAGO  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIPU
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_PUBLICACION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTIRE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_RELACIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTPCR
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TIPOS_CERTIF  REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTRAG
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TRANSICIONES_GR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTRAN
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TRANSICIONES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTRXP
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TRANSEVOL_X_PERFILES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUTXTE
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUUOEX
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_ORGANISMOS_EXPEDIENTE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* SE IMPLEMENTAN LOS CAMPOS REFERIDOS A LA AUDITORiA */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUUOPR
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_ORGANISMOS_PROCEDIMIENTO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL BLOCK
DECLARE
/* SE IMPLEMENTAN LOS CAMPOS REFERIDOS A LA AUDITORiA */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUUSAS
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_USUARIOS_ASIGNADOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUVADO
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_VARIABLES_DOCEXP
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUVARI
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_VARIABLES
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUVATI
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_VARIABLES_TIPDOC
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUVEFL
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_VERSIONES_FLUJOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIUXPU
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_USUARIOS_X_PERFILES_USUARIO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPIU_METG
 BEFORE INSERT OR UPDATE
 ON &OWNER..TR_METAFASES_GR
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
-- PL/SQL Block
DECLARE
/* Se implementan los campos referidos a la auditoria */
    V_USUARIO VARCHAR2(20);
    V_FECHA   DATE;

    CURSOR C IS
      SELECT USER,
             SYSDATE
        FROM SYS.DUAL;

  BEGIN
    /* SE ABRE EL CURSOR SOBRE EL SISTEMA */
    OPEN C;

    /* SE RECUPERAN LOS DATOS DE USUARIO Y FECHA */
    FETCH C
     INTO V_USUARIO,
          V_FECHA;

    /* SE CIERRA EL CURSOR */
    CLOSE C;

    /* SI ESTA INSERTANDO LA FILA */
    IF INSERTING THEN
      /* SE ASIGNAN VALORES A TODAS LAS COLUMNAS DE AUDITORIA */
      :NEW.CREADO            := V_USUARIO;
      :NEW.F_CREACION    := V_FECHA;
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;

    /* SI ESTA ACTUALIZANDO LA FILA */
    IF UPDATING THEN
      /* SE ASIGNAN VALORES A LAS COLUMNAS DE AUDITORIA */
      :NEW.MODIFICADO    := V_USUARIO;
      :NEW.F_MODIFICA     := V_FECHA;
    END IF;
END;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER &OWNER..TR_TRPUDFKBLPE
 BEFORE UPDATE OR DELETE
 ON &OWNER..TR_BLOQUES_PERMITIDOS
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
DECLARE
    CURSOR HIJOS IS
      SELECT COUNT(BLPE_X_BLPE)
        FROM &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS
	   WHERE BLPE_X_BLPE = :OLD.X_BLPE
	     AND BLPE_X_FASE = :OLD.FASE_X_FASE
		 AND BLPE_X_BLOQ_FIN = :OLD.BLOQ_X_BLOQ_FIN
		 AND NVL(BLPE_X_BLOQ_INI,-1) = NVL(:OLD.BLOQ_X_BLOQ_INI,-1);

    V_CONTADOR NUMBER(10) := 0;
BEGIN
	IF(DELETING OR
	  (UPDATING AND
	     ((:OLD.X_BLPE != :NEW.X_BLPE)OR
		  (:OLD.FASE_X_FASE != :NEW.FASE_X_FASE)OR
		  (:OLD.BLOQ_X_BLOQ_FIN != :NEW.BLOQ_X_BLOQ_FIN)OR
		  (:OLD.BLOQ_X_BLOQ_INI != :NEW.BLOQ_X_BLOQ_INI)OR
		  (NVL(:OLD.BLOQ_X_BLOQ_INI,-1) != NVL(:NEW.BLOQ_X_BLOQ_INI,-1)))))THEN
	  OPEN HIJOS;
      FETCH HIJOS  INTO V_CONTADOR;
      CLOSE HIJOS;
	  IF (V_CONTADOR > 0) THEN
	     RAISE_APPLICATION_ERROR(-20160, 'restriccion de integridad (BXTE_BLPE_FK) violada - registro secundario encontrado');
	  END IF;
	END IF;
END;
/
SHOW ERRORS;


ALTER TABLE &OWNER..GN_CONSTANTES ADD (
  CONSTRAINT CATE_PK
 PRIMARY KEY
 (C_CONSTANTE));

ALTER TABLE &OWNER..GN_EMPLEADOS ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_004
 CHECK (V_TIPO IN ('F', 'L')),
  CONSTRAINT EMPL_1_CK
 CHECK (( (F_NOMBRAMIENTO <= F_CESE) OR   F_CESE IS NULL )),
  CONSTRAINT EMPL_PK
 PRIMARY KEY
 (USUA_C_USUARIO, PUOR_X_UORG, PUOR_C_PUESTO_TRAB));

ALTER TABLE &OWNER..GN_ERRORES ADD (
  CONSTRAINT AVCON_1126797728_L_ALE_000
 CHECK (L_ALERTA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_SUP_000
 CHECK (L_SUPWRN IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_TIP_009
 CHECK (V_TIPO IN ('W', 'D', 'E', 'I')),
  CONSTRAINT GNER_PK
 PRIMARY KEY
 (C_ORIERR, C_ERROR));

ALTER TABLE &OWNER..GN_MOD_INVOCAR ADD (
  CONSTRAINT AVCON_1126797728_L_IR__000
 CHECK (L_IR_A IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_MAS_000
 CHECK (L_MAS_DATOS IN ('S', 'N')),
  CONSTRAINT MOIN_PK
 PRIMARY KEY
 (MDLO_C_MODULO, MDLO_C_MODULO_INV));

ALTER TABLE &OWNER..TR_REGISTROS_DOCEXP ADD (
  CONSTRAINT &OWNER..TR_REGISTROS_DOCEXP_PK
 PRIMARY KEY
 (DOEX_X_DOEX, REG_C_REGISTRO, REG_T_TIPO_REG));

ALTER TABLE &OWNER..TR_RELACIONES ADD (
  CONSTRAINT RELA_1_CK
 CHECK (((FASE_X_FASE_A IS NOT NULL)
OR (FASE_X_FASE_B IS NOT NULL)
OR (TRAN_X_TRAN IS NOT NULL)
OR (TIDO_X_TIDO IS NOT NULL) OR (TIEV_X_TIEV IS NOT NULL))),
  CONSTRAINT RELA_PK
 PRIMARY KEY
 (X_RELA));

ALTER TABLE &OWNER..TR_RELACIONES_EXPEDIENTE ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_010
 CHECK (V_TIPO_RELACION IN ('M', 'D', 'I')),
  CONSTRAINT REEX_1_CK
 CHECK (((EXPE_X_EXPE IS NOT NULL AND
EXPE_X_EXPE_INT IS NOT NULL AND
COMP_X_COMP IS NULL AND
EXPE_X_EXPE_EXT IS NULL) OR
(EXPE_X_EXPE IS NOT NULL AND
EXPE_X_EXPE_INT IS NULL AND
COMP_X_COMP IS NOT NULL AND
EXPE_X_EXPE_EXT IS NOT NULL))),
  CONSTRAINT REEX_PK
 PRIMARY KEY
 (X_REEX));

ALTER TABLE &OWNER..TR_RELACIONES_INTERESADO ADD (
  CONSTRAINT REIN_1_CK
 CHECK ((((F_INI_VIG IS NOT NULL AND F_FIN_VIG IS NOT NULL AND F_INI_VIG <= F_FIN_VIG) OR F_FIN_VIG IS NULL))),
  CHECK (L_REPRESENTA IN ('S','N')),
  CHECK (L_PENDIENTE IN ('S','N')),
  CONSTRAINT REIN_PK
 PRIMARY KEY
 (X_REIN));

ALTER TABLE &OWNER..TR_REMISIONES ADD (
  CONSTRAINT &OWNER..TR_REMISIONES
 PRIMARY KEY
 (X_REMI));

ALTER TABLE &OWNER..TR_SIM ADD (
  CONSTRAINT AVCON_1126797728_L_LEI_000
 CHECK (L_LEIDO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_PRI_000
 CHECK (V_PRIORIDAD IN ('B', 'M', 'A')),
  CONSTRAINT SIM_PK
 PRIMARY KEY
 (X_SIM));

ALTER TABLE &OWNER..TR_TAREAS_EXPEDIENTE ADD (
  CONSTRAINT AVCON_1126797728_L_INF_001
 CHECK (L_INFORMADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_EST_002
 CHECK (V_ESTADO IN ('I', 'F', 'D')),
  CONSTRAINT TAEX_FFINALIZACION_1_CK_1
 CHECK (((F_COMIENZO <= F_FINALIZACION) OR F_FINALIZACION IS NULL)),
  CONSTRAINT TAEX_FLIMITE_2_CK_1_1
 CHECK (((F_COMIENZO <= F_LIMITE) OR F_LIMITE IS NULL)),
  CONSTRAINT TAEX_PK
 PRIMARY KEY
 (X_TAEX));

ALTER TABLE &OWNER..TR_TEXTOS_DISPOSICIONES ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_003
 CHECK (V_TIPO IN ('D', 'T', 'O')),
  CONSTRAINT TEDI_PK
 PRIMARY KEY
 (X_TEDI));

ALTER TABLE &OWNER..TR_TIPCER_X_TIPOS_EVOL ADD (
  CONSTRAINT TCPR_PK
 PRIMARY KEY
 (TIEV_X_TIEV, TPCR_X_TPCR));

ALTER TABLE &OWNER..TR_TIPODOC_ENI ADD (
  CONSTRAINT AVCON_1126797728_V_ORI_000
 CHECK (V_ORIGEN IN ('0', '1')),
  CONSTRAINT &OWNER..TR_TIPODOC_ENI_PK
 PRIMARY KEY
 (X_TDEN));

ALTER TABLE &OWNER..TR_TIPOS_ACTOS ADD (
  CONSTRAINT TIAC_PK
 PRIMARY KEY
 (X_TIAC));

ALTER TABLE &OWNER..TR_FIRMAS_TIPDOCS ADD (
  CONSTRAINT AVCON_1126797728_L_EDI_003
 CHECK (L_EDITABLE IN ('S', 'N')),
  CONSTRAINT FITI_PK
 PRIMARY KEY
 (TIDO_X_TIDO, FIDE_X_FIDE));

ALTER TABLE &OWNER..TR_FORMATODOC_ENI ADD (
  CONSTRAINT &OWNER..TR_PK_FORMATODOC_ENI
 PRIMARY KEY
 (X_FOEN));

ALTER TABLE &OWNER..TR_INDICACIONES_FICHA ADD (
  CONSTRAINT INFI_PK
 PRIMARY KEY
 (X_INFI));

ALTER TABLE &OWNER..TR_INTERESADOS ADD (
  CONSTRAINT AVCON_1126797728_V_SEX_000
 CHECK (V_SEXO IN ('F', 'M', '-')),
  CONSTRAINT INTE_PK
 PRIMARY KEY
 (X_INTE));

ALTER TABLE &OWNER..TR_INTERESADOS_DOCUMENTO ADD (
  CHECK (L_CONSENTIMIENTO IN ('S','N')),
  CONSTRAINT INDO_PK
 PRIMARY KEY
 (DOEX_X_DOEX, INEX_X_EXPE, INEX_X_INTE, INEX_X_RAIN, RAIN_X_RAIN));

ALTER TABLE &OWNER..TR_INTERESADOS_EXPEDIENTE ADD (
  CONSTRAINT INEX_PK
 PRIMARY KEY
 (EXPE_X_EXPE, INTE_X_INTE, RAIN_X_RAIN));

ALTER TABLE &OWNER..TR_LIMITES_CADUCIDADES ADD (
  CONSTRAINT LICA_PK
 PRIMARY KEY
 (CADU_X_CADU, TRAN_X_TRAN));

ALTER TABLE &OWNER..TR_LIMITES_RELACION ADD (
  CONSTRAINT LIRE_1_CK
 CHECK ((((F_INI_VIG IS NOT NULL AND F_FIN_VIG IS NOT NULL AND F_INI_VIG <= F_FIN_VIG) OR F_FIN_VIG IS NULL))),
  CONSTRAINT LIRE_2_CK
 CHECK ( META_X_META IS NOT NULL OR FASE_X_FASE IS NOT NULL OR EXPE_X_EXPE IS NOT NULL),
  CONSTRAINT LIRE_PK
 PRIMARY KEY
 (X_LIRE));

ALTER TABLE &OWNER..TR_METAFASES ADD (
  CONSTRAINT AVCON_1126797728_L_INF_007
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT META_PK
 PRIMARY KEY
 (X_META));

ALTER TABLE &OWNER..TR_METAFASES_GR ADD (
  CONSTRAINT METG_PK
 PRIMARY KEY
 (X_METG));

ALTER TABLE &OWNER..TR_MODIFICACIONES_CADUCIDADES ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_013
 CHECK (V_TIPO IN ('A', 'R', 'S')),
  CONSTRAINT AVCON_1126797728_V_UNI_004
 CHECK (V_UNIDAD IN ('D', 'M', 'A')),
  CONSTRAINT MOCA_1_CK
 CHECK (((F_INICIO <= F_FINAL) OR F_FINAL IS NULL)),
  CONSTRAINT MOCA_PK
 PRIMARY KEY
 (X_MOCA));

ALTER TABLE &OWNER..TR_NODOSTRAN_GR ADD (
  CONSTRAINT NOTG_PK
 PRIMARY KEY
 (X_NOTG));

ALTER TABLE &OWNER..TR_NORMATIVAS ADD (
  CONSTRAINT NORM_PK
 PRIMARY KEY
 (X_NORM));

ALTER TABLE &OWNER..TR_NORMATIVAS_PROCEDIMIENTO ADD (
  CONSTRAINT NOPR_PK
 PRIMARY KEY
 (TIEV_X_TIEV, NORM_X_NORM));

ALTER TABLE &OWNER..TR_NOTIFICACIONES_ENVIO ADD (
  CONSTRAINT NOEN_PK
 PRIMARY KEY
 (X_NOEN));

ALTER TABLE &OWNER..TR_NOTIFICACIONES_INTE ADD (
  CONSTRAINT NOTINT_PK
 PRIMARY KEY
 (INDO_X_DOEX, INDO_X_EXPE, INDO_X_INTE, INDO_X_RAIN_INEX, INDO_X_RAIN, NOEN_X_NOEN));

ALTER TABLE &OWNER..TR_NOTIFICACIONES_REMESAS ADD (
  CONSTRAINT REM_PK
 PRIMARY KEY
 (X_REM));

ALTER TABLE &OWNER..TR_NUMERADORES ADD (
  CONSTRAINT NUMERADORES_PK
 PRIMARY KEY
 (X_NUM));

ALTER TABLE &OWNER..TR_ORGANISMOS_EXPEDIENTE ADD (
  CONSTRAINT UOEX_1_CK
 CHECK ((((F_INI_VIG IS NOT NULL AND F_FIN_VIG IS NOT NULL AND F_INI_VIG <= F_FIN_VIG) OR F_FIN_VIG IS NULL))),
  CONSTRAINT UOEX_PK
 PRIMARY KEY
 (X_UOEX));

ALTER TABLE &OWNER..TR_ORGANISMOS_PROCEDIMIENTO ADD (
  CONSTRAINT UOPR_1_CK
 CHECK ((((F_INI_VIG IS NOT NULL AND F_FIN_VIG IS NOT NULL AND F_INI_VIG <= F_FIN_VIG) OR F_FIN_VIG IS NULL))),
  CONSTRAINT UOPR_PK
 PRIMARY KEY
 (X_UOPR));

ALTER TABLE &OWNER..TR_PAGOS_TASAS ADD (
  CONSTRAINT &OWNER..TR_PATA_ED
 CHECK (T_ESTADO_DOCUMENTO IN ('ERROR','OK')),
  CONSTRAINT &OWNER..TR_PATA_EP
 CHECK (L_ESTADO_PAGO IN ('P','T','E')),
  CONSTRAINT &OWNER..TR_PAGOS_TASAS_PK
 PRIMARY KEY
 (X_PATA));

ALTER TABLE &OWNER..TR_PARAMETROS ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_002
 CHECK (V_TIPO IN ('N', 'C', 'F')),
  CONSTRAINT PARA_PK
 PRIMARY KEY
 (X_PARA));

ALTER TABLE &OWNER..TR_PARAMETROS_BLOQUES ADD (
  CONSTRAINT PABL_PK
 PRIMARY KEY
 (BLOQ_X_BLOQ, PARA_X_PARA));

ALTER TABLE &OWNER..TR_PARAMETROS_DOCUMENTOS ADD (
  CONSTRAINT PMDO_PK
 PRIMARY KEY
 (X_PMDO));

ALTER TABLE &OWNER..TR_PARAMETROS_VARIABLES ADD (
  CONSTRAINT PAVA_PK
 PRIMARY KEY
 (VARI_X_VARI, PARA_X_PARA));

ALTER TABLE &OWNER..TR_PARRAFOS_DOCEXPS ADD (
  CONSTRAINT AVCON_1126797728_L_EDI_000
 CHECK (L_EDITABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_ALI_000
 CHECK (V_ALINEACION IN ('I', 'C', 'D', 'J')),
  CONSTRAINT AVCON_1126797728_V_EST_000
 CHECK (V_ESTILO
IN ('NORMAL', 'NEGRIT', 'CURSIV', 'SUBRAY', 'NE-CU', 'NE-SU', 'CU-SU'
, 'NE-CU-SU')),
  CONSTRAINT AVCON_1126797728_V_EST_001
 CHECK (V_ESTILO_ETIQ
IN ('NORMAL', 'NEGRIT', 'CURSIV', 'SUBRAY', 'NE-CU', 'NE-SU', 'CU-SU'
, 'NE-CU-SU')),
  CONSTRAINT PADO_PK
 PRIMARY KEY
 (X_PADO));

ALTER TABLE &OWNER..TR_PARRAFOS_TIPDOCS ADD (
  CONSTRAINT AVCON_1126797728_L_EDI_002
 CHECK (L_EDITABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FUS_000
 CHECK (L_FUSIONAR_VAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_ALI_002
 CHECK (V_ALINEACION IN ('I', 'C', 'D', 'J')),
  CONSTRAINT AVCON_1126797728_V_EST_005
 CHECK (V_ESTILO
IN ('NORMAL', 'NEGRIT', 'CURSIV', 'SUBRAY', 'NE-CU', 'NE-SU', 'CU-SU'
, 'NE-CU-SU')),
  CONSTRAINT AVCON_1126797728_V_EST_006
 CHECK (V_ESTILO_ETIQ
IN ('NORMAL', 'NEGRIT', 'CURSIV', 'SUBRAY', 'NE-CU', 'NE-SU', 'CU-SU'
, 'NE-CU-SU')),
  CONSTRAINT PATI_PK
 PRIMARY KEY
 (X_PATI));

ALTER TABLE &OWNER..TR_PERFILES_USUARIOS ADD (
  CONSTRAINT PEUS_PK
 PRIMARY KEY
 (X_PEUS));

ALTER TABLE &OWNER..TR_PLANTILLAS ADD (
  CONSTRAINT PLAN_PK
 PRIMARY KEY
 (X_PLAN));

ALTER TABLE &OWNER..TR_PLANTILLAS_OFFICE ADD (
  CONSTRAINT &OWNER..TR_PLANTILLAS_OFFICE_PK
 PRIMARY KEY
 (COD_PLAN_OFFICE, TIDO_X_TIDO));

ALTER TABLE &OWNER..TR_PLANTILLAS_PROCEDIMIENTO ADD (
  CONSTRAINT PLPR_PK
 PRIMARY KEY
 (X_PLPR));

ALTER TABLE &OWNER..TR_RAZINT_X_DOCPEREVOL ADD (
  CONSTRAINT RIXD_PK
 PRIMARY KEY
 (RAIN_X_RAIN, TIEV_X_TIEV, DOPE_X_DOPE));

ALTER TABLE &OWNER..TR_RAZONES_INTERES ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_001
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT RAIN_PK
 PRIMARY KEY
 (X_RAIN));

ALTER TABLE &OWNER..TR_RAZONINT_PROCEDIMIENTO ADD (
  CONSTRAINT RAIPR_PK
 PRIMARY KEY
 (TIEV_X_TIEV, RAIN_X_RAIN));

ALTER TABLE &OWNER..TR_REGISTRO_OPERACIONES ADD (
  CONSTRAINT REOP_PK
 PRIMARY KEY
 (X_REOP));

ALTER TABLE &OWNER..TR_REGISTROS ADD (
  CONSTRAINT &OWNER..TR_REGISTROS_PK
 PRIMARY KEY
 (C_REGISTRO, T_TIPO_REG));

ALTER TABLE &OWNER..TR_DOCUMENTOS_PERMITIDOS ADD (
  CONSTRAINT AVCON_1126797728_L_INF_004
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_OBL_004
 CHECK (L_OBLIGATORIO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VAL_004
 CHECK (L_VALIDO IN ('S', 'N')),
  CONSTRAINT DOPE_PK
 PRIMARY KEY
 (X_DOPE));

ALTER TABLE &OWNER..TR_ERRORES ADD (
  CONSTRAINT ERRO_PK
 PRIMARY KEY
 (X_ERRO));

ALTER TABLE &OWNER..TR_ESTELAB_ENI ADD (
  CONSTRAINT &OWNER..TR_PK_ESTELAB_ENI
 PRIMARY KEY
 (X_ESLA));

ALTER TABLE &OWNER..TR_EXPEDIENTES ADD (
  CONSTRAINT AVCON_1126797728_L_INF_006
 CHECK (L_INFORMADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_ARC_001
 CHECK (V_ESTADO_ARCHIVA IN ('P', 'A', 'R')),
  CONSTRAINT EXPE_PK
 PRIMARY KEY
 (X_EXPE));

ALTER TABLE &OWNER..TR_EXPEDIENTES_BORRADOS ADD (
  CONSTRAINT AVCON_1126797728_L_INF_013
 CHECK (L_INFORMADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_REI_000
 CHECK (L_REINICIO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_ARC_002
 CHECK (V_ESTADO_ARCHIVA IN ('P', 'A', 'R')),
  CONSTRAINT EXPEB_PK
 PRIMARY KEY
 (X_EXPE_BOR));

ALTER TABLE &OWNER..TR_EXPEDIENTES_EN_FASE ADD (
  CONSTRAINT AVCON_1126797728_L_ABI_000
 CHECK (L_ABIERTA_EVENTO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_INF_002
 CHECK (L_INFORMADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_INF_003
 CHECK (L_INFORMADO_FIN IN ('S', 'N')),
  CONSTRAINT EXEF_FLIMITE_2_CK
 CHECK (((F_ENTRADA <= F_LIMITE) OR F_LIMITE IS NULL)),
  CONSTRAINT EXEF_FSALIDA_1_CK
 CHECK (((F_ENTRADA <= F_SALIDA) OR F_SALIDA IS NULL)),
  CONSTRAINT EXEF_PK
 PRIMARY KEY
 (X_EXEF));

ALTER TABLE &OWNER..TR_EXTREMOSTRAN_GR ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_006
 CHECK (V_TIPO IN ('FA', 'I', 'D', 'U', 'F', 'ES', 'EN')),
  CONSTRAINT EXTG_PK
 PRIMARY KEY
 (X_EXTG));

ALTER TABLE &OWNER..TR_FASES ADD (
  CONSTRAINT AVCON_1126797728_L_INF_009
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT FASE_PK
 PRIMARY KEY
 (X_FASE));

ALTER TABLE &OWNER..TR_FIRMANTES_DEFINIDOS ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_000
 CHECK (V_TIPO IN ('P', 'D', 'S')),
  CONSTRAINT FIDE_1_CK
 CHECK (((F_INI_VIG <= F_FIN_VIG) OR F_FIN_VIG IS NULL)),
  CONSTRAINT FIDE_PK
 PRIMARY KEY
 (X_FIDE));

ALTER TABLE &OWNER..TR_FIRMAS ADD (
  CONSTRAINT FIRM_PK
 PRIMARY KEY
 (X_FIRM));

ALTER TABLE &OWNER..TR_FIRMAS_DOCEXP ADD (
  CONSTRAINT AVCON_1126797728_L_EDI_004
 CHECK (L_EDITABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_FIDO_001
 CHECK (v_tf_eni IN ('TF01', 'TF02', 'TF03', 'TF04', 'TF05', 'TF06')),
  CONSTRAINT AVCON_1126797728_V_FIR_000
 CHECK (V_TIPO_FIRMA IN ('N', 'I', 'D', 'E')),
  CONSTRAINT FIDO_PK1
 PRIMARY KEY
 (X_FIDO));

ALTER TABLE &OWNER..GN_MODULOS ADD (
  CONSTRAINT AVCON_1126797728_L_CLA_000
 CHECK (L_CLAVE IN ('S', 'N')),
  CONSTRAINT MDLO_PK
 PRIMARY KEY
 (C_MODULO));

ALTER TABLE &OWNER..GN_MUNICIPIOS ADD (
  CONSTRAINT MUNI_PK
 PRIMARY KEY
 (C_MUNICIPIO, PROV_C_PROVINCIA));

ALTER TABLE &OWNER..GN_PAISES ADD (
  CONSTRAINT PAIS_PK
 PRIMARY KEY
 (C_PAIS));

ALTER TABLE &OWNER..GN_PROVINCIAS ADD (
  CONSTRAINT PROV_PK
 PRIMARY KEY
 (C_PROVINCIA));

ALTER TABLE &OWNER..GN_PTOS_UNI_ORG ADD (
  CONSTRAINT PUOR_PK
 PRIMARY KEY
 (UORG_X_UORG, PU&OWNER..TR_C_PUESTO_TRAB));

ALTER TABLE &OWNER..GN_PUESTO_TRAB ADD (
  CONSTRAINT PU&OWNER..TR_PK
 PRIMARY KEY
 (C_PUESTO_TRAB));

ALTER TABLE &OWNER..GN_SISTEMAS ADD (
  CONSTRAINT AVCON_1126797728_V_CON_000
 CHECK (V_CONEX_BUS IN ('S', 'N', 'O')),
  CONSTRAINT STMA_PK
 PRIMARY KEY
 (X_STMA));

ALTER TABLE &OWNER..GN_TIPOS_IDENTIFICADOR ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_010
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_TIP_015
 CHECK (V_TIPO_IDENT IN ('F', 'J')),
  CONSTRAINT TIID_PK
 PRIMARY KEY
 (C_ABREVIATURA));

ALTER TABLE &OWNER..GN_TIPOS_ORGANISMO ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_007
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TIOR_PK
 PRIMARY KEY
 (X_TIOR));

ALTER TABLE &OWNER..GN_TIPOS_ORGANIZACION ADD (
  CONSTRAINT AVCON_1126797728_L_VIG_003
 CHECK (L_VIGENTE IN ('S', 'N')),
  CONSTRAINT TORZ_PK
 PRIMARY KEY
 (C_TIPO_ORGZ));

ALTER TABLE &OWNER..GN_TIPOS_VIA ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_003
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TIVA_PK
 PRIMARY KEY
 (C_TIPO_VIA));

ALTER TABLE &OWNER..GN_UNI_ORG ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_007
 CHECK (V_TIPO IN ('DP', 'SC', 'CE', 'EE')),
  CONSTRAINT UORG_1_CK
 CHECK (((F_INI_VIG IS NOT NULL AND
F_FIN_VIG IS NOT NULL AND
F_INI_VIG <= F_FIN_VIG) OR
F_FIN_VIG IS NULL)),
  CONSTRAINT UORG_PK
 PRIMARY KEY
 (X_UORG));

ALTER TABLE &OWNER..GN_USUARIOS ADD (
  CONSTRAINT AVCON_1126797728_V_SEX_001
 CHECK (V_SEXO IN ('F', 'M', '-')),
  CONSTRAINT AVCON_1126797728_V_TIP_011
 CHECK (V_TIPO_IDENT IN ('D', 'P', 'N', 'C', 'O')),
  CONSTRAINT USUA_1_CK
 CHECK (( (F_ALTA <= F_BAJA) OR   F_BAJA IS NULL )),
  CONSTRAINT USUA_PK
 PRIMARY KEY
 (C_USUARIO));

ALTER TABLE &OWNER..TR_ACCESOS_ADM ADD (
  CONSTRAINT AVCON_1126797728_V_ACC_001
 CHECK (L_ACCESO IN ('S', 'N')),
  CONSTRAINT &OWNER..TR_ACCESOS_ADM_PK
 PRIMARY KEY
 (X_ACC));

ALTER TABLE &OWNER..TR_AMBITOS_LEY ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_000
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT AMLE_PK
 PRIMARY KEY
 (X_AMLE));

ALTER TABLE &OWNER..TR_AVISOS_CADUCIDADES ADD (
  CONSTRAINT AVCA_1_CK
 CHECK (((F_CREADO <= F_AVISO) OR F_AVISO IS NULL)),
  CONSTRAINT AVCON_1126797728_L_REA_000
 CHECK (L_REALIZADO IN ('S', 'N')),
  CONSTRAINT AVCA_PK
 PRIMARY KEY
 (X_AVCA));

ALTER TABLE &OWNER..TR_BLOQPEREVOL_X_PERFILES ADD (
  CONSTRAINT BLXP_PK
 PRIMARY KEY
 (PEUS_X_PEUS, BXTE_X_TIEV, BXTE_X_BLPE));

ALTER TABLE &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS ADD (
  CONSTRAINT AVCON_1126797728_V_UNI_000
 CHECK (V_UNIDAD IN ('D', 'M', 'A')),
  CONSTRAINT BXTE_PK
 PRIMARY KEY
 (TIEV_X_TIEV, BLPE_X_BLPE));

ALTER TABLE &OWNER..TR_BLOQUES ADD (
  CONSTRAINT AVCON_1126797728_L_INF_011
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_TIP_014
 CHECK (V_TIPO IN ('F', 'R', 'W', 'O', 'M', 'P')),
  CONSTRAINT BLOQ_PK
 PRIMARY KEY
 (X_BLOQ));

ALTER TABLE &OWNER..TR_BLOQUES_PERMITIDOS ADD (
  CONSTRAINT AVCON_1126797728_L_INF_000
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_OBL_000
 CHECK (L_OBLIGATORIO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VAL_000
 CHECK (L_VALIDO IN ('S', 'N')),
  CONSTRAINT BLPE_PK
 PRIMARY KEY
 (X_BLPE));

ALTER TABLE &OWNER..TR_CADUCIDADES ADD (
  CONSTRAINT AVCON_1126797728_L_VIG_000
 CHECK (L_VIGENTE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_TIP_005
 CHECK (V_TIPO IN ('P', 'O')),
  CONSTRAINT AVCON_1126797728_V_UNI_002
 CHECK (V_UNIDAD IN ('D', 'M', 'A')),
  CONSTRAINT CADU_PK
 PRIMARY KEY
 (X_CADU));

ALTER TABLE &OWNER..TR_CADUCIDADES_EXPS ADD (
  CONSTRAINT AVCON_1126797728_L_ACT_000
 CHECK (L_ACTIVA IN ('S', 'N')),
  CONSTRAINT CAEX_1_CK
 CHECK (((F_INICIO <= F_LIMITE) OR F_LIMITE IS NULL)),
  CONSTRAINT CAEX_PK
 PRIMARY KEY
 (X_CAEX));

ALTER TABLE &OWNER..TR_CALENDAR ADD (
  CONSTRAINT CALE_1_CK
 CHECK (((MUNI_C_PROVINCIA IS NULL AND MUNI_C_MUNICIPIO IS NULL)
OR (MUNI_C_PROVINCIA IS NOT NULL AND MUNI_C_MUNICIPIO IS NULL)
OR (MUNI_C_PROVINCIA IS NOT NULL AND MUNI_C_MUNICIPIO IS NOT NULL))),
  CONSTRAINT CALE_PK
 PRIMARY KEY
 (X_CALE));

ALTER TABLE &OWNER..TR_CAMBIOS_EVOLEXPS ADD (
  CONSTRAINT AVCON_1126797728_L_ACT_001
 CHECK (L_ACTIVO IN ('S', 'N')),
  CONSTRAINT CAEV_PK
 PRIMARY KEY
 (X_CAEV));

ALTER TABLE &OWNER..TR_COMPONENTES ADD (
  CONSTRAINT COMP_PK
 PRIMARY KEY
 (X_COMP));

ALTER TABLE &OWNER..TR_COMUNICACIONES ADD (
  CONSTRAINT AVCON_1126797728_L_LEI_001
 CHECK (L_LEIDO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_PRI_001
 CHECK (V_PRIORIDAD IN ('B', 'M', 'A')),
  CONSTRAINT &OWNER..TR_COMUNICACIONES_PK
 PRIMARY KEY
 (X_COM));

ALTER TABLE &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS ADD (
  CONSTRAINT AVCON_1126797728_L_OBL_001
 CHECK (L_OBLIGATORIA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VAL_001
 CHECK (L_VALIDA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_COM_000
 CHECK (V_COMPROBAR IN ('I', 'V')),
  CONSTRAINT AVCON_1126797728_V_MOS_000
 CHECK (V_MOSTRAR_MSJ IN ('O', 'N', 'A', 'I')),
  CONSTRAINT COXB_PK
 PRIMARY KEY
 (COAC_X_COAC, BXTE_X_TIEV, BXTE_X_BLPE));

ALTER TABLE &OWNER..TR_CONDACC_X_DOCPERTIPEVOS ADD (
  CONSTRAINT AVCON_1126797728_L_OBL_003
 CHECK (L_OBLIGATORIA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VAL_003
 CHECK (L_VALIDA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_COM_002
 CHECK (V_COMPROBAR IN ('G', 'I', 'T', 'V')),
  CONSTRAINT AVCON_1126797728_V_MOS_002
 CHECK (V_MOSTRAR_MSJ IN ('O', 'N', 'A', 'I')),
  CONSTRAINT COXD_PK
 PRIMARY KEY
 (COAC_X_COAC, DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO));

ALTER TABLE &OWNER..TR_CONDACC_X_TRANSICIONES ADD (
  CONSTRAINT AVCON_1126797728_L_OBL_002
 CHECK (L_OBLIGATORIA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VAL_002
 CHECK (L_VALIDA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_COM_001
 CHECK (V_COMPROBAR IN ('T', 'D', 'A', 'V')),
  CONSTRAINT AVCON_1126797728_V_MOS_001
 CHECK (V_MOSTRAR_MSJ IN ('O', 'N', 'A', 'I')),
  CONSTRAINT COXT_PK
 PRIMARY KEY
 (COAC_X_COAC, TXTE_X_TIEV, TXTE_X_TRAN));

ALTER TABLE &OWNER..TR_CONDICIONES_ACCIONES ADD (
  CONSTRAINT AVCON_1126797728_L_PAR_000
 CHECK (L_PARAM_REF_EXP IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_001
 CHECK (L_PARAM_REF_TRAN IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_002
 CHECK (L_PARAM_REF_DOCPER IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_003
 CHECK (L_PARAM_REF_EXPXFAS IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_004
 CHECK (L_PARAM_REF_TIPEVO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_005
 CHECK (L_PARAM_FECHA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_006
 CHECK (L_PARAM_USUARIO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_007
 CHECK (L_PARAM_REF_FASE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PAR_008
 CHECK (L_PARAM_REF_TIPDOC IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_COM_003
 CHECK (V_COMPLEJA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_IMP_001
 CHECK (V_IMPLEMENTACION IN ('F', 'J')),
  CONSTRAINT AVCON_1126797728_V_TIP_008
 CHECK (V_TIPO IN ('C', 'W', 'A')),
  CONSTRAINT COAC_PK
 PRIMARY KEY
 (X_COAC));

ALTER TABLE &OWNER..TR_CONS_PLANMULT ADD (
  CONSTRAINT &OWNER..TR_CONS_PLANMULT_PK
 PRIMARY KEY
 (X_COPLANMULT));

ALTER TABLE &OWNER..TR_CONSTANTES ADD (
  CONSTRAINT CNTE_PK
 PRIMARY KEY
 (C_CONSTANTE, STMA_X_STMA));

ALTER TABLE &OWNER..TR_CONSULTAS_CERT ADD (
  CONSTRAINT COCE_PK
 PRIMARY KEY
 (X_COCE));

ALTER TABLE &OWNER..TR_DATOS_COMPONENTE ADD (
  CONSTRAINT DATC_PK
 PRIMARY KEY
 (X_DATC));

ALTER TABLE &OWNER..TR_DATOS_CONTACTO ADD (
  CONSTRAINT DACO_1_CK
 CHECK ((MUNI_C_MUNICIPIO IS NOT NULL AND  MUNI_C_PROVINCIA IS NOT NULL) OR (T_CIUDAD IS NOT NULL AND T_REGION IS NOT NULL)),
  CONSTRAINT DACO_PK
 PRIMARY KEY
 (X_DACO));

ALTER TABLE &OWNER..TR_DATOS_TIPO_PAGO ADD (
  CONSTRAINT &OWNER..TR_DATOS_TIPOS_PAGO_PK
 PRIMARY KEY
 (X_DAPA));

ALTER TABLE &OWNER..TR_DEFPROCS_GR ADD (
  CONSTRAINT DDPG_PK
 PRIMARY KEY
 (X_DDPG));

ALTER TABLE &OWNER..TR_DOC_EXPE_BORRADOS ADD (
  CONSTRAINT AVCON_1126797728_L_COR_001
 CHECK (L_CORRECTO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FIR_002
 CHECK (L_FIRMA_DIGI IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_INF_014
 CHECK (L_INFORMADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PRE_001
 CHECK (L_PRESENTADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_REU_002
 CHECK (L_REUTILIZABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_EST_008
 CHECK (V_ESTADO IN ('R', 'E', 'F', 'D', 'T', 'V')),
  CONSTRAINT AVCON_1126797728_V_MOD_002
 CHECK (V_MODOGEN IN ('R', 'P', 'O')),
  CONSTRAINT DOEX_FFINALIZACION_2_CK
 CHECK (((F_ALTA <= F_FINALIZACION) OR F_FINALIZACION IS NULL)),
  CONSTRAINT DOEX_FLIMITE_3_CK_2
 CHECK (((F_ALTA <= F_LIMITE) OR F_LIMITE IS NULL)),
  CHECK (V_CLASE_DOC IN ('G','S','L')),
  CONSTRAINT DOEXB_PK
 PRIMARY KEY
 (X_DOEX_BOR));

ALTER TABLE &OWNER..TR_DOCPEREVOL_X_PERFILES ADD (
  CONSTRAINT AVCON_1126797728_V_PER_001
 CHECK (V_PERMISO IN ('G', 'F', 'I', 'T', 'E')),
  CONSTRAINT DOXP_PK
 PRIMARY KEY
 (PEUS_X_PEUS, DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO, V_PERMISO));

ALTER TABLE &OWNER..TR_DOCPER_X_TIPOS_EVOL ADD (
  CONSTRAINT AVCON_1126797728_V_UNI_003
 CHECK (V_UNIDAD IN ('D', 'M', 'A')),
  CONSTRAINT DXTE_PK
 PRIMARY KEY
 (TIEV_X_TIEV, DOPE_X_FASE, DOPE_X_TIDO));

ALTER TABLE &OWNER..TR_DOCUMENTOS_DELEGADOS ADD (
  CONSTRAINT DODE_1_CK
 CHECK (((F_INI_VIG <= F_FIN_VIG) OR F_FIN_VIG IS NULL)),
  CONSTRAINT DODE_PK
 PRIMARY KEY
 (X_DODE));

ALTER TABLE &OWNER..TR_DOCUMENTOS_EXPEDIENTES ADD (
  CONSTRAINT AVCON_1126797728_L_COR_000
 CHECK (L_CORRECTO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FIR_000
 CHECK (L_FIRMA_DIGI IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_INF_005
 CHECK (L_INFORMADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_PRE_000
 CHECK (L_PRESENTADO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_REU_000
 CHECK (L_REUTILIZABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_CLA_002
 CHECK (V_CLASE_DOC IN ('G','S','L','P')),
  CONSTRAINT AVCON_1126797728_V_EST_007
 CHECK (V_ESTADO IN ('R', 'E', 'F', 'D', 'T', 'V')),
  CONSTRAINT AVCON_1126797728_V_MOD_000
 CHECK (V_MODOGEN IN ('R', 'P', 'O')),
  CONSTRAINT DOEX_FFINALIZACION_1_CK
 CHECK (((F_ALTA <= F_FINALIZACION) OR F_FINALIZACION IS NULL)),
  CONSTRAINT DOEX_FLIMITE_2_CK_1
 CHECK (((F_ALTA <= F_LIMITE) OR F_LIMITE IS NULL)),
  CONSTRAINT DOEX_PK
 PRIMARY KEY
 (X_DOEX));

ALTER TABLE &OWNER..TR_TIPOS_CERTIF ADD (
  CONSTRAINT TPCR_PK
 PRIMARY KEY
 (X_TPCR));

ALTER TABLE &OWNER..TR_TIPOS_COMPONENTE ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_005
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TICO_PK
 PRIMARY KEY
 (X_TICO));

ALTER TABLE &OWNER..TR_TIPOS_CONTACTO ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_009
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TCON_PK
 PRIMARY KEY
 (X_TCON));

ALTER TABLE &OWNER..TR_TIPOS_DOCUMENTOS ADD (
  CONSTRAINT AVCON_1126797728_L_ARC_000
 CHECK (L_ARCHIVABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FEC_000
 CHECK (L_FECHA_FIRMA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FIR_001
 CHECK (L_FIRMA_DIGI IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FIR_003
 CHECK (L_FIRMA_DINAMICA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_FUS_001
 CHECK (L_FUSIONAR_VAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_INF_010
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_MUL_000
 CHECK (L_MULTIPLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_NOT_000
 CHECK (L_NOTIFICABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_OBS_008
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_REG_000
 CHECK (L_REGISTRABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_REU_001
 CHECK (L_REUTILIZABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VER_000
 CHECK (L_VERSIONABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_CLA_001
 CHECK (V_CLASE_DOC IN ('G','S','L','P')),
  CONSTRAINT AVCON_1126797728_V_ENT_000
 CHECK (V_ENT_SAL IN ('ES', 'E', 'S')),
  CONSTRAINT AVCON_1126797728_V_INC_000
 CHECK (V_INC_GEN IN ('G', 'I')),
  CONSTRAINT AVCON_1126797728_V_MOD_001
 CHECK (V_MODOGEN IN ('R', 'P', 'O')),
  CONSTRAINT AVCON_1126797728_V_TIP_012
 CHECK (V_TIPO_FIRMA IN ('C', 'P', '-')),
  CONSTRAINT TIDO_PK
 PRIMARY KEY
 (X_TIDO));

ALTER TABLE &OWNER..TR_TIPOS_EVOLUCIONES ADD (
  CONSTRAINT AVCON_1126797728_L_ADE_001
 CHECK (l_adaptadoeni IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_INF_008
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VIG_002
 CHECK (L_VIGENTE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_CAT_000
 CHECK (V_CATEGORIA IN ('F', 'S', 'P')),
  CONSTRAINT TIEV_PK
 PRIMARY KEY
 (X_TIEV));

ALTER TABLE &OWNER..TR_TIPOS_EXPEDIENTES ADD (
  CONSTRAINT AVCON_1126797728_L_VIG_001
 CHECK (L_VIGENTE IN ('S', 'N')),
  CONSTRAINT TIEX_PK
 PRIMARY KEY
 (X_TIEX));

ALTER TABLE &OWNER..TR_TIPOS_INDICACION ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_006
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TIIN_PK
 PRIMARY KEY
 (X_TIIN));

ALTER TABLE &OWNER..TR_TIPOS_NORMATIVA ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_004
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TINO_PK
 PRIMARY KEY
 (X_TINO));

ALTER TABLE &OWNER..TR_TIPOS_PAGO ADD (
  CONSTRAINT &OWNER..TR_TIPA_A
 CHECK (L_AUTOLIQUIDACION IN ('S','N')),
  CONSTRAINT &OWNER..TR_TIPA_O
 CHECK (L_OBLIGATORIO IN ('S','N')),
  CONSTRAINT &OWNER..TR_TIPOS_PAGO_PK
 PRIMARY KEY
 (X_TIPA));

ALTER TABLE &OWNER..TR_TIPOS_PARRAFOS ADD (
  CONSTRAINT AVCON_1126797728_L_EDI_001
 CHECK (L_EDITABLE IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_ALI_001
 CHECK (V_ALINEACION IN ('I', 'C', 'D', 'J')),
  CONSTRAINT AVCON_1126797728_V_EST_003
 CHECK (V_ESTILO
IN ('NORMAL', 'NEGRIT', 'CURSIV', 'SUBRAY', 'NE-CU', 'NE-SU', 'CU-SU'
, 'NE-CU-SU')),
  CONSTRAINT AVCON_1126797728_V_EST_004
 CHECK (V_ESTILO_ETIQ
IN ('NORMAL', 'NEGRIT', 'CURSIV', 'SUBRAY', 'NE-CU', 'NE-SU', 'CU-SU'
, 'NE-CU-SU')),
  CONSTRAINT AVCON_1126797728_V_UBI_000
 CHECK (V_UBICACION IN ('A', 'C', 'P', 'O')),
  CONSTRAINT TIPA_PK
 PRIMARY KEY
 (X_TIPA));

ALTER TABLE &OWNER..TR_TIPOS_PUBLICACION ADD (
  CONSTRAINT AVCON_1126797728_L_OBS_002
 CHECK (L_OBSOLETO IN ('S', 'N')),
  CONSTRAINT TIPU_PK
 PRIMARY KEY
 (X_TIPU));

ALTER TABLE &OWNER..TR_TIPOS_RELACIONES ADD (
  CONSTRAINT TIRE_PK
 PRIMARY KEY
 (X_TIRE));

ALTER TABLE &OWNER..TR_TRANSEVOL_X_PERFILES ADD (
  CONSTRAINT AVCON_1126797728_V_PER_000
 CHECK (V_PERMISO IN ('T', 'D', 'A')),
  CONSTRAINT TRXP_PK
 PRIMARY KEY
 (PEUS_X_PEUS, TXTE_X_TIEV, TXTE_X_TRAN));

ALTER TABLE &OWNER..TR_TRANSICIONES ADD (
  CONSTRAINT AVCON_1126797728_L_INF_012
 CHECK (L_INFORMAR IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_L_VAL_005
 CHECK (L_VALIDA IN ('S', 'N')),
  CONSTRAINT AVCON_1126797728_V_TIP_016
 CHECK (V_TIPO IN ('N', 'D', 'U', 'ES', 'EN')),
  CONSTRAINT TRAN_1_CK
 CHECK ((((V_TIPO = 'N')
AND (FASE_X_FASE_INI IS NOT NULL OR FASE_X_FASE_FIN IS NOT NULL)) OR
((V_TIPO IN ('ES','EN'))
AND (FASE_X_FASE_INI IS NULL AND FASE_X_FASE_FIN IS NOT NULL)) OR
((V_TIPO = 'D')
AND (FASE_X_FASE_INI IS NOT NULL AND FASE_X_FASE_FIN IS NULL)) OR
((V_TIPO = 'U')
AND (FASE_X_FASE_INI IS NOT NULL AND FASE_X_FASE_FIN IS NOT NULL)))),
  CONSTRAINT TRAN_PK
 PRIMARY KEY
 (X_TRAN));

ALTER TABLE &OWNER..TR_TRANSICIONES_GR ADD (
  CONSTRAINT TRAG_PK
 PRIMARY KEY
 (X_TRAG));

ALTER TABLE &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS ADD (
  CONSTRAINT AVCON_1126797728_V_UNI_001
 CHECK (V_UNIDAD IN ('D', 'M', 'A')),
  CONSTRAINT TXTE_PK
 PRIMARY KEY
 (TIEV_X_TIEV, TRAN_X_TRAN));

ALTER TABLE &OWNER..TR_USUARIOS_ASIGNADOS ADD (
  CONSTRAINT AVCON_1126797728_V_TIP_001
 CHECK (V_TIPO IN ('P', 'S')),
  CONSTRAINT USAS_1_CK
 CHECK (( (F_ALTA <= F_BAJA) OR   F_BAJA IS NULL )),
  CONSTRAINT USAS_PK
 PRIMARY KEY
 (X_USAS));

ALTER TABLE &OWNER..TR_USUARIOS_X_PERFILES_USUARIO ADD (
  CONSTRAINT UXPU_PK
 PRIMARY KEY
 (USUA_C_USUARIO, PEUS_X_PEUS));

ALTER TABLE &OWNER..TR_VARIABLES ADD (
  CONSTRAINT AVCON_1126797728_V_IMP_000
 CHECK (V_IMPLEMENTACION IN ('F', 'J')),
  CONSTRAINT VARI_PK
 PRIMARY KEY
 (X_VARI));

ALTER TABLE &OWNER..TR_VARIABLES_DOCEXP ADD (
  CONSTRAINT VADO_PK
 PRIMARY KEY
 (DOEX_X_DOEX, VARI_X_VARI));

ALTER TABLE &OWNER..TR_VARIABLES_TIPDOC ADD (
  CONSTRAINT VATI_PK
 PRIMARY KEY
 (TIDO_X_TIDO, VARI_X_VARI));

ALTER TABLE &OWNER..TR_VERSIONES_FLUJOS ADD (
  CONSTRAINT VEFL_PK
 PRIMARY KEY
 (TIEV_X_TIEV, TIEX_X_TIEX));

ALTER TABLE &OWNER..GN_EMPLEADOS ADD (
  CONSTRAINT EMPL_PUOR_FK 
 FOREIGN KEY (PUOR_X_UORG, PUOR_C_PUESTO_TRAB) 
 REFERENCES &OWNER..GN_PTOS_UNI_ORG (UORG_X_UORG,PU&OWNER..TR_C_PUESTO_TRAB),
  CONSTRAINT EMPL_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..GN_MOD_INVOCAR ADD (
  CONSTRAINT MOIN_MDLO_INV_FK 
 FOREIGN KEY (MDLO_C_MODULO_INV) 
 REFERENCES &OWNER..GN_MODULOS (C_MODULO),
  CONSTRAINT MOIN_MDLO_FK 
 FOREIGN KEY (MDLO_C_MODULO) 
 REFERENCES &OWNER..GN_MODULOS (C_MODULO));

ALTER TABLE &OWNER..TR_REGISTROS_DOCEXP ADD (
  CONSTRAINT RDERE_CREG_FK 
 FOREIGN KEY (REG_C_REGISTRO, REG_T_TIPO_REG) 
 REFERENCES &OWNER..TR_REGISTROS (C_REGISTRO,T_TIPO_REG),
  CONSTRAINT RDEDE_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX));

ALTER TABLE &OWNER..TR_RELACIONES ADD (
  CONSTRAINT RELA_FASE_B_FK 
 FOREIGN KEY (FASE_X_FASE_B) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT RELA_FASE_A_FK 
 FOREIGN KEY (FASE_X_FASE_A) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT RELA_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT RELA_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO),
  CONSTRAINT RELA_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN),
  CONSTRAINT RELA_TIRE_FK 
 FOREIGN KEY (TIRE_X_TIRE) 
 REFERENCES &OWNER..TR_TIPOS_RELACIONES (X_TIRE));

ALTER TABLE &OWNER..TR_RELACIONES_EXPEDIENTE ADD (
  CONSTRAINT REEX_EXPE_INT_FK 
 FOREIGN KEY (EXPE_X_EXPE_INT) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT REEX_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT REEX_COMP_FK 
 FOREIGN KEY (COMP_X_COMP) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP));

ALTER TABLE &OWNER..TR_RELACIONES_INTERESADO ADD (
  CONSTRAINT REIN_INTE_INI_FK 
 FOREIGN KEY (INTE_X_INTE_INI) 
 REFERENCES &OWNER..TR_INTERESADOS (X_INTE),
  CONSTRAINT REIN_INTE_FIN_FK 
 FOREIGN KEY (INTE_X_INTE_FIN) 
 REFERENCES &OWNER..TR_INTERESADOS (X_INTE),
  CONSTRAINT REIN_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT REIN_TCON_FK 
 FOREIGN KEY (TCON_X_TCON) 
 REFERENCES &OWNER..TR_TIPOS_CONTACTO (X_TCON));

ALTER TABLE &OWNER..TR_REMISIONES ADD (
  CONSTRAINT REMI_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE));

ALTER TABLE &OWNER..TR_SIM ADD (
  CONSTRAINT SIM_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT SIM_USU_REC_FK 
 FOREIGN KEY (USUA_C_USU_REC) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT SIM_USU_ENV_FK 
 FOREIGN KEY (USUA_C_USU_ENV) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_TAREAS_EXPEDIENTE ADD (
  CONSTRAINT TAEX_EXEF_FK 
 FOREIGN KEY (EXEF_X_EXEF) 
 REFERENCES &OWNER..TR_EXPEDIENTES_EN_FASE (X_EXEF),
  CONSTRAINT TAEX_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT TAEX_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT TAEX_BLPE_FK 
 FOREIGN KEY (BLPE_X_BLPE) 
 REFERENCES &OWNER..TR_BLOQUES_PERMITIDOS (X_BLPE));

ALTER TABLE &OWNER..TR_TIPCER_X_TIPOS_EVOL ADD (
  CONSTRAINT TCPR_TIEV_FK_I 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT TCPR_RAIN_FK_I 
 FOREIGN KEY (TPCR_X_TPCR) 
 REFERENCES &OWNER..TR_TIPOS_CERTIF (X_TPCR));

ALTER TABLE &OWNER..TR_TIPOS_ACTOS ADD (
  CONSTRAINT TIAC_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_FIRMAS_TIPDOCS ADD (
  CONSTRAINT FITI_FIDE_FK 
 FOREIGN KEY (FIDE_X_FIDE) 
 REFERENCES &OWNER..TR_FIRMANTES_DEFINIDOS (X_FIDE),
  CONSTRAINT FITI_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO));

ALTER TABLE &OWNER..TR_IMAGENES ADD (
  CONSTRAINT IMAG_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG));

ALTER TABLE &OWNER..TR_INDICACIONES_FICHA ADD (
  CONSTRAINT INFI_TIIN_FK 
 FOREIGN KEY (TIIN_X_TIIN) 
 REFERENCES &OWNER..TR_TIPOS_INDICACION (X_TIIN),
  CONSTRAINT INFI_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER TABLE &OWNER..TR_INTERESADOS ADD (
  CONSTRAINT INTE_DACO_FK 
 FOREIGN KEY (DACO_X_DACO) 
 REFERENCES &OWNER..TR_DATOS_CONTACTO (X_DACO),
  CONSTRAINT INTE_TORZ_FK 
 FOREIGN KEY (TORZ_C_TIPO_ORGZ) 
 REFERENCES &OWNER..GN_TIPOS_ORGANIZACION (C_TIPO_ORGZ),
  CONSTRAINT INTE_TIDE_FK 
 FOREIGN KEY (TIID_C_ABREV_EMPR) 
 REFERENCES &OWNER..GN_TIPOS_IDENTIFICADOR (C_ABREVIATURA),
  CONSTRAINT INTE_TIID_FK 
 FOREIGN KEY (TIID_C_ABREVIATURA) 
 REFERENCES &OWNER..GN_TIPOS_IDENTIFICADOR (C_ABREVIATURA));

ALTER TABLE &OWNER..TR_INTERESADOS_DOCUMENTO ADD (
  CONSTRAINT INDO_RAIN_FK 
 FOREIGN KEY (RAIN_X_RAIN) 
 REFERENCES &OWNER..TR_RAZONES_INTERES (X_RAIN),
  CONSTRAINT INDO_INEX_FK 
 FOREIGN KEY (INEX_X_EXPE, INEX_X_INTE, INEX_X_RAIN) 
 REFERENCES &OWNER..TR_INTERESADOS_EXPEDIENTE (EXPE_X_EXPE,INTE_X_INTE,RAIN_X_RAIN),
  CONSTRAINT INDO_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX));

ALTER TABLE &OWNER..TR_INTERESADOS_EXPEDIENTE ADD (
  CONSTRAINT INEX_RAIN_FK 
 FOREIGN KEY (RAIN_X_RAIN) 
 REFERENCES &OWNER..TR_RAZONES_INTERES (X_RAIN),
  CONSTRAINT INEX_INTE_FK 
 FOREIGN KEY (INTE_X_INTE) 
 REFERENCES &OWNER..TR_INTERESADOS (X_INTE),
  CONSTRAINT INEX_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT INEX_DACO_FK 
 FOREIGN KEY (DACO_X_DACO) 
 REFERENCES &OWNER..TR_DATOS_CONTACTO (X_DACO));

ALTER TABLE &OWNER..TR_LIMITES_CADUCIDADES ADD (
  CONSTRAINT LICA_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN),
  CONSTRAINT LICA_CADU_FK 
 FOREIGN KEY (CADU_X_CADU) 
 REFERENCES &OWNER..TR_CADUCIDADES (X_CADU));

ALTER TABLE &OWNER..TR_LIMITES_RELACION ADD (
  CONSTRAINT LIRE_REIN_FK 
 FOREIGN KEY (REIN_X_REIN) 
 REFERENCES &OWNER..TR_RELACIONES_INTERESADO (X_REIN),
  CONSTRAINT LIRE_META_FK 
 FOREIGN KEY (META_X_META) 
 REFERENCES &OWNER..TR_METAFASES (X_META),
  CONSTRAINT LIRE_FASE_FK 
 FOREIGN KEY (FASE_X_FASE) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT LIRE_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE));

ALTER TABLE &OWNER..TR_METAFASES ADD (
  CONSTRAINT META_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_METAFASES_GR ADD (
  CONSTRAINT METG_META_FK 
 FOREIGN KEY (META_X_META) 
 REFERENCES &OWNER..TR_METAFASES (X_META),
  CONSTRAINT METG_DDPG_FK 
 FOREIGN KEY (DDPG_X_DDPG) 
 REFERENCES &OWNER..TR_DEFPROCS_GR (X_DDPG));

ALTER TABLE &OWNER..TR_MODIFICACIONES_CADUCIDADES ADD (
  CONSTRAINT MOCA_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT MOCA_CAEX_FK 
 FOREIGN KEY (CAEX_X_CAEX) 
 REFERENCES &OWNER..TR_CADUCIDADES_EXPS (X_CAEX));

ALTER TABLE &OWNER..TR_NODOSTRAN_GR ADD (
  CONSTRAINT NOTG_TRAG_FK 
 FOREIGN KEY (TRAG_X_TRAG) 
 REFERENCES &OWNER..TR_TRANSICIONES_GR (X_TRAG));

ALTER TABLE &OWNER..TR_NORMATIVAS ADD (
  CONSTRAINT NORM_TINO_FK 
 FOREIGN KEY (TINO_X_TINO) 
 REFERENCES &OWNER..TR_TIPOS_NORMATIVA (X_TINO),
  CONSTRAINT NORM_TIPU_FK 
 FOREIGN KEY (TIPU_X_TIPU) 
 REFERENCES &OWNER..TR_TIPOS_PUBLICACION (X_TIPU),
  CONSTRAINT NORM_AMLE_FK 
 FOREIGN KEY (AMLE_X_AMLE) 
 REFERENCES &OWNER..TR_AMBITOS_LEY (X_AMLE));

ALTER TABLE &OWNER..TR_NORMATIVAS_PROCEDIMIENTO ADD (
  CONSTRAINT NOPR_NORM_FK 
 FOREIGN KEY (NORM_X_NORM) 
 REFERENCES &OWNER..TR_NORMATIVAS (X_NORM),
  CONSTRAINT NOPR_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER TABLE &OWNER..TR_NOTIFICACIONES_ENVIO ADD (
  CONSTRAINT NOEN_REM_FK 
 FOREIGN KEY (REM_X_REM) 
 REFERENCES &OWNER..TR_NOTIFICACIONES_REMESAS (X_REM));

ALTER TABLE &OWNER..TR_NOTIFICACIONES_INTE ADD (
  CONSTRAINT NOIN_NOEN_FK 
 FOREIGN KEY (NOEN_X_NOEN) 
 REFERENCES &OWNER..TR_NOTIFICACIONES_ENVIO (X_NOEN),
  CONSTRAINT NOIN_INDO_FK 
 FOREIGN KEY (INDO_X_DOEX, INDO_X_EXPE, INDO_X_INTE, INDO_X_RAIN_INEX, INDO_X_RAIN) 
 REFERENCES &OWNER..TR_INTERESADOS_DOCUMENTO (DOEX_X_DOEX,INEX_X_EXPE,INEX_X_INTE,INEX_X_RAIN,RAIN_X_RAIN));

ALTER TABLE &OWNER..TR_ORGANISMOS_EXPEDIENTE ADD (
  CONSTRAINT UOEX_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT UOEX_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG));

ALTER TABLE &OWNER..TR_ORGANISMOS_PROCEDIMIENTO ADD (
  CONSTRAINT UOPR_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT UOPR_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG));

ALTER TABLE &OWNER..TR_PAGOS_TASAS ADD (
  CONSTRAINT PATA_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX));

ALTER TABLE &OWNER..TR_PARAMETROS ADD (
  CONSTRAINT PARA_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_PARAMETROS_BLOQUES ADD (
  CONSTRAINT PABL_PARA_FK 
 FOREIGN KEY (PARA_X_PARA) 
 REFERENCES &OWNER..TR_PARAMETROS (X_PARA),
  CONSTRAINT PABL_BLOQ_FK 
 FOREIGN KEY (BLOQ_X_BLOQ) 
 REFERENCES &OWNER..TR_BLOQUES (X_BLOQ));

ALTER TABLE &OWNER..TR_PARAMETROS_DOCUMENTOS ADD (
  CONSTRAINT PMDO_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX));

ALTER TABLE &OWNER..TR_PARAMETROS_VARIABLES ADD (
  CONSTRAINT PAVA_PARA_FK 
 FOREIGN KEY (PARA_X_PARA) 
 REFERENCES &OWNER..TR_PARAMETROS (X_PARA),
  CONSTRAINT PAVA_VARI_FK 
 FOREIGN KEY (VARI_X_VARI) 
 REFERENCES &OWNER..TR_VARIABLES (X_VARI));

ALTER TABLE &OWNER..TR_PARRAFOS_DOCEXPS ADD (
  CONSTRAINT PADO_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX),
  CONSTRAINT PADO_TIPA_FK 
 FOREIGN KEY (TIPA_X_TIPA) 
 REFERENCES &OWNER..TR_TIPOS_PARRAFOS (X_TIPA));

ALTER TABLE &OWNER..TR_PARRAFOS_TIPDOCS ADD (
  CONSTRAINT PATI_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO),
  CONSTRAINT PATI_TIPA_FK 
 FOREIGN KEY (TIPA_X_TIPA) 
 REFERENCES &OWNER..TR_TIPOS_PARRAFOS (X_TIPA));

ALTER TABLE &OWNER..TR_PERFILES_USUARIOS ADD (
  CONSTRAINT PEUS_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_PLANTILLAS ADD (
  CONSTRAINT PLAN_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_PLANTILLAS_OFFICE ADD (
  CONSTRAINT POTD_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO));

ALTER TABLE &OWNER..TR_PLANTILLAS_PROCEDIMIENTO ADD (
  CONSTRAINT PLPR_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER TABLE &OWNER..TR_RAZINT_X_DOCPEREVOL ADD (
  CONSTRAINT RIXD_RAIN_FK 
 FOREIGN KEY (TIEV_X_TIEV, RAIN_X_RAIN) 
 REFERENCES &OWNER..TR_RAZONINT_PROCEDIMIENTO (TIEV_X_TIEV,RAIN_X_RAIN),
  CONSTRAINT RIXD_DXTE_FK 
 FOREIGN KEY (DOPE_X_DOPE) 
 REFERENCES &OWNER..TR_DOCUMENTOS_PERMITIDOS (X_DOPE));

ALTER TABLE &OWNER..TR_RAZONINT_PROCEDIMIENTO ADD (
  CONSTRAINT RAIPR_RAIN_FK_I 
 FOREIGN KEY (RAIN_X_RAIN) 
 REFERENCES &OWNER..TR_RAZONES_INTERES (X_RAIN),
  CONSTRAINT RAIPR_TIEV_FK_I 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER TABLE &OWNER..TR_REGISTRO_OPERACIONES ADD (
  CONSTRAINT REOP_REIN_FK 
 FOREIGN KEY (REIN_X_REIN) 
 REFERENCES &OWNER..TR_RELACIONES_INTERESADO (X_REIN),
  CONSTRAINT REOP_LIRE_FK 
 FOREIGN KEY (LIRE_X_LIRE) 
 REFERENCES &OWNER..TR_LIMITES_RELACION (X_LIRE));

ALTER TABLE &OWNER..TR_DOCUMENTOS_PERMITIDOS ADD (
  CONSTRAINT DOPE_FASE_FK 
 FOREIGN KEY (FASE_X_FASE) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT DOPE_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO),
  CONSTRAINT DOPE_TIAC_FK 
 FOREIGN KEY (TIAC_X_TIAC) 
 REFERENCES &OWNER..TR_TIPOS_ACTOS (X_TIAC));

ALTER TABLE &OWNER..TR_EXPEDIENTES ADD (
  CONSTRAINT EXPE_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT EXPE_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT EXPE_UORG_ENVIA_FK 
 FOREIGN KEY (UORG_X_UORG_ENVIA) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT EXPE_COMP_FK 
 FOREIGN KEY (COMP_X_COMP) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP));

ALTER TABLE &OWNER..TR_EXPEDIENTES_BORRADOS ADD (
  CONSTRAINT EXPEB_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT EXPEB_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_EXPEDIENTES_EN_FASE ADD (
  CONSTRAINT EXEF_FASE_FK 
 FOREIGN KEY (FASE_X_FASE) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT EXEF_EXEF_FK 
 FOREIGN KEY (EXEF_X_EXEF) 
 REFERENCES &OWNER..TR_EXPEDIENTES_EN_FASE (X_EXEF),
  CONSTRAINT EXEF_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT EXEF_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT EXEF_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN),
  CONSTRAINT EXEF_USU_BLQ_FK 
 FOREIGN KEY (USUA_C_USUA_BLQ) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT EXEF_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_EXTREMOSTRAN_GR ADD (
  CONSTRAINT EXTG_METG_FK 
 FOREIGN KEY (METG_X_METG) 
 REFERENCES &OWNER..TR_METAFASES_GR (X_METG),
  CONSTRAINT EXTG_FASE_FK 
 FOREIGN KEY (FASE_X_FASE) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT EXTG_DDPG_FK 
 FOREIGN KEY (DDPG_X_DDPG) 
 REFERENCES &OWNER..TR_DEFPROCS_GR (X_DDPG));

ALTER TABLE &OWNER..TR_FASES ADD (
  CONSTRAINT FASE_META_FK 
 FOREIGN KEY (META_X_META) 
 REFERENCES &OWNER..TR_METAFASES (X_META),
  CONSTRAINT FASE_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT FASE_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_FIRMANTES_DEFINIDOS ADD (
  CONSTRAINT FIDE_FIDE_FK 
 FOREIGN KEY (FIDE_X_FIDE) 
 REFERENCES &OWNER..TR_FIRMANTES_DEFINIDOS (X_FIDE),
  CONSTRAINT FIDE_PUOR_FK 
 FOREIGN KEY (PTUO_X_UORG, PTUO_X_PUTR) 
 REFERENCES &OWNER..GN_PTOS_UNI_ORG (UORG_X_UORG,PU&OWNER..TR_C_PUESTO_TRAB),
  CONSTRAINT FIDE_TEDI_FK 
 FOREIGN KEY (TEDI_X_TEDI) 
 REFERENCES &OWNER..TR_TEXTOS_DISPOSICIONES (X_TEDI));

ALTER TABLE &OWNER..TR_FIRMAS ADD (
  CONSTRAINT FIRM_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_FIRMAS_DOCEXP ADD (
  CONSTRAINT FIDO_INTE_FK 
 FOREIGN KEY (INTE_X_INTE) 
 REFERENCES &OWNER..TR_INTERESADOS (X_INTE),
  CONSTRAINT FIDO_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX),
  CONSTRAINT FIDO_PUOR_S_FK 
 FOREIGN KEY (PUOR_X_UORG_S, PUOR_X_PU&OWNER..TR_S) 
 REFERENCES &OWNER..GN_PTOS_UNI_ORG (UORG_X_UORG,PU&OWNER..TR_C_PUESTO_TRAB),
  CONSTRAINT FIDO_PUOR_FK 
 FOREIGN KEY (PUOR_X_UORG, PUOR_X_PUTR) 
 REFERENCES &OWNER..GN_PTOS_UNI_ORG (UORG_X_UORG,PU&OWNER..TR_C_PUESTO_TRAB),
  CONSTRAINT FIDO_PUOR_D_FK 
 FOREIGN KEY (PUOR_X_UORG_D, PUOR_X_PU&OWNER..TR_D) 
 REFERENCES &OWNER..GN_PTOS_UNI_ORG (UORG_X_UORG,PU&OWNER..TR_C_PUESTO_TRAB),
  CONSTRAINT FIDO_USU_DIG_FK 
 FOREIGN KEY (USUA_C_USU_DIGI) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT FIDO_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..GN_MUNICIPIOS ADD (
  CONSTRAINT MUNI_PROV_FK 
 FOREIGN KEY (PROV_C_PROVINCIA) 
 REFERENCES &OWNER..GN_PROVINCIAS (C_PROVINCIA));

ALTER TABLE &OWNER..GN_PTOS_UNI_ORG ADD (
  CONSTRAINT PUOR_PU&OWNER..TR_FK 
 FOREIGN KEY (PU&OWNER..TR_C_PUESTO_TRAB) 
 REFERENCES &OWNER..GN_PUESTO_TRAB (C_PUESTO_TRAB),
  CONSTRAINT PUOR_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG));

ALTER TABLE &OWNER..GN_SISTEMAS ADD (
  CONSTRAINT STMA_COMP_REG_FK 
 FOREIGN KEY (COMP_X_COMP_REG) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP),
  CONSTRAINT STMA_COMP_NOTI_FK 
 FOREIGN KEY (COMP_X_COMP_NOTI) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP),
  CONSTRAINT STMA_COMP_INF_FK 
 FOREIGN KEY (COMP_X_COMP_INF) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP),
  CONSTRAINT STMA_COMP_GUAR_FK 
 FOREIGN KEY (COMP_X_COMP_GUAR) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP),
  CONSTRAINT STMA_COMP_FIRMA_FK 
 FOREIGN KEY (COMP_X_COMP_FIRMA) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP),
  CONSTRAINT STMA_COMP_AVI_FK 
 FOREIGN KEY (COMP_X_COMP_AVI) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP),
  CONSTRAINT STMA_COMP_ARCH_FK 
 FOREIGN KEY (COMP_X_COMP_ARCH) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP));

ALTER TABLE &OWNER..GN_UNI_ORG ADD (
  CONSTRAINT UORG_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT UORG_MUNI_FK 
 FOREIGN KEY (MUNI_C_MUNICIPIO, PROV_C_PROVINCIA) 
 REFERENCES &OWNER..GN_MUNICIPIOS (C_MUNICIPIO,PROV_C_PROVINCIA),
  CONSTRAINT UORG_TIVA_FK 
 FOREIGN KEY (TIVA_C_TIPO_VIA) 
 REFERENCES &OWNER..GN_TIPOS_VIA (C_TIPO_VIA),
  CONSTRAINT UORG_TORZ_FK 
 FOREIGN KEY (TORZ_C_TIPO_ORGZ) 
 REFERENCES &OWNER..GN_TIPOS_ORGANIZACION (C_TIPO_ORGZ),
  CONSTRAINT UORG_TIOR_FK 
 FOREIGN KEY (TIOR_X_TIOR) 
 REFERENCES &OWNER..GN_TIPOS_ORGANISMO (X_TIOR));

ALTER TABLE &OWNER..TR_AVISOS_CADUCIDADES ADD (
  CONSTRAINT AVCA_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN),
  CONSTRAINT AVCA_USUA_FK 
 FOREIGN KEY (USUA_C_USU_CRE) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT AVCA_USUA_AVISAR_A_FK 
 FOREIGN KEY (USUA_C_USU_AVI) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT AVCA_CAEX_FK 
 FOREIGN KEY (CAEX_X_CAEX) 
 REFERENCES &OWNER..TR_CADUCIDADES_EXPS (X_CAEX));

ALTER TABLE &OWNER..TR_BLOQPEREVOL_X_PERFILES ADD (
  CONSTRAINT BLXP_PEUS_FK 
 FOREIGN KEY (PEUS_X_PEUS) 
 REFERENCES &OWNER..TR_PERFILES_USUARIOS (X_PEUS),
  CONSTRAINT BLXP_BXTE_FK 
 FOREIGN KEY (BXTE_X_TIEV, BXTE_X_BLPE) 
 REFERENCES &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS (TIEV_X_TIEV,BLPE_X_BLPE));

ALTER TABLE &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS ADD (
  CONSTRAINT BXTE_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT BXTE_BLPE_FK 
 FOREIGN KEY (BLPE_X_BLPE) 
 REFERENCES &OWNER..TR_BLOQUES_PERMITIDOS (X_BLPE));

ALTER TABLE &OWNER..TR_BLOQUES ADD (
  CONSTRAINT BLOQ_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_BLOQUES_PERMITIDOS ADD (
  CONSTRAINT BLPE_FASE_FK 
 FOREIGN KEY (FASE_X_FASE) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT BLPE_TIAC_FK 
 FOREIGN KEY (TIAC_X_TIAC) 
 REFERENCES &OWNER..TR_TIPOS_ACTOS (X_TIAC),
  CONSTRAINT BLPE_BLOQ_INI_FK 
 FOREIGN KEY (BLOQ_X_BLOQ_INI) 
 REFERENCES &OWNER..TR_BLOQUES (X_BLOQ),
  CONSTRAINT BLPE_BLOQ_FIN_FK 
 FOREIGN KEY (BLOQ_X_BLOQ_FIN) 
 REFERENCES &OWNER..TR_BLOQUES (X_BLOQ));

ALTER TABLE &OWNER..TR_CADUCIDADES ADD (
  CONSTRAINT CADU_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT CADU_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN));

ALTER TABLE &OWNER..TR_CADUCIDADES_EXPS ADD (
  CONSTRAINT CAEX_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT CAEX_CADU_FK 
 FOREIGN KEY (CADU_X_CADU) 
 REFERENCES &OWNER..TR_CADUCIDADES (X_CADU));

ALTER TABLE &OWNER..TR_CALENDAR ADD (
  CONSTRAINT CALE_MUNI_FK 
 FOREIGN KEY (MUNI_C_MUNICIPIO, MUNI_C_PROVINCIA) 
 REFERENCES &OWNER..GN_MUNICIPIOS (C_MUNICIPIO,PROV_C_PROVINCIA));

ALTER TABLE &OWNER..TR_CAMBIOS_EVOLEXPS ADD (
  CONSTRAINT CAEV_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT CAEV_VEFL_FK 
 FOREIGN KEY (VEFL_X_TIEV, VEFL_X_TIEX) 
 REFERENCES &OWNER..TR_VERSIONES_FLUJOS (TIEV_X_TIEV,TIEX_X_TIEX),
  CONSTRAINT CAEV_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_COMPONENTES ADD (
  CONSTRAINT COMP_TICO_FK 
 FOREIGN KEY (TICO_X_TICO) 
 REFERENCES &OWNER..TR_TIPOS_COMPONENTE (X_TICO),
  CONSTRAINT COMP_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG));

ALTER TABLE &OWNER..TR_COMUNICACIONES ADD (
  CONSTRAINT COM_INEX_FK 
 FOREIGN KEY (EXPE_X_EXPE, INTE_X_INTE, RAIN_X_RAIN) 
 REFERENCES &OWNER..TR_INTERESADOS_EXPEDIENTE (EXPE_X_EXPE,INTE_X_INTE,RAIN_X_RAIN),
  CONSTRAINT COM_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT COM_USU_ENV_FK 
 FOREIGN KEY (USUA_C_USU_ENV) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_CONDACC_X_BLOQPERTIPEVOS ADD (
  CONSTRAINT COXB_COAC_FK 
 FOREIGN KEY (COAC_X_COAC) 
 REFERENCES &OWNER..TR_CONDICIONES_ACCIONES (X_COAC),
  CONSTRAINT COXB_BXTE_FK 
 FOREIGN KEY (BXTE_X_TIEV, BXTE_X_BLPE) 
 REFERENCES &OWNER..TR_BLOQPERS_X_TIPOS_EVOLS (TIEV_X_TIEV,BLPE_X_BLPE));

ALTER TABLE &OWNER..TR_CONDACC_X_DOCPERTIPEVOS ADD (
  CONSTRAINT COXD_DXTE_FK 
 FOREIGN KEY (DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO) 
 REFERENCES &OWNER..TR_DOCPER_X_TIPOS_EVOL (TIEV_X_TIEV,DOPE_X_FASE,DOPE_X_TIDO),
  CONSTRAINT COXD_COAC_FK 
 FOREIGN KEY (COAC_X_COAC) 
 REFERENCES &OWNER..TR_CONDICIONES_ACCIONES (X_COAC));

ALTER TABLE &OWNER..TR_CONDACC_X_TRANSICIONES ADD (
  CONSTRAINT COXT_TXTE_FK 
 FOREIGN KEY (TXTE_X_TIEV, TXTE_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS (TIEV_X_TIEV,TRAN_X_TRAN),
  CONSTRAINT COXT_COAC_FK 
 FOREIGN KEY (COAC_X_COAC) 
 REFERENCES &OWNER..TR_CONDICIONES_ACCIONES (X_COAC));

ALTER TABLE &OWNER..TR_CONDICIONES_ACCIONES ADD (
  CONSTRAINT COAC_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_CONS_PLANMULT ADD (
  CONSTRAINT &OWNER..TR_CONS_PLANMULT_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_CONSTANTES ADD (
  CONSTRAINT CNTE_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_CONSULTAS_CERT ADD (
  CONSTRAINT COCE_INDO_FK 
 FOREIGN KEY (INDO_X_DOEX, INDO_X_EXPE, INDO_X_INTE, INDO_X_RAIN_EXP, INDO_X_RAIN_DOC) 
 REFERENCES &OWNER..TR_INTERESADOS_DOCUMENTO (DOEX_X_DOEX,INEX_X_EXPE,INEX_X_INTE,INEX_X_RAIN,RAIN_X_RAIN),
  CONSTRAINT COCE_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_DATOS_COMPONENTE ADD (
  CONSTRAINT DATC_COMP_FK 
 FOREIGN KEY (COMP_X_COMP) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP));

ALTER TABLE &OWNER..TR_DATOS_CONTACTO ADD (
  CONSTRAINT DACO_PAIS_FK 
 FOREIGN KEY (PAIS_C_PAIS) 
 REFERENCES &OWNER..GN_PAISES (C_PAIS),
  CONSTRAINT DACO_MUNI_FK 
 FOREIGN KEY (MUNI_C_MUNICIPIO, MUNI_C_PROVINCIA) 
 REFERENCES &OWNER..GN_MUNICIPIOS (C_MUNICIPIO,PROV_C_PROVINCIA),
  CONSTRAINT DACO_TIVA_FK 
 FOREIGN KEY (TIVA_C_TIPO_VIA) 
 REFERENCES &OWNER..GN_TIPOS_VIA (C_TIPO_VIA));

ALTER TABLE &OWNER..TR_DATOS_TIPO_PAGO ADD (
  CONSTRAINT DAPA_TIPA_FK 
 FOREIGN KEY (TIPA_X_TIPA) 
 REFERENCES &OWNER..TR_TIPOS_PAGO (X_TIPA));

ALTER TABLE &OWNER..TR_DEFPROCS_GR ADD (
  CONSTRAINT DDPG_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER TABLE &OWNER..TR_DOC_EXPE_BORRADOS ADD (
  CONSTRAINT DOEXB_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT DOEXB_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_DOCPEREVOL_X_PERFILES ADD (
  CONSTRAINT DOXP_PEUS_FK 
 FOREIGN KEY (PEUS_X_PEUS) 
 REFERENCES &OWNER..TR_PERFILES_USUARIOS (X_PEUS),
  CONSTRAINT DOXP_DXTE_FK 
 FOREIGN KEY (DXTE_X_TIEV, DXTE_X_FASE, DXTE_X_TIDO) 
 REFERENCES &OWNER..TR_DOCPER_X_TIPOS_EVOL (TIEV_X_TIEV,DOPE_X_FASE,DOPE_X_TIDO));

ALTER TABLE &OWNER..TR_DOCPER_X_TIPOS_EVOL ADD (
  CONSTRAINT DXTE_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER TABLE &OWNER..TR_DOCUMENTOS_DELEGADOS ADD (
  CONSTRAINT DODE_FIDE_FK 
 FOREIGN KEY (FIDE_X_FIDE) 
 REFERENCES &OWNER..TR_FIRMANTES_DEFINIDOS (X_FIDE),
  CONSTRAINT DODE_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO));

ALTER TABLE &OWNER..TR_DOCUMENTOS_EXPEDIENTES ADD (
  CONSTRAINT DOEX_FASE_FK 
 FOREIGN KEY (EXEF_X_EXEF) 
 REFERENCES &OWNER..TR_EXPEDIENTES_EN_FASE (X_EXEF),
  CONSTRAINT DOEX_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT DOEX_ESLA_FK_I 
 FOREIGN KEY (ESLA_X_ESLA) 
 REFERENCES &OWNER..TR_ESTELAB_ENI (X_ESLA),
  CONSTRAINT DOEX_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX),
  CONSTRAINT DOEX_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO),
  CONSTRAINT DOEX_TDEN_FK_I 
 FOREIGN KEY (TDEN_X_TDEN) 
 REFERENCES &OWNER..TR_TIPODOC_ENI (X_TDEN),
  CONSTRAINT DOEX_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT DOEX_COMP_FK 
 FOREIGN KEY (COMP_X_COMP) 
 REFERENCES &OWNER..TR_COMPONENTES (X_COMP));

ALTER TABLE &OWNER..TR_TIPOS_DOCUMENTOS ADD (
  CONSTRAINT TIDO_PLAN_FK 
 FOREIGN KEY (PLAN_X_PLAN) 
 REFERENCES &OWNER..TR_PLANTILLAS (X_PLAN),
  CONSTRAINT TIDO_TPCR_PK 
 FOREIGN KEY (TPCR_X_TPCR) 
 REFERENCES &OWNER..TR_TIPOS_CERTIF (X_TPCR),
  CONSTRAINT TIDO_TDEN_FK 
 FOREIGN KEY (TDEN_X_TDEN) 
 REFERENCES &OWNER..TR_TIPODOC_ENI (X_TDEN),
  CONSTRAINT TIDO_TIPA_FK 
 FOREIGN KEY (TIPA_X_TIPA) 
 REFERENCES &OWNER..TR_TIPOS_PAGO (X_TIPA),
  CONSTRAINT TIDO_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA),
  CONSTRAINT TIDO_CONSPLANMULT_FK 
 FOREIGN KEY (COPLANMULT_X_COPLANMULT) 
 REFERENCES &OWNER..TR_CONS_PLANMULT (X_COPLANMULT));

ALTER TABLE &OWNER..TR_TIPOS_EVOLUCIONES ADD (
  CONSTRAINT TIEV_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT TIEV_USUA_FK 
 FOREIGN KEY (USUA_C_USUA_BLQ) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO),
  CONSTRAINT TIEV_UORG_TRAM_FK 
 FOREIGN KEY (UORG_X_UORG_TRAM) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT TIEV_UORG_RES_FK 
 FOREIGN KEY (UORG_X_UORG_RES) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT TIEV_UORG_FK 
 FOREIGN KEY (UORG_X_UORG) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT TIEV_UORG_COMP_FK 
 FOREIGN KEY (UORG_X_UORG_COMP) 
 REFERENCES &OWNER..GN_UNI_ORG (X_UORG),
  CONSTRAINT TIEV_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_TIPOS_EXPEDIENTES ADD (
  CONSTRAINT TIEX_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_TIPOS_PARRAFOS ADD (
  CONSTRAINT TIPA_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_TIPOS_RELACIONES ADD (
  CONSTRAINT TIRE_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_TRANSEVOL_X_PERFILES ADD (
  CONSTRAINT TRXP_PEUS_FK 
 FOREIGN KEY (PEUS_X_PEUS) 
 REFERENCES &OWNER..TR_PERFILES_USUARIOS (X_PEUS),
  CONSTRAINT TRXP_TXTE_FK 
 FOREIGN KEY (TXTE_X_TIEV, TXTE_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS (TIEV_X_TIEV,TRAN_X_TRAN));

ALTER TABLE &OWNER..TR_TRANSICIONES ADD (
  CONSTRAINT TRAN_FASE_INI_FK 
 FOREIGN KEY (FASE_X_FASE_INI) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT TRAN_FASE_FIN_FK 
 FOREIGN KEY (FASE_X_FASE_FIN) 
 REFERENCES &OWNER..TR_FASES (X_FASE),
  CONSTRAINT TRAN_TIAC_FK 
 FOREIGN KEY (TIAC_X_TIAC) 
 REFERENCES &OWNER..TR_TIPOS_ACTOS (X_TIAC),
  CONSTRAINT TRAN_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN));

ALTER TABLE &OWNER..TR_TRANSICIONES_GR ADD (
  CONSTRAINT TRAG_EXTG_INI_FK 
 FOREIGN KEY (EXTG_X_EXTG_INI) 
 REFERENCES &OWNER..TR_EXTREMOSTRAN_GR (X_EXTG),
  CONSTRAINT TRAG_EXTG_FIN_FK 
 FOREIGN KEY (EXTG_X_EXTG_FIN) 
 REFERENCES &OWNER..TR_EXTREMOSTRAN_GR (X_EXTG),
  CONSTRAINT TRAG_DDPG_FK 
 FOREIGN KEY (DDPG_X_DDPG) 
 REFERENCES &OWNER..TR_DEFPROCS_GR (X_DDPG),
  CONSTRAINT TRAG_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN));

ALTER TABLE &OWNER..TR_TRANSICIONES_X_TIPOS_EVOLS ADD (
  CONSTRAINT TXTE_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV),
  CONSTRAINT TXTE_TRAN_PROV_FK 
 FOREIGN KEY (TRAN_X_TRAN_PROV) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN),
  CONSTRAINT TXTE_TRAN_FK 
 FOREIGN KEY (TRAN_X_TRAN) 
 REFERENCES &OWNER..TR_TRANSICIONES (X_TRAN));

ALTER TABLE &OWNER..TR_USUARIOS_ASIGNADOS ADD (
  CONSTRAINT USAS_EXPE_FK 
 FOREIGN KEY (EXPE_X_EXPE) 
 REFERENCES &OWNER..TR_EXPEDIENTES (X_EXPE),
  CONSTRAINT USAS_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_USUARIOS_X_PERFILES_USUARIO ADD (
  CONSTRAINT UXPU_PEUS_FK 
 FOREIGN KEY (PEUS_X_PEUS) 
 REFERENCES &OWNER..TR_PERFILES_USUARIOS (X_PEUS),
  CONSTRAINT UXPU_USUA_FK 
 FOREIGN KEY (USUA_C_USUARIO) 
 REFERENCES &OWNER..GN_USUARIOS (C_USUARIO));

ALTER TABLE &OWNER..TR_VARIABLES ADD (
  CONSTRAINT VARI_TIAC_FK 
 FOREIGN KEY (TIAC_X_TIAC) 
 REFERENCES &OWNER..TR_TIPOS_ACTOS (X_TIAC),
  CONSTRAINT VARI_STMA_FK 
 FOREIGN KEY (STMA_X_STMA) 
 REFERENCES &OWNER..GN_SISTEMAS (X_STMA));

ALTER TABLE &OWNER..TR_VARIABLES_DOCEXP ADD (
  CONSTRAINT VADO_DOEX_FK 
 FOREIGN KEY (DOEX_X_DOEX) 
 REFERENCES &OWNER..TR_DOCUMENTOS_EXPEDIENTES (X_DOEX),
  CONSTRAINT VADO_VARI_FK 
 FOREIGN KEY (VARI_X_VARI) 
 REFERENCES &OWNER..TR_VARIABLES (X_VARI));

ALTER TABLE &OWNER..TR_VARIABLES_TIPDOC ADD (
  CONSTRAINT VATI_TIDO_FK 
 FOREIGN KEY (TIDO_X_TIDO) 
 REFERENCES &OWNER..TR_TIPOS_DOCUMENTOS (X_TIDO),
  CONSTRAINT VATI_VARI_FK 
 FOREIGN KEY (VARI_X_VARI) 
 REFERENCES &OWNER..TR_VARIABLES (X_VARI));

ALTER TABLE &OWNER..TR_VERSIONES_FLUJOS ADD (
  CONSTRAINT VEFL_TIEX_FK 
 FOREIGN KEY (TIEX_X_TIEX) 
 REFERENCES &OWNER..TR_TIPOS_EXPEDIENTES (X_TIEX),
  CONSTRAINT VEFL_TIEV_FK 
 FOREIGN KEY (TIEV_X_TIEV) 
 REFERENCES &OWNER..TR_TIPOS_EVOLUCIONES (X_TIEV));

ALTER VIEW &OWNER..GN_v_sistemas COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_documentos COMPILE;
ALTER VIEW &OWNER..TR_v_perfiles_usuarios COMPILE;
ALTER VIEW &OWNER..TR_v_fases COMPILE;
ALTER VIEW &OWNER..GN_v_uni_org COMPILE;
ALTER VIEW &OWNER..TR_v_variables COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_relaciones COMPILE;
ALTER VIEW &OWNER..TR_v_bloques COMPILE;
ALTER VIEW &OWNER..TR_v_condiciones_acciones COMPILE;
ALTER VIEW &OWNER..TR_v_expedientes COMPILE;
ALTER VIEW &OWNER..TR_v_razonint_procedimiento COMPILE;
ALTER VIEW &OWNER..TR_v_razint_x_docperevol COMPILE;
ALTER VIEW &OWNER..TR_v_cons_planmult COMPILE;
ALTER VIEW &OWNER..TR_v_expedientes_borrados COMPILE;
ALTER VIEW &OWNER..TR_v_doc_expe_borrados COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_parrafos COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_expedientes COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_actos COMPILE;
ALTER VIEW &OWNER..TR_v_plantillas COMPILE;
ALTER VIEW &OWNER..TR_v_parametros COMPILE;
ALTER VIEW &OWNER..TR_v_metafases COMPILE;
ALTER VIEW &OWNER..TR_v_constantes COMPILE;
ALTER VIEW &OWNER..TR_v_numeradores COMPILE;
ALTER VIEW &OWNER..TR_v_formatodoc_eni COMPILE;
ALTER VIEW &OWNER..TR_v_estelab_eni COMPILE;
ALTER VIEW &OWNER..TR_v_remisiones COMPILE;
ALTER VIEW &OWNER..TR_v_accesos_adm COMPILE;
ALTER VIEW &OWNER..TR_v_datos_tipo_pago COMPILE;
ALTER VIEW &OWNER..TR_v_tipodoc_eni COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_pago COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_certif COMPILE;
ALTER VIEW &OWNER..TR_v_calendar COMPILE;
ALTER VIEW &OWNER..TR_v_documentos_expedientes COMPILE;
ALTER VIEW &OWNER..TR_v_bloques_permitidos COMPILE;
ALTER VIEW &OWNER..GN_v_usuarios COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_normativa COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_publicacion COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_indicacion COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_contacto COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_componente COMPILE;
ALTER VIEW &OWNER..TR_v_textos_disposiciones COMPILE;
ALTER VIEW &OWNER..TR_v_razones_interes COMPILE;
ALTER VIEW &OWNER..TR_v_normativas COMPILE;
ALTER VIEW &OWNER..TR_v_interesados COMPILE;
ALTER VIEW &OWNER..TR_v_firmantes_definidos COMPILE;
ALTER VIEW &OWNER..TR_v_errores COMPILE;
ALTER VIEW &OWNER..TR_v_datos_contacto COMPILE;
ALTER VIEW &OWNER..TR_v_datos_componente COMPILE;
ALTER VIEW &OWNER..TR_v_componentes COMPILE;
ALTER VIEW &OWNER..TR_v_ambitos_ley COMPILE;
ALTER VIEW &OWNER..GN_v_tipos_via COMPILE;
ALTER VIEW &OWNER..GN_v_tipos_organizacion COMPILE;
ALTER VIEW &OWNER..TR_v_plantillas_office COMPILE;
ALTER VIEW &OWNER..TR_v_variables_tipdoc COMPILE;
ALTER VIEW &OWNER..TR_v_usuarios_x_perfiles COMPILE;
ALTER VIEW &OWNER..TR_v_transiciones COMPILE;
ALTER VIEW &OWNER..TR_v_imagenes COMPILE;
ALTER VIEW &OWNER..TR_v_variables_docexp COMPILE;
ALTER VIEW &OWNER..TR_v_relaciones COMPILE;
ALTER VIEW &OWNER..TR_v_parrafos_tipdocs COMPILE;
ALTER VIEW &OWNER..TR_v_parametros_variables COMPILE;
ALTER VIEW &OWNER..TR_v_parametros_bloques COMPILE;
ALTER VIEW &OWNER..TR_v_firmas_tipdocs COMPILE;
ALTER VIEW &OWNER..TR_v_documentos_permitidos COMPILE;
ALTER VIEW &OWNER..TR_v_documentos_delegados COMPILE;
ALTER VIEW &OWNER..TR_v_condacc_x_transiciones COMPILE;
ALTER VIEW &OWNER..TR_v_condacc_x_docpertipevos COMPILE;
ALTER VIEW &OWNER..TR_v_condacc_x_bloqpertipevos COMPILE;
ALTER VIEW &OWNER..TR_v_organismos_expediente COMPILE;
ALTER VIEW &OWNER..TR_v_usuarios_asignados COMPILE;
ALTER VIEW &OWNER..TR_v_relaciones_expediente COMPILE;
ALTER VIEW &OWNER..TR_v_interesados_expediente COMPILE;
ALTER VIEW &OWNER..TR_v_sim COMPILE;
ALTER VIEW &OWNER..GN_v_tipos_organismo COMPILE;
ALTER VIEW &OWNER..GN_v_tipos_identificador COMPILE;
ALTER VIEW &OWNER..GN_v_puesto_trab COMPILE;
ALTER VIEW &OWNER..GN_v_ptos_uni_org COMPILE;
ALTER VIEW &OWNER..GN_v_provincias COMPILE;
ALTER VIEW &OWNER..GN_v_paises COMPILE;
ALTER VIEW &OWNER..GN_v_municipios COMPILE;
ALTER VIEW &OWNER..GN_v_mod_invocar COMPILE;
ALTER VIEW &OWNER..GN_v_modulos COMPILE;
ALTER VIEW &OWNER..GN_v_errores COMPILE;
ALTER VIEW &OWNER..GN_v_empleados COMPILE;
ALTER VIEW &OWNER..GN_v_constantes COMPILE;
ALTER VIEW &OWNER..TR_v_pagos_tasas COMPILE;
ALTER VIEW &OWNER..TR_v_tareas_expediente COMPILE;
ALTER VIEW &OWNER..TR_v_parrafos_docexps COMPILE;
ALTER VIEW &OWNER..TR_v_parametros_documentos COMPILE;
ALTER VIEW &OWNER..TR_v_firmas_docexp COMPILE;
ALTER VIEW &OWNER..TR_v_firmas COMPILE;
ALTER VIEW &OWNER..TR_v_tipos_evoluciones COMPILE;
ALTER VIEW &OWNER..TR_v_interesados_documento COMPILE;
ALTER VIEW &OWNER..TR_v_registros_docexp COMPILE;
ALTER VIEW &OWNER..TR_v_notificaciones_inte COMPILE;
ALTER VIEW &OWNER..TR_v_relaciones_interesado COMPILE;
ALTER VIEW &OWNER..TR_v_defprocs_gr COMPILE;
ALTER VIEW &OWNER..TR_v_caducidades COMPILE;
ALTER VIEW &OWNER..TR_v_comunicaciones COMPILE;
ALTER VIEW &OWNER..TR_v_tipcer_x_tipos_evol COMPILE;
ALTER VIEW &OWNER..TR_v_organismos_procedimiento COMPILE;
ALTER VIEW &OWNER..TR_v_versiones_flujos COMPILE;
ALTER VIEW &OWNER..TR_v_transiciones_x_procs COMPILE;
ALTER VIEW &OWNER..TR_v_transevol_x_perfiles COMPILE;
ALTER VIEW &OWNER..TR_v_plantillas_procedimiento COMPILE;
ALTER VIEW &OWNER..TR_v_normativas_procedimiento COMPILE;
ALTER VIEW &OWNER..TR_v_indicaciones_ficha COMPILE;
ALTER VIEW &OWNER..TR_v_expedientes_en_fase COMPILE;
ALTER VIEW &OWNER..TR_v_docper_x_tipos_evol COMPILE;
ALTER VIEW &OWNER..TR_v_docperevol_x_perfiles COMPILE;
ALTER VIEW &OWNER..TR_v_cambios_evolexps COMPILE;
ALTER VIEW &OWNER..TR_v_bloqpers_x_tipos_evols COMPILE;
ALTER VIEW &OWNER..TR_v_bloqperevol_x_perfiles COMPILE;
ALTER VIEW &OWNER..TR_v_registro_operaciones COMPILE;
ALTER VIEW &OWNER..TR_v_limites_relacion COMPILE;
ALTER VIEW &OWNER..TR_v_metafases_gr COMPILE;
ALTER VIEW &OWNER..TR_v_limites_caducidades COMPILE;
ALTER VIEW &OWNER..TR_v_extremostran_gr COMPILE;
ALTER VIEW &OWNER..TR_v_consultas_cert COMPILE;
ALTER VIEW &OWNER..TR_v_registros COMPILE;
ALTER VIEW &OWNER..TR_v_notificaciones_envio COMPILE;
ALTER VIEW &OWNER..TR_v_transiciones_gr COMPILE;
ALTER VIEW &OWNER..TR_v_caducidades_exps COMPILE;
ALTER VIEW &OWNER..TR_v_notificaciones_remesas COMPILE;
ALTER VIEW &OWNER..TR_v_nodostran_gr COMPILE;
ALTER VIEW &OWNER..TR_v_modificaciones_caducidad COMPILE;
ALTER VIEW &OWNER..TR_v_avisos_caducidades COMPILE;

COMMIT;
